{
  "version": 3,
  "sources": ["../../../src/infrastructure/store.js", "../../../src/sal/primitives/validation_error.js", "../../../src/sal/primitives/entity.js", "../../../src/sal/primitives/index.js", "../../../src/sal/fields/BaseField.js", "../../../src/sal/components/fields/BaseFieldModule.js", "../../../src/sal/components/fields/BlobModule.js", "../../../src/sal/components/fields/CheckboxModule.js", "../../../src/sal/components/fields/DateModule.js", "../../../src/sal/components/fields/LookupModule.js", "../../../src/sal/components/fields/PeopleModule.js", "../../../src/sal/components/fields/SearchSelectModule.js", "../../../src/sal/components/fields/SelectModule.js", "../../../src/sal/components/fields/TextAreaModule.js", "../../../src/sal/components/fields/TextModule.js", "../../../src/sal/components/fields/index.js", "../../../src/sal/fields/BlobField.js", "../../../src/sal/fields/CheckboxField.js", "../../../src/sal/fields/DateField.js", "../../../src/sal/fields/LookupField.js", "../../../src/sal/infrastructure/entity_utilities.js", "../../../src/sal/entities/People.js", "../../../src/sal/entities/SitePage.js", "../../../src/sal/entities/index.js", "../../../src/env.js", "../../../src/sal/infrastructure/knockout_extensions.js", "../../../src/sal/infrastructure/register_components.js", "../../../src/sal/infrastructure/sal.js", "../../../src/sal/infrastructure/authorization.js", "../../../src/sal/infrastructure/index.js", "../../../src/sal/fields/PeopleField.js", "../../../src/sal/fields/SelectField.js", "../../../src/sal/fields/TextAreaField.js", "../../../src/sal/fields/TextField.js", "../../../src/sal/fields/index.js", "../../../src/sal/primitives/constrained_entity.js", "../../../src/entities/audit_coversheet.js", "../../../src/entities/audit_email.js", "../../../src/entities/audit_organization.js", "../../../src/entities/audit_request.js", "../../../src/entities/audit_bulk_request.js", "../../../src/value_objects/comment.js", "../../../src/value_objects/active_viewer.js", "../../../src/components/active_viewers/active_viewers_module.js", "../../../src/components/comment_chain/CommentChainTemplate.js", "../../../src/components/comment_chain/comment_chain_module.js", "../../../src/entities/audit_request_internal.js", "../../../src/services/people_manager.js", "../../../src/entities/audit_response.js", "../../../src/entities/audit_bulk_response.js", "../../../src/entities/audit_response_doc.js", "../../../src/entities/audit_response_doc_ro.js", "../../../src/entities/audit_ro_email_log.js", "../../../src/entities/config.js", "../../../src/entities/index.js", "../../../src/sal/orm.js", "../../../src/sal/index.js", "../../../src/infrastructure/application_db_context.js", "../../../src/common/utilities.js", "../../../src/pages/ao_db/AO_DB_Template.js", "../../../src/common/router.js", "../../../src/components/tabs/tabs_module.js", "../../../src/pages/ao_db/ao_db.js", "../../../src/services/approvals_service.js", "../../../src/services/audit_email_service.js", "../../../src/services/permission_manager.js", "../../../src/value_objects/task.js", "../../../src/services/tasks.js", "../../../src/services/audit_request_service.js", "../../../src/services/coversheet_manager.js", "../../../src/services/audit_response_service.js", "../../../src/sal/components/modal/modalDialog.js", "../../../src/sal/components/modal/ModalDialogTemplate.js", "../../../src/services/index.js", "../../../src/services/legacy_helpers.js"],
  "sourcesContent": ["import { ORGROLES, ORGTYPES } from \"../entities/index.js\";\r\nexport const configurationsStore = {};\r\n\r\nexport const auditOrganizationStore = ko.observableArray();\r\n\r\nexport const allActionOfficesFilter = (org) =>\r\n  ORGROLES.ACTIONOFFICE == org.Role;\r\n\r\nexport const allRequestingOfficesFilter = (org) =>\r\n  ORGROLES.REQUESTINGOFFICE == org.Role;\r\n", "export class ValidationError {\r\n  constructor(source, type, description) {\r\n    this.source = source;\r\n    this.type = type;\r\n    this.description = description;\r\n  }\r\n}\r\n", "export class Entity {\r\n  constructor(params) {\r\n    if (params?.ID) this.ID = params.ID;\r\n    if (params?.Title) this.Title = params.Title;\r\n  }\r\n\r\n  ObservableID = ko.observable();\r\n  ObservableTitle = ko.observable();\r\n\r\n  get id() {\r\n    return this.ObservableID();\r\n  }\r\n\r\n  set id(val) {\r\n    this.ObservableID(val);\r\n  }\r\n\r\n  get Title() {\r\n    return this.ObservableTitle();\r\n  }\r\n\r\n  set Title(val) {\r\n    this.ObservableTitle(val);\r\n  }\r\n}\r\n", "export * from \"./validation_error.js\";\r\nexport * from \"./entity.js\";\r\nexport * from \"./constrained_entity.js\";\r\n", "import { ValidationError } from \"../primitives/validation_error.js\";\r\n\r\nexport class BaseField {\r\n  constructor({\r\n    displayName,\r\n    systemName,\r\n    instructions = null,\r\n    isRequired = false,\r\n    width,\r\n    classList = [],\r\n    Visible = ko.pureComputed(() => true),\r\n  }) {\r\n    this.displayName = displayName;\r\n    this.systemName = systemName;\r\n    this.instructions = instructions;\r\n    this.isRequired = isRequired;\r\n    this.Visible = Visible;\r\n    this.width = width ? \"col-md-\" + width : \"col-md-6\";\r\n    this.classList = classList;\r\n\r\n    this.addFieldRequirement(isRequiredValidationRequirement(this));\r\n  }\r\n\r\n  Value = ko.observable();\r\n\r\n  get = () => this.Value();\r\n  set = (val) => this.Value(val);\r\n  clear = () => {\r\n    if (ko.isObservableArray(this.Value)) this.Value([]);\r\n    else this.Value(null);\r\n  };\r\n\r\n  toString = ko.pureComputed(() => this.Value());\r\n\r\n  toJSON = () => this.Value();\r\n  fromJSON = (val) => this.Value(val);\r\n\r\n  validate = (showErrors = true) => {\r\n    this.ShowErrors(showErrors);\r\n    return this.Errors();\r\n  };\r\n\r\n  _fieldValidationRequirements = ko.observableArray();\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    if (!this.Visible()) return [];\r\n    const errors = this._fieldValidationRequirements()\r\n      .filter((req) => req.requirement())\r\n      .map((req) => req.error);\r\n\r\n    return errors;\r\n  });\r\n\r\n  addFieldRequirement = (requirement) =>\r\n    this._fieldValidationRequirements.push(requirement);\r\n\r\n  IsValid = ko.pureComputed(() => !this.Errors().length);\r\n\r\n  ShowErrors = ko.observable(false);\r\n\r\n  ValidationClass = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return;\r\n    return this.Errors().length ? \"is-invalid\" : \"is-valid\";\r\n  });\r\n}\r\n\r\nfunction isRequiredValidationRequirement(field) {\r\n  return {\r\n    requirement: ko.pureComputed(() => {\r\n      // Return true if field fails validation\r\n      const isRequired = ko.unwrap(field.isRequired);\r\n      if (!isRequired) return false;\r\n\r\n      const value = ko.unwrap(field.Value);\r\n      if (value?.constructor == Array) return !value.length;\r\n      return value === null || value === undefined;\r\n    }),\r\n    error: new ValidationError(\r\n      \"text-field\",\r\n      \"required-field\",\r\n      `${ko.utils.unwrapObservable(field.displayName)} is required!`\r\n    ),\r\n  };\r\n}\r\n", "// Hint: use the es6-string-html VS Code module to make template literals easier to read\r\nexport const html = String.raw;\r\n\r\nexport function registerFieldComponents(constructor) {\r\n  ko.components.register(constructor.edit, {\r\n    template: constructor.editTemplate,\r\n    viewModel: constructor,\r\n  });\r\n\r\n  ko.components.register(constructor.view, {\r\n    template: constructor.viewTemplate,\r\n    viewModel: constructor,\r\n  });\r\n}\r\n\r\nexport class BaseFieldModule {\r\n  constructor(params) {\r\n    Object.assign(this, params);\r\n  }\r\n\r\n  _id;\r\n  getUniqueId = () => {\r\n    if (!this._id) {\r\n      this._id = \"field-\" + Math.floor(Math.random() * 10000);\r\n    }\r\n    return this._id;\r\n  };\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return [];\r\n    if (!this.isRequired) return [];\r\n    return this.Value()\r\n      ? []\r\n      : [\r\n          new ValidationError(\r\n            \"text-field\",\r\n            \"required-field\",\r\n            this.displayName + ` is required!`\r\n          ),\r\n        ];\r\n  });\r\n\r\n  ShowErrors = ko.observable(false);\r\n\r\n  ValidationClass = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return;\r\n    return this.Errors().length ? \"is-invalid\" : \"is-valid\";\r\n  });\r\n\r\n  static viewTemplate = html`\r\n    <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n    <div data-bind=\"text: toString()\"></div>\r\n  `;\r\n\r\n  static editTemplate = html`<div>Uh oh!</div>`;\r\n}\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"component: {name: Value()?.components.edit, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString\"></td>\r\n        <!-- /ko -->\r\n        <td>\r\n          <i\r\n            title=\"remove item\"\r\n            class=\"fa-solid fa-trash pointer\"\r\n            data-bind=\"click: $parent.remove.bind(row)\"\r\n          ></i>\r\n        </td>\r\n      </tr>\r\n      <!-- /ko -->\r\n      <tr>\r\n        <!-- ko foreach: NewItem()?.FormFields -->\r\n        <td>\r\n          <div\r\n            data-bind=\"component: {name: components.edit, params: $data}\"\r\n          ></div>\r\n        </td>\r\n        <!-- /ko -->\r\n        <td class=\"align-bottom\">\r\n          <button\r\n            title=\"add and new\"\r\n            type=\"button\"\r\n            data-bind=\"click: submit\"\r\n            class=\"btn btn-success\"\r\n          >\r\n            Add +\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <!-- ko if: Value -->\r\n  <div\r\n    data-bind=\"component: {name: Value().components.view, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString()\"></td>\r\n        <!-- /ko -->\r\n      </tr>\r\n      <!-- /ko -->\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class BlobModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"blob-view\";\r\n  static edit = \"blob-edit\";\r\n  static new = \"blob-edit\";\r\n}\r\n\r\nregisterFieldComponents(BlobModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value\"\r\n      />\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value\"\r\n        disabled\r\n      />\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nexport class CheckboxModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"checkbox-view\";\r\n  static edit = \"checkbox-edit\";\r\n  static new = \"checkbox-edit\";\r\n}\r\n\r\nregisterFieldComponents(CheckboxModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nexport const dateFieldTypes = {\r\n  date: \"date\",\r\n  datetime: \"datetime-local\",\r\n};\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"value: inputBinding, class: ValidationClass, attr: {'type': type}\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class DateModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  toInputDateString = () => this.Value().format(\"yyyy-MM-dd\");\r\n\r\n  toInputDateTimeString = () => this.Value().format(\"yyyy-MM-ddThh:mm\");\r\n\r\n  inputBinding = ko.pureComputed({\r\n    read: () => {\r\n      if (!this.Value()) return null;\r\n      switch (this.type) {\r\n        case dateFieldTypes.date:\r\n          return this.toInputDateString();\r\n        case dateFieldTypes.datetime:\r\n          return this.toInputDateTimeString();\r\n        default:\r\n          return null;\r\n      }\r\n    },\r\n    write: (val) => {\r\n      if (!val) return;\r\n      //writes in format\r\n      if (this.type == dateFieldTypes.datetime) {\r\n        this.Value(new Date(val));\r\n        return;\r\n      }\r\n\r\n      // make sure we're using midnight local time\r\n      this.Value(new Date(val + \"T00:00\"));\r\n    },\r\n  });\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"date-view\";\r\n  static edit = \"date-edit\";\r\n  static new = \"date-edit\";\r\n}\r\n\r\nregisterFieldComponents(DateModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: isSearch -->\r\n    <div data-bind=\"text: toString()\"></div>\r\n    <input class=\"form-control\" data-bind=\"\" />\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isSearch -->\r\n    <!-- ko if: Options().length -->\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n  selectedOptions: Value,\r\n  optionsText: optionsText,\r\n  class: ValidationClass\"\r\n    ></select>\r\n    <div class=\"fw-light flex justify-between\">\r\n      <p class=\"fst-italic\">Hold ctrl to select multiple</p>\r\n      <button type=\"button\" class=\"btn btn-link h-1\" data-bind=\"click: clear\">\r\n        CLEAR\r\n      </button>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: Options, \r\n    optionsCaption: 'Select...', \r\n    value: Value,\r\n    optionsText: optionsText,\r\n    class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class LookupModule extends BaseFieldModule {\r\n  constructor(field) {\r\n    super(field);\r\n    this.onSearchInput = field.onSearchInput;\r\n    this.multiple = field.multiple ?? false;\r\n  }\r\n\r\n  // selectedOptions = ko.pureComputed({\r\n  //   read: () => {\r\n  //     if (this.multiple) return this.Value();\r\n  //     return ko.unwrap(this.Value) ? [ko.unwrap(this.Value)] : [];\r\n  //   },\r\n  //   write: (val) => {\r\n  //     if (this.multiple) {\r\n  //       this.Value(val);\r\n  //       return;\r\n  //     }\r\n\r\n  //     if (val.length) {\r\n  //       this.Value(val[0]);\r\n  //       return;\r\n  //     }\r\n  //     this.Value(null);\r\n  //   },\r\n  // });\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"lookup-view\";\r\n  static edit = \"lookup-edit\";\r\n  static new = \"lookup-edit\";\r\n}\r\n\r\nregisterFieldComponents(LookupModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold w-100\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko ifnot: spGroupId -->\r\n    <div\r\n      data-bind=\"attr: {id: getUniqueId()}, \r\n      people: Value, \r\n      pickerOptions: pickerOptions,\r\n      class: ValidationClass\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowUserSelect -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: userOpts, \r\n        optionsCaption: 'Select...', \r\n        optionsText: 'Title',\r\n        value: ValueFunc,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: toString -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"text: toString, \r\n      attr: {title: Value()?.LoginName}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <ul data-bind=\"foreach: Value\">\r\n    <li data-bind=\"attr: {title: LoginName}, text: Title\"></li>\r\n  </ul>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: toString -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class PeopleModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  ValueFunc = ko.pureComputed({\r\n    read: () => {\r\n      if (!this.Value()) return;\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      return userOpts.find((opt) => opt.ID == this.Value().ID);\r\n    },\r\n    write: (opt) => {\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      if (!userOpts) return;\r\n      this.Value(opt);\r\n    },\r\n  });\r\n\r\n  ShowUserSelect = ko.pureComputed(() => {\r\n    // We don't care to unwrap this, since we want to know if it's set or an observable.\r\n    const groupName = this.spGroupName;\r\n    if (!groupName) return false;\r\n    const options = ko.unwrap(this.userOpts);\r\n    return options.length;\r\n  });\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"people-view\";\r\n  static edit = \"people-edit\";\r\n  static new = \"people-edit\";\r\n}\r\n\r\nregisterFieldComponents(PeopleModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </label>\r\n  <search-select\r\n    class=\"form-select\"\r\n    data-bind=\"searchSelect: { \r\n      options: Options, \r\n      selectedOptions: Value,\r\n      optionsText: optionsText,\r\n      onSearchInput: onSearchInput\r\n    }\"\r\n  >\r\n  </search-select>\r\n  <div class=\"fw-light flex justify-between\">\r\n    <p class=\"fst-italic\"></p>\r\n    <button type=\"button\" class=\"btn btn-link h-1\" data-bind=\"click: clear\">\r\n      CLEAR\r\n    </button>\r\n  </div>\r\n  <!-- ko if: instructions -->\r\n  <div\r\n    class=\"fw-lighter fst-italic text-secondary\"\r\n    data-bind=\"html: instructions\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SearchSelectModule extends BaseFieldModule {\r\n  constructor(field) {\r\n    super(field);\r\n    this.Options = field.Options;\r\n    this.Value = field.Value;\r\n    this.optionsText =\r\n      field.optionsText ??\r\n      ((val) => {\r\n        return val;\r\n      });\r\n    this.multiple = field.multiple;\r\n    this.OptionsCaption = field.OptionsCaption ?? \"Select...\";\r\n    this.onSearchInput = field.onSearchInput;\r\n  }\r\n\r\n  GetSelectedOptions = ko.pureComputed(() => {\r\n    if (this.multiple) return this.Value();\r\n\r\n    return this.Value() ? [this.Value()] : [];\r\n  });\r\n\r\n  InputGroupFocused = ko.observable();\r\n  setFocus = () => this.InputGroupFocused(true);\r\n\r\n  FilterText = ko.observable();\r\n  FilteredOptions = ko.pureComputed(() =>\r\n    this.Options().filter((option) => {\r\n      if (this.GetSelectedOptions().indexOf(option) >= 0) return false;\r\n      if (this.FilterText())\r\n        return this.optionsText(option)\r\n          .toLowerCase()\r\n          .includes(this.FilterText().toLowerCase());\r\n      return true;\r\n    })\r\n  );\r\n\r\n  addSelection = (option, e) => {\r\n    console.log(\"selected\", option);\r\n    if (e.target.nextElementSibling) {\r\n      //e.stopPropagation();\r\n      e.target.nextElementSibling.focus();\r\n    }\r\n    if (this.multiple) {\r\n      this.Value.push(option);\r\n    } else {\r\n      this.Value(option);\r\n    }\r\n  };\r\n\r\n  removeSelection = (option) =>\r\n    this.multiple ? this.Value.remove(option) : this.Value(null);\r\n\r\n  setInputGroupFocus = () => {\r\n    this.InputGroupFocused(true);\r\n    clearTimeout(this.focusOutTimeout);\r\n  };\r\n\r\n  removeInputGroupFocus = (data, e) => {\r\n    this.focusOutTimeout = window.setTimeout(() => {\r\n      this.InputGroupFocused(false);\r\n    }, 0);\r\n  };\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"search-select-view\";\r\n  static edit = \"search-select-edit\";\r\n  static new = \"search-select-new\";\r\n}\r\n\r\nregisterFieldComponents(SearchSelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        optionsText: optionsText,\r\n        selectedOptions: Value,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <div class=\"fst-italic fw-light\">Hold ctrl to select multiple.</div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        optionsText: optionsText,\r\n        value: Value,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SelectModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"select-view\";\r\n  static edit = \"select-edit\";\r\n  static new = \"select-edit\";\r\n}\r\n\r\nregisterFieldComponents(SelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"component field\">\r\n    <!-- ko if: isRichText -->\r\n    <label class=\"fw-semibold\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span\r\n      >:</label\r\n    >\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <div\r\n      class=\"richtext-field\"\r\n      data-bind=\"childrenComplete: childrenHaveLoaded\"\r\n    >\r\n      <!-- Create the editor container -->\r\n      <div\r\n        class=\"form-control\"\r\n        data-bind=\"attr: {'id': getUniqueId()}, class: ValidationClass\"\r\n        style=\"height: 150px\"\r\n      >\r\n        <div data-bind=\"html: Value\"></div>\r\n      </div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isRichText -->\r\n    <label class=\"fw-semibold\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n      <textarea\r\n        name=\"\"\r\n        id=\"\"\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        class=\"form-control\"\r\n        data-bind=\"textInput: Value, class: ValidationClass, attr: attr\"\r\n      ></textarea>\r\n    </label>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowErrors -->\r\n    <!-- ko foreach: Errors -->\r\n    <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: Value -->\r\n  <!-- ko if: isRichText -->\r\n  <div data-bind=\"html: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: isRichText -->\r\n  <div data-bind=\"text: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: Value -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextAreaModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  childrenHaveLoaded = (nodes) => {\r\n    this.initializeEditor();\r\n  };\r\n\r\n  getToolbarId = () => \"toolbar-\" + this.getUniqueId();\r\n\r\n  initializeEditor() {\r\n    const toolbarOptions = [\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n      [\"link\"],\r\n      [\"blockquote\", \"code-block\"],\r\n\r\n      [{ header: 1 }, { header: 2 }], // custom button values\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n      [{ direction: \"rtl\" }], // text direction\r\n\r\n      [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [{ font: [] }],\r\n      [{ align: [] }],\r\n\r\n      [\"clean\"], // remove formatting button\r\n    ];\r\n\r\n    // debugger;\r\n    var editor = new Quill(\"#\" + this.getUniqueId(), {\r\n      modules: { toolbar: toolbarOptions },\r\n      theme: \"snow\",\r\n    });\r\n\r\n    const Value = this.Value;\r\n\r\n    Value.subscribe((val) => {\r\n      if (val == \"\") {\r\n        editor.setText(\"\");\r\n      }\r\n    });\r\n\r\n    editor.on(\"text-change\", function (delta, oldDelta, source) {\r\n      Value(editor.root.textContent ? editor.root.innerHTML : \"\");\r\n    });\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-area-view\";\r\n  static edit = \"text-area-edit\";\r\n  static new = \"text-area-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextAreaModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"textInput: Value, class: ValidationClass, attr: attr\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-view\";\r\n  static edit = \"text-edit\";\r\n  static new = \"text-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextModule);\r\n", "export * from \"./BaseFieldModule.js\";\r\nexport * from \"./BlobModule.js\";\r\nexport * from \"./CheckboxModule.js\";\r\nexport * from \"./DateModule.js\";\r\nexport * from \"./LookupModule.js\";\r\nexport * from \"./PeopleModule.js\";\r\nexport * from \"./SearchSelectModule.js\";\r\nexport * from \"./SelectModule.js\";\r\nexport * from \"./TextAreaModule.js\";\r\nexport * from \"./TextModule.js\";\r\n", "import { BaseField } from \"./index.js\";\r\nimport { BlobModule } from \"../components/fields/index.js\";\r\n\r\nexport class BlobField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.entityType = params.entityType;\r\n    this.multiple = params.multiple;\r\n\r\n    if (this.multiple) {\r\n      this.Value = ko.observableArray();\r\n    }\r\n\r\n    if (ko.isObservable(this.entityType)) {\r\n      this.entityType.subscribe(this.updateEntityTypeHandler);\r\n      // this.Value.subscribe(this.updateEntityTypeHandler);\r\n    }\r\n    this.updateEntityTypeHandler(ko.unwrap(this.entityType));\r\n  }\r\n\r\n  toString = ko.pureComputed(() => `${this.Value()?.length ?? \"0\"} items`);\r\n\r\n  toJSON = ko.pureComputed(() => {\r\n    if (!this.multiple) return this.Value()?.toJSON();\r\n    return this.Value().map((value) => value.toJSON());\r\n  });\r\n\r\n  fromJSON = (input) => {\r\n    if (!input) return;\r\n    if (!this.multiple) {\r\n      this.Value()?.fromJSON(input);\r\n      return;\r\n    }\r\n    this.Value.removeAll();\r\n    input.map((obj) => {\r\n      const newEntity = new this.entityConstructor();\r\n      newEntity.fromJSON(obj);\r\n      this.Value.push(newEntity);\r\n    });\r\n  };\r\n\r\n  // TypedValues = ko.observableArray();\r\n  // TypedValue = ko.observable();\r\n\r\n  // Value = ko.pureComputed(() =>\r\n  //   this.multiple ? this.TypedValues() : this.TypedValue()\r\n  // );\r\n\r\n  get = () => {\r\n    return JSON.stringify(this.toJSON());\r\n  };\r\n\r\n  blob;\r\n  set = (val) => {\r\n    if (window.DEBUG) console.log(val);\r\n    this.blob = val;\r\n    if (val?.constructor == BlobField) {\r\n      // this.fromJSON(val.toJSON());\r\n      return;\r\n    }\r\n    this.fromJSON(JSON.parse(val));\r\n  };\r\n\r\n  get entityConstructor() {\r\n    return ko.utils.unwrapObservable(this.entityType);\r\n  }\r\n\r\n  // use purecomputed for memoization, fields shouldn't change\r\n  Cols = ko.pureComputed(() => {\r\n    const entityType = ko.unwrap(this.entityType);\r\n    if (!entityType) return [];\r\n\r\n    const newEntity = new this.entityConstructor();\r\n\r\n    return newEntity.FormFields();\r\n  });\r\n\r\n  // ColKeys = ko.pureComputed(() =>\r\n  //   new this.entityConstructor()?.FormFieldKeys()\r\n  // );\r\n\r\n  // Support multiple items\r\n  NewItem = ko.observable();\r\n\r\n  submit = () => {\r\n    const errors = this.NewItem()?.validate();\r\n    if (errors.length) return;\r\n\r\n    this.Value.push(this.NewItem());\r\n\r\n    this.NewItem(new this.entityConstructor());\r\n  };\r\n\r\n  add = (item) => this.Value.push(item);\r\n  remove = (item) => this.Value.remove(item);\r\n\r\n  updateEntityTypeHandler = (newType) => {\r\n    if (!newType) return;\r\n\r\n    if (!this.multiple) {\r\n      this.Value(new this.entityConstructor());\r\n    } else {\r\n      this.NewItem(new this.entityConstructor());\r\n    }\r\n    if (this.blob) this.fromJSON(JSON.parse(this.blob));\r\n\r\n    // this.applyValueToTypedValues();\r\n  };\r\n\r\n  applyValueToTypedValues = () => {\r\n    // if (!this.Value() || !this.TypedValue()) return;\r\n    // if (!this.multiple) {\r\n    //   mapObjectToEntity(this.Value(), this.TypedValue());\r\n    //   return;\r\n    // }\r\n    // const typedItems = this.Value()?.map((item) => {\r\n    //   const newEntity = new this.entityConstructor();\r\n    //   mapObjectToEntity(item, newEntity);\r\n    //   return newEntity;\r\n    // });\r\n    // this.TypedValues(typedItems);\r\n  };\r\n\r\n  // Errors = ko.pureComputed(() => {\r\n  //   if (!this.Visible()) return [];\r\n  //   // const isRequired = ko.unwrap(this.isRequired);\r\n  //   const isRequired =\r\n  //     typeof this.isRequired == \"function\"\r\n  //       ? this.isRequired()\r\n  //       : this.isRequired;\r\n  //   if (!isRequired) return [];\r\n  //   const currentValue = this.multiple ? this.TypedValues() : this.TypedValue();\r\n  //   return currentValue\r\n  //     ? []\r\n  //     : [\r\n  //         new ValidationError(\r\n  //           \"text-field\",\r\n  //           \"required-field\",\r\n  //           (typeof this.displayName == \"function\"\r\n  //             ? this.displayName()\r\n  //             : this.displayName) + ` is required!`\r\n  //         ),\r\n  //       ];\r\n  // });\r\n\r\n  components = BlobModule;\r\n}\r\n", "import { BaseField } from \"./index.js\";\r\nimport { CheckboxModule } from \"../components/fields/index.js\";\r\n\r\nexport class CheckboxField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  components = CheckboxModule;\r\n}\r\n", "import { DateModule, dateFieldTypes } from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\n// Re-export datefield types instead of allowing anything to reference the graphical component\r\nexport { dateFieldTypes } from \"../components/fields/index.js\";\r\n\r\n/**\r\n * This field needs to convert between locale and UTC Dates stored on the server;\r\n */\r\n\r\nexport class DateField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.type = params.type ?? dateFieldTypes.date;\r\n  }\r\n\r\n  toString = ko.pureComputed(() => {\r\n    // if this is datetime vs date we expect different things\r\n    switch (this.type) {\r\n      case dateFieldTypes.date:\r\n        return this.toLocaleDateString();\r\n      case dateFieldTypes.datetime:\r\n        return this.toLocaleString();\r\n      default:\r\n        return \"\";\r\n    }\r\n  });\r\n\r\n  toSortableDateString = () => this.Value()?.format(\"yyyy-MM-dd\");\r\n  toLocaleDateString = () => this.Value()?.toLocaleDateString();\r\n  toLocaleString = () => this.Value()?.toLocaleString();\r\n\r\n  get = ko.pureComputed(() => {\r\n    if (!this.Value() || isNaN(this.Value().valueOf())) {\r\n      return null;\r\n    }\r\n\r\n    return this.Value().toISOString();\r\n  });\r\n\r\n  set = (newDate) => {\r\n    if (!newDate) return null;\r\n    if (newDate.constructor.getName() != \"Date\") {\r\n      // console.warn(\"Attempting to set date\", newDate);\r\n      newDate = new Date(newDate);\r\n    }\r\n    if (newDate.getTimezoneOffset()) {\r\n    }\r\n    this.Value(newDate);\r\n  };\r\n\r\n  components = DateModule;\r\n}\r\n", "import {\r\n  LookupModule,\r\n  SearchSelectModule,\r\n  SelectModule,\r\n} from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport class LookupField extends BaseField {\r\n  constructor({\r\n    displayName,\r\n    type: entityType,\r\n    isRequired = false,\r\n    Visible,\r\n    entitySet,\r\n    options = ko.observableArray(),\r\n    optionsFilter = null,\r\n    optionsText = null,\r\n    multiple = false,\r\n    lookupCol = null,\r\n    instructions,\r\n  }) {\r\n    super({ Visible, displayName, isRequired, instructions });\r\n    // Support passing in options\r\n    // if options are not passed, assume this is a search input\r\n    if (!options) {\r\n      this.isSearch = true;\r\n    } else {\r\n      this.isSearch = false;\r\n      this.allOpts = options;\r\n    }\r\n    this.isSearch = !options;\r\n    this.multiple = multiple;\r\n    this.Value = multiple ? ko.observableArray() : ko.observable();\r\n\r\n    this.entityType = entityType;\r\n    this.entitySet = entitySet;\r\n    this.lookupCol = lookupCol ?? \"Title\";\r\n    this.optionsText = optionsText ?? ((item) => item[this.lookupCol]);\r\n    if (optionsFilter) this.optionsFilter = optionsFilter;\r\n\r\n    this.components = multiple ? SearchSelectModule : LookupModule;\r\n  }\r\n\r\n  isSearch = false;\r\n\r\n  allOpts;\r\n  optionsFilter = (val) => val;\r\n\r\n  Options = ko.pureComputed(() => {\r\n    const optsFilter = ko.unwrap(this.optionsFilter);\r\n    const allOpts = ko.unwrap(this.allOpts);\r\n    return allOpts.filter(optsFilter);\r\n  });\r\n\r\n  IsLoading = ko.observable(false);\r\n  HasLoaded = ko.observable(false);\r\n\r\n  // TODO: Started this, should really go in the entity base class if we're doing active record\r\n  // create = async () => {\r\n  //   const newItems = this.multiple ? this.Value() : [this.Value()]\r\n  //   newItems.map(item => this.entitySet.AddEntity(newItems))\r\n  // }\r\n\r\n  refresh = async () => {\r\n    if (!!!this.Value()) {\r\n      return;\r\n    }\r\n    this.IsLoading(true);\r\n    if (!this.multiple) {\r\n      await this.entitySet.LoadEntity(this.Value());\r\n      this.IsLoading(false);\r\n      this.HasLoaded(true);\r\n      return;\r\n    }\r\n\r\n    await Promise.all(\r\n      this.Value().map(\r\n        async (entity) => await this.entitySet.LoadEntity(entity)\r\n      )\r\n    );\r\n    this.IsLoading(false);\r\n    this.HasLoaded(true);\r\n  };\r\n\r\n  ensure = async () => {\r\n    if (this.HasLoaded()) return;\r\n    if (this.IsLoading()) {\r\n      return new Promise((resolve, reject) => {\r\n        const isLoadingSubscription = this.IsLoading.subscribe((isLoading) => {\r\n          if (!isLoading) {\r\n            isLoadingSubscription.dispose();\r\n            resolve();\r\n          }\r\n        });\r\n      });\r\n    }\r\n    await this.refresh();\r\n  };\r\n\r\n  toString = ko.pureComputed(() => {\r\n    if (!!!this.Value()) {\r\n      return \"\";\r\n    }\r\n    if (this.multiple) {\r\n      return this.Value()\r\n        .map((val) => getEntityPropertyAsString(val, this.lookupCol))\r\n        .join(\", \");\r\n    }\r\n    return getEntityPropertyAsString(this.Value(), this.lookupCol);\r\n  });\r\n\r\n  get = () => {\r\n    if (!this.Value()) return;\r\n    if (this.multiple) {\r\n      return this.Value().map((entity) => {\r\n        return {\r\n          ID: entity.ID,\r\n          LookupValue: entity.LookupValue,\r\n          Title: entity.Title,\r\n        };\r\n      });\r\n    }\r\n    const entity = this.Value();\r\n    return {\r\n      ID: entity.ID,\r\n      LookupValue: entity.LookupValue,\r\n      Title: entity.Title,\r\n    };\r\n  };\r\n\r\n  set = (val) => {\r\n    if (!val) {\r\n      this.Value(val);\r\n      return;\r\n    }\r\n    if (this.multiple) {\r\n      const valArr = Array.isArray(val) ? val : val.results ?? val.split(\"#;\");\r\n\r\n      this.Value(valArr.map((value) => this.findOrCreateNewEntity(value)));\r\n      return;\r\n    }\r\n\r\n    this.Value(this.findOrCreateNewEntity(val));\r\n    if (val && !this.toString()) {\r\n      // this.ensure();\r\n    }\r\n  };\r\n\r\n  findOrCreateNewEntity = (val) => {\r\n    if (this.entityType.FindInStore) {\r\n      const foundEntity = this.entityType.FindInStore(val);\r\n      if (foundEntity) return foundEntity;\r\n      console.warn(\r\n        `Could not find entity in store: ${this.entityType.name}`,\r\n        val\r\n      );\r\n    }\r\n\r\n    const optionEntity = this.allOpts().find((entity) => entity.ID == val.ID);\r\n    if (optionEntity) return optionEntity;\r\n\r\n    if (this.entityType.Create) {\r\n      return this.entityType.Create(val);\r\n    }\r\n\r\n    const newEntity = new this.entityType();\r\n    newEntity.ID = val.ID;\r\n    // Kick off the load process in the background\r\n    this.entitySet.LoadEntity(newEntity);\r\n\r\n    return newEntity;\r\n  };\r\n}\r\n\r\n// Should fully constrain all entities, this is ridiculous\r\nfunction getEntityPropertyAsString(entity, column) {\r\n  if (entity.FieldMap && entity.FieldMap[column]) {\r\n    const field = entity.FieldMap[column];\r\n    if (typeof field == \"function\") {\r\n      return field();\r\n    }\r\n\r\n    if (field.toString && typeof field.toString == \"function\") {\r\n      return field.toString();\r\n    }\r\n\r\n    if (field.get && typeof field.get == \"function\") {\r\n      return field.get();\r\n    }\r\n\r\n    if (field.obs) {\r\n      return field.obs();\r\n    }\r\n\r\n    return field;\r\n  }\r\n  return entity[column] ?? \"\";\r\n}\r\n", "export const sortByTitle = (a, b) => {\r\n  if (a.Title > b.Title) {\r\n    return 1;\r\n  }\r\n  if (a.Title < b.Title) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const sortByField = (field) => (a, b) => {\r\n  if (a[field] > b[field]) {\r\n    return 1;\r\n  }\r\n  if (a[field] < b[field]) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const createNewRequestTitle = () => {\r\n  const ts = new Date();\r\n  return ts.format(\"yyMMdd\") + \"-\" + (ts.getTime() % 100000);\r\n};\r\n", "export class People {\r\n  constructor({\r\n    ID,\r\n    Title,\r\n    LoginName = null,\r\n    IsGroup = null,\r\n    IsEnsured = false,\r\n  }) {\r\n    this.ID = ID;\r\n    this.Title = Title;\r\n    this.LookupValue = Title;\r\n    this.LoginName = LoginName != \"\" ? LoginName : null;\r\n    this.IsGroup = IsGroup;\r\n    // Has the user data been fetched? Used for binding handlers.\r\n    this.IsEnsured = IsEnsured;\r\n  }\r\n\r\n  ID = null;\r\n  Title = null;\r\n  LoginName = null;\r\n  LookupValue = null;\r\n\r\n  getKey = () => this.LoginName ?? this.Title;\r\n\r\n  static Create = function (props) {\r\n    if (!props || (!props.ID && !(props.Title || props.LookupValue)))\r\n      return null;\r\n    return new People({\r\n      ...props,\r\n      Title: props.Title ?? props.LookupValue,\r\n    });\r\n  };\r\n}\r\n", "import { Entity } from \"../primitives/index.js\";\r\n\r\nexport class SitePage extends Entity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Created\", \"Author\", \"Modified\", \"Editor\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"SitePages\",\r\n    title: \"Site Pages\",\r\n  };\r\n}\r\n", "export * from \"./People.js\";\r\nexport * from \"./SitePage.js\";\r\n", "export const assetsPath = `${_spPageContextInfo.siteServerRelativeUrl}/Style Library/apps/audit/src`;\r\n", "import { People } from \"../entities/index.js\";\r\nimport { ensureUserByKeyAsync } from \"./index.js\";\r\nimport { assetsPath } from \"../../env.js\";\r\n\r\nko.subscribable.fn.subscribeChanged = function (callback) {\r\n  var oldValue;\r\n  this.subscribe(\r\n    function (_oldValue) {\r\n      oldValue = _oldValue;\r\n    },\r\n    this,\r\n    \"beforeChange\"\r\n  );\r\n\r\n  this.subscribe(function (newValue) {\r\n    callback(newValue, oldValue);\r\n  });\r\n};\r\n\r\nko.observableArray.fn.subscribeAdded = function (callback) {\r\n  this.subscribe(\r\n    function (arrayChanges) {\r\n      const addedValues = arrayChanges\r\n        .filter((value) => value.status == \"added\")\r\n        .map((value) => value.value);\r\n      callback(addedValues);\r\n    },\r\n    this,\r\n    \"arrayChange\"\r\n  );\r\n};\r\n\r\nko.bindingHandlers.searchSelect = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {\r\n    const { options, selectedOptions, optionsText, onSearchInput } =\r\n      valueAccessor();\r\n\r\n    function populateOpts() {\r\n      const optionItems = ko.unwrap(options);\r\n\r\n      const selectedOpts = ko.unwrap(selectedOptions) ?? [];\r\n\r\n      const optionElements = optionItems.map((option) => {\r\n        const optionElement = document.createElement(\"option\");\r\n        ko.selectExtensions.writeValue(optionElement, ko.unwrap(option));\r\n        // optionElement.value = option;\r\n        optionElement.innerText = optionsText(option);\r\n\r\n        if (\r\n          selectedOpts?.find((selectedOption) => {\r\n            if (option.ID && selectedOption.ID == option.ID) return true;\r\n            if (option == selectedOption) return true;\r\n            return false;\r\n          })\r\n        ) {\r\n          optionElement.setAttribute(\"selected\", \"\");\r\n        }\r\n        return optionElement;\r\n      });\r\n\r\n      element.append(...optionElements);\r\n    }\r\n\r\n    populateOpts();\r\n\r\n    if (ko.isObservable(options)) {\r\n      options.subscribe(() => populateOpts(), this);\r\n    }\r\n\r\n    ko.utils.registerEventHandler(element, \"change\", (e) => {\r\n      selectedOptions(\r\n        element.selectedOptions.map((opt) => ko.selectExtensions.readValue(opt))\r\n      );\r\n    });\r\n\r\n    if (onSearchInput) {\r\n      ko.utils.registerEventHandler(element, \"input\", (e) => {\r\n        onSearchInput(e.originalEvent.target.searchInputElement.value);\r\n      });\r\n    }\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const { selectedOptions } = valueAccessor();\r\n    const selectedUnwrapped = ko.unwrap(selectedOptions);\r\n\r\n    for (var i = 0; i < element.options.length; i++) {\r\n      const o = element.options[i];\r\n      o.toggleAttribute(\r\n        \"selected\",\r\n        selectedUnwrapped.includes(ko.selectExtensions.readValue(o))\r\n      );\r\n    }\r\n\r\n    // element.selectedOptions = ko.unwrap(selectedOptions);\r\n  },\r\n};\r\n\r\nko.bindingHandlers.people = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {\r\n    var schema = {};\r\n    schema[\"PrincipalAccountType\"] = \"User\";\r\n    schema[\"SearchPrincipalSource\"] = 15;\r\n    schema[\"ShowUserPresence\"] = true;\r\n    schema[\"ResolvePrincipalSource\"] = 15;\r\n    schema[\"AllowEmailAddresses\"] = true;\r\n    schema[\"AllowMultipleValues\"] = false;\r\n    schema[\"MaximumEntitySuggestions\"] = 50;\r\n    //schema[\"Width\"] = \"280px\";\r\n    schema[\"OnUserResolvedClientScript\"] = async function (elemId, userKeys) {\r\n      //  get reference of People Picker Control\r\n      var pickerControl = SPClientPeoplePicker.SPClientPeoplePickerDict[elemId];\r\n      var observable = valueAccessor();\r\n      var userJSObject = pickerControl.GetControlValueAsJSObject()[0];\r\n      if (!userJSObject) {\r\n        observable(null);\r\n        return;\r\n      }\r\n\r\n      if (userJSObject.IsResolved) {\r\n        if (userJSObject.Key == observable()?.LoginName) return;\r\n        var user = await ensureUserByKeyAsync(userJSObject.Key);\r\n        var person = new People(user);\r\n        observable(person);\r\n      }\r\n    };\r\n\r\n    // TODO: Minor - accept schema settings as options\r\n    //var mergedOptions = Object.assign(schema, obs.schemaOpts);\r\n\r\n    //  Initialize the Control, MS enforces to pass the Element ID hence we need to provide\r\n    //  ID to our element, no other options\r\n    SPClientPeoplePicker_InitStandaloneControlWrapper(element.id, null, schema);\r\n    // const helpDiv = document.createElement(\"div\");\r\n    // helpDiv.innerHTML = \"Search surname first e.g. Smith, John\";\r\n    // helpDiv.classList.add(\"fst-italic\", \"fw-lighter\");\r\n    // element.appendChild(helpDiv);\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    var pickerControl =\r\n      SPClientPeoplePicker.SPClientPeoplePickerDict[element.id + \"_TopSpan\"];\r\n    var userValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n    if (!userValue) {\r\n      // Clear the form\r\n      pickerControl?.DeleteProcessedUser();\r\n      return;\r\n    }\r\n\r\n    if (\r\n      userValue &&\r\n      !pickerControl\r\n        .GetAllUserInfo()\r\n        .find((pickerUser) => pickerUser.DisplayText == userValue.LookupValue)\r\n    ) {\r\n      pickerControl.AddUserKeys(\r\n        userValue.LoginName ?? userValue.LookupValue ?? userValue.Title\r\n      );\r\n    }\r\n  },\r\n};\r\n\r\nko.bindingHandlers.dateField = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {},\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {},\r\n};\r\n\r\nko.bindingHandlers.downloadLink = {\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    var path = valueAccessor();\r\n    var replaced = path.replace(/:([A-Za-z_]+)/g, function (_, token) {\r\n      return ko.unwrap(viewModel[token]);\r\n    });\r\n    element.href = replaced;\r\n  },\r\n};\r\n\r\nko.bindingHandlers.files = {\r\n  init: function (element, valueAccessor) {\r\n    function addFiles(fileList) {\r\n      var value = valueAccessor();\r\n      if (!fileList.length) {\r\n        value.removeAll();\r\n        return;\r\n      }\r\n\r\n      const existingFiles = ko.unwrap(value);\r\n      const newFileList = [];\r\n      for (let file of fileList) {\r\n        if (!existingFiles.find((exFile) => exFile.name == file.name))\r\n          newFileList.push(file);\r\n      }\r\n      ko.utils.arrayPushAll(value, newFileList);\r\n      return;\r\n    }\r\n\r\n    ko.utils.registerEventHandler(element, \"change\", function () {\r\n      addFiles(element.files);\r\n    });\r\n\r\n    const label = element.closest(\"label\");\r\n    if (!label) return;\r\n\r\n    ko.utils.registerEventHandler(label, \"dragover\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragenter\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.add(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragleave\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.remove(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"drop\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let dt = event.originalEvent.dataTransfer;\r\n      let files = dt.files;\r\n      addFiles(files);\r\n    });\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const value = valueAccessor();\r\n    if (!value().length && element.files.length) {\r\n      // clear all files\r\n      element.value = null;\r\n      return;\r\n    }\r\n\r\n    return;\r\n  },\r\n};\r\n\r\nko.bindingHandlers.toggleClick = {\r\n  init: function (element, valueAccessor, allBindings) {\r\n    var value = valueAccessor();\r\n\r\n    ko.utils.registerEventHandler(element, \"click\", function () {\r\n      var classToToggle = allBindings.get(\"toggleClass\");\r\n      var classContainer = allBindings.get(\"classContainer\");\r\n      var containerType = allBindings.get(\"containerType\");\r\n\r\n      if (containerType && containerType == \"sibling\") {\r\n        $(element)\r\n          .nextUntil(classContainer)\r\n          .each(function () {\r\n            $(this).toggleClass(classToToggle);\r\n          });\r\n      } else if (containerType && containerType == \"doc\") {\r\n        var curIcon = $(element).attr(\"src\");\r\n        if (curIcon == \"/_layouts/images/minus.gif\")\r\n          $(element).attr(\"src\", \"/_layouts/images/plus.gif\");\r\n        else $(element).attr(\"src\", \"/_layouts/images/minus.gif\");\r\n\r\n        if ($(element).parent() && $(element).parent().parent()) {\r\n          $(element)\r\n            .parent()\r\n            .parent()\r\n            .nextUntil(classContainer)\r\n            .each(function () {\r\n              $(this).toggleClass(classToToggle);\r\n            });\r\n        }\r\n      } else if (containerType && containerType == \"any\") {\r\n        if ($(\".\" + classToToggle).is(\":visible\"))\r\n          $(\".\" + classToToggle).hide();\r\n        else $(\".\" + classToToggle).show();\r\n      } else $(element).find(classContainer).toggleClass(classToToggle);\r\n    });\r\n  },\r\n};\r\n\r\nko.bindingHandlers.toggles = {\r\n  init: function (element, valueAccessor) {\r\n    var value = valueAccessor();\r\n\r\n    ko.utils.registerEventHandler(element, \"click\", function () {\r\n      value(!value());\r\n    });\r\n  },\r\n};\r\n\r\nconst fromPathTemplateLoader = {\r\n  loadTemplate: function (name, templateConfig, callback) {\r\n    if (templateConfig.fromPath) {\r\n      // TODO: Minor - fix error catching and fallback flow\r\n      fetch(assetsPath + templateConfig.fromPath)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\r\n              `Error Fetching HTML Template - ${response.statusText}`\r\n            );\r\n          }\r\n          return response.text();\r\n        })\r\n        .catch((error) => {\r\n          if (!templateConfig.fallback) return;\r\n          console.warn(\r\n            \"Primary template not found, attempting fallback\",\r\n            templateConfig\r\n          );\r\n          fetch(assetsPath + templateConfig.fallback)\r\n            .then((response) => {\r\n              if (!response.ok) {\r\n                throw new Error(\r\n                  `Error Fetching fallback HTML Template - ${response.statusText}`\r\n                );\r\n              }\r\n              return response.text();\r\n            })\r\n            .then((text) =>\r\n              ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            );\r\n        })\r\n        .then((text) =>\r\n          text\r\n            ? ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            : null\r\n        );\r\n    } else {\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathTemplateLoader);\r\n\r\nconst fromPathViewModelLoader = {\r\n  loadViewModel: function (name, viewModelConfig, callback) {\r\n    if (viewModelConfig.viaLoader) {\r\n      // console.log(\"loading module\", name);\r\n      const module = import(assetsPath + viewModelConfig.viaLoader).then(\r\n        (module) => {\r\n          // console.log(\"imported module\", name);\r\n          const viewModelConstructor = module.default;\r\n          // We need a createViewModel function, not a plain constructor.\r\n          // We can use the default loader to convert to the\r\n          // required format.\r\n          ko.components.defaultLoader.loadViewModel(\r\n            name,\r\n            viewModelConstructor,\r\n            callback\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      // Unrecognized config format. Let another loader handle it.\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathViewModelLoader);\r\n", "export const html = String.raw;\r\n\r\nexport function registerComponent({\r\n  name,\r\n  folder,\r\n  module = null,\r\n  moduleFilename = null,\r\n  template: templateFilename,\r\n}) {\r\n  if (ko.components.isRegistered(name)) {\r\n    return;\r\n  }\r\n  if (moduleFilename || module) {\r\n    ko.components.register(name, {\r\n      template: {\r\n        fromPath: `/components/${folder}/${templateFilename}.html`,\r\n      },\r\n      viewModel: module ?? {\r\n        viaLoader: `/components/${folder}/${moduleFilename}.js`,\r\n      },\r\n    });\r\n  } else {\r\n    ko.components.register(name, {\r\n      template: {\r\n        fromPath: `/components/${folder}/${templateFilename}.html`,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport function directRegisterComponent(name, { template, viewModel = null }) {\r\n  ko.components.register(name, {\r\n    template,\r\n    viewModel,\r\n  });\r\n}\r\n\r\nexport function registerFieldComponent({\r\n  name,\r\n  components,\r\n  viewModel = null,\r\n  folder = null,\r\n}) {\r\n  // register both our view and edit\r\n  folder = folder ?? name;\r\n\r\n  Object.keys(components).map((view) => {\r\n    const componentName = components[view];\r\n    if (ko.components.isRegistered(componentName)) {\r\n      return;\r\n    }\r\n\r\n    // See if we already have this element in the dom\r\n    const elementName = `field-` + componentName;\r\n    const fieldViewElement = document.getElementById(elementName);\r\n\r\n    if (!viewModel) {\r\n      debugger;\r\n    }\r\n    ko.components.register(componentName, {\r\n      template: fieldViewElement\r\n        ? {\r\n            element: fieldViewElement,\r\n          }\r\n        : {\r\n            fromPath: `/sal/components/fields/${folder}/${name}${view}.html`,\r\n          },\r\n      viewModel: viewModel ?? {\r\n        viaLoader: `/sal/components/fields/${folder}/${name}Module.js`,\r\n      },\r\n    });\r\n  });\r\n}\r\n", "/*\r\n    SharePoint Acces Layer - sal.js\r\n\r\n    Abstract any functions that rely on reading or setting SP items to here.\r\n\r\n    Create a new \"Connection\" object type that will store information for \r\n    interfacing with a specific list.\r\n\r\n    Author: Peter Backlund \r\n    Contact: backlundpf <@> state.gov\r\n    Created: 2019-02-12\r\n*/\r\n\r\n/*\r\n  TODO:\r\n  - migrate to rest api\r\n  - remove new from \"new SP.ClientContext.get_current()\"\r\n  - standardize currctx\r\n  - remove unused functions\r\n  - Combine functions \r\n*/\r\n\r\nwindow.console = window.console || { log: function () {} };\r\n\r\nwindow.sal = window.sal ?? {};\r\nvar sal = window.sal;\r\n\r\nconst serverRelativeUrl =\r\n  _spPageContextInfo.webServerRelativeUrl == \"/\"\r\n    ? \"\"\r\n    : _spPageContextInfo.webServerRelativeUrl;\r\n\r\nsal.globalConfig = sal.globalConfig || {\r\n  siteGroups: [],\r\n  siteUrl: serverRelativeUrl,\r\n  listServices: serverRelativeUrl + \"/_vti_bin/ListData.svc/\",\r\n  defaultGroups: {},\r\n};\r\nsal.site = sal.site || {};\r\n\r\nwindow.DEBUG = true;\r\n\r\nexport function executeQuery(currCtx) {\r\n  return new Promise((resolve, reject) =>\r\n    currCtx.executeQueryAsync(resolve, (sender, args) => {\r\n      reject({ sender, args });\r\n    })\r\n  );\r\n}\r\n\r\nfunction principalToPeople(oPrincipal, isGroup = null) {\r\n  return {\r\n    ID: oPrincipal.get_id(),\r\n    Title: oPrincipal.get_title(),\r\n    LoginName: oPrincipal.get_loginName(),\r\n    IsEnsured: true,\r\n    IsGroup:\r\n      isGroup != null\r\n        ? isGroup\r\n        : oPrincipal.constructor.getName() == \"SP.Group\",\r\n    oPrincipal,\r\n  };\r\n}\r\n\r\n// Used in authorization\r\nexport function getDefaultGroups() {\r\n  const defaultGroups = sal.globalConfig.defaultGroups;\r\n  const result = {};\r\n  Object.keys(defaultGroups).forEach((key) => {\r\n    result[key] = principalToPeople(defaultGroups[key], true);\r\n  });\r\n  return result;\r\n}\r\n\r\nconst siteGroups = {};\r\n\r\nexport async function getGroupUsers(groupName) {\r\n  if (siteGroups[groupName]?.Users?.constructor == Array) {\r\n    return siteGroups[groupName].Users;\r\n  }\r\n  const url = `/web/sitegroups/GetByName('${groupName}')?$expand=Users`;\r\n\r\n  const groupResult = await fetchSharePointData(url);\r\n\r\n  const group = groupResult.d;\r\n  group.Users = group.Users?.results;\r\n\r\n  siteGroups[groupName] = group;\r\n  return group.Users;\r\n}\r\n\r\n// Used in router\r\nexport const webRoot =\r\n  _spPageContextInfo.webAbsoluteUrl == \"/\"\r\n    ? \"\"\r\n    : _spPageContextInfo.webAbsoluteUrl;\r\n\r\nexport async function InitSal() {\r\n  if (sal.utilities) return;\r\n  console.log(\"Init Sal\");\r\n  var currCtx = SP.ClientContext.get_current();\r\n  var web = currCtx.get_web();\r\n  //sal.site = sal.siteConnection;\r\n\r\n  // Get default groups\r\n  sal.globalConfig.defaultGroups = {\r\n    owners: web.get_associatedOwnerGroup(),\r\n    members: web.get_associatedMemberGroup(),\r\n    visitors: web.get_associatedVisitorGroup(),\r\n  };\r\n  currCtx.load(sal.globalConfig.defaultGroups.owners);\r\n  currCtx.load(sal.globalConfig.defaultGroups.members);\r\n  currCtx.load(sal.globalConfig.defaultGroups.visitors);\r\n\r\n  // Get Current User information\r\n  var user = web.get_currentUser(); //must load this to access info.\r\n  currCtx.load(user);\r\n\r\n  // Get the site groups\r\n  var siteGroupCollection = web.get_siteGroups();\r\n  currCtx.load(siteGroupCollection);\r\n\r\n  // Get the roles upfront so we can validate they're present on the site.\r\n  sal.globalConfig.roles = [];\r\n  var oRoleDefinitions = currCtx.get_web().get_roleDefinitions();\r\n  currCtx.load(oRoleDefinitions);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    currCtx.executeQueryAsync(\r\n      function () {\r\n        sal.globalConfig.currentUser = user;\r\n\r\n        var listItemEnumerator = siteGroupCollection.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItem = listItemEnumerator.get_current();\r\n          sal.globalConfig.siteGroups.push(principalToPeople(oListItem));\r\n        }\r\n\r\n        // Role Definitions\r\n        var oEnumerator = oRoleDefinitions.getEnumerator();\r\n        while (oEnumerator.moveNext()) {\r\n          var oRoleDefinition = oEnumerator.get_current();\r\n          sal.globalConfig.roles.push(oRoleDefinition.get_name());\r\n        }\r\n\r\n        sal.config = new sal.NewAppConfig();\r\n        sal.utilities = new sal.NewUtilities();\r\n        resolve();\r\n      },\r\n      function (sender, args) {\r\n        alert(\"Error initializing SAL\");\r\n        reject();\r\n      }\r\n    );\r\n  });\r\n  // console.log()\r\n}\r\n\r\nsal.NewAppConfig = function () {\r\n  // TODO: We should take in configuration from our current application, roles/groups etc.\r\n  var siteRoles = {};\r\n  siteRoles.roles = {\r\n    FullControl: \"Full Control\",\r\n    Design: \"Design\",\r\n    Edit: \"Edit\",\r\n    Contribute: \"Contribute\",\r\n    RestrictedContribute: \"Restricted Contribute\",\r\n    InitialCreate: \"Initial Create\",\r\n    Read: \"Read\",\r\n    RestrictedRead: \"Restricted Read\",\r\n    LimitedAccess: \"Limited Access\",\r\n  };\r\n  siteRoles.fulfillsRole = function (inputRole, targetRole) {\r\n    // the site roles are already in authoritative order\r\n    const roles = Object.values(siteRoles.roles);\r\n    if (!roles.includes(inputRole) || !roles.includes(targetRole)) return false;\r\n\r\n    return roles.indexOf(inputRole) <= roles.indexOf(targetRole);\r\n  };\r\n\r\n  siteRoles.validate = function () {\r\n    Object.keys(siteRoles.roles).forEach(function (role) {\r\n      var roleName = siteRoles.roles[role];\r\n      if (!sal.globalConfig.roles.includes(roleName)) {\r\n        console.error(roleName + \" is not in the global roles list\");\r\n      } else {\r\n        console.log(roleName);\r\n      }\r\n    });\r\n  };\r\n\r\n  var siteGroups = {\r\n    groups: {\r\n      Owners: \"workorder Owners\",\r\n      Members: \"workorder Members\",\r\n      Visitors: \"workorder Visitors\",\r\n      RestrictedReaders: \"Restricted Readers\",\r\n    },\r\n  };\r\n\r\n  var publicMembers = {\r\n    siteRoles,\r\n    siteGroups,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\n// Used in Authorization\r\nexport async function getUserPropsAsync(userId = _spPageContextInfo.userId) {\r\n  // We need to make two api calls, one to user info list, and one to web\r\n  // const userInfoUrl = `/Web/lists/getbytitle('User%20Information%20List')/Items(${userId})`;\r\n  const userPropsUrl = `/sp.userprofiles.peoplemanager/getmyproperties`;\r\n  // const userGroupUrl = `/Web/GetUserById(${userId})/Groups`;\r\n\r\n  // Get more user info:\r\n  const userInfoUrl = `/Web/GetUserById(${userId})/?$expand=Groups`;\r\n\r\n  const userInfo = (await fetchSharePointData(userInfoUrl)).d;\r\n\r\n  // TODO: See if we can just select the properties we need\r\n  // const userPropsUrl = `/sp.userprofiles.peoplemanager/getpropertiesfor(@v)?@v='${encodeURIComponent(\r\n  //   userInfo.LoginName\r\n  // )}'`;\r\n\r\n  const userProps = (await fetchSharePointData(userPropsUrl))?.d\r\n    .UserProfileProperties.results;\r\n\r\n  function findPropValue(props, key) {\r\n    return props.find((prop) => prop.Key == key)?.Value;\r\n  }\r\n\r\n  return {\r\n    ID: userId,\r\n    Title: userInfo.Title,\r\n    LoginName: userInfo.LoginName,\r\n    WorkPhone: findPropValue(userProps, \"WorkPhone\"),\r\n    EMail: findPropValue(userProps, \"WorkEmail\"), // TODO: Do we still need this spelling?\r\n    IsEnsured: true,\r\n    IsGroup: false,\r\n    Groups: userInfo.Groups?.results?.map((group) => {\r\n      return {\r\n        ...group,\r\n        ID: group.Id,\r\n        IsGroup: true,\r\n        IsEnsured: true,\r\n      };\r\n    }),\r\n  };\r\n}\r\n\r\n// TODO: DEPRECATED remove after verification\r\nasync function getUserPropsAsyncDeprecated() {\r\n  // TODO: We aren't getting the phone number, need to query userprofile service\r\n  return new Promise((resolve, reject) => {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oUser = web.get_currentUser();\r\n    var oGroups = oUser.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      const user = {\r\n        ID: oUser.get_id(),\r\n        Title: oUser.get_title(),\r\n        LoginName: oUser.get_loginName(),\r\n        IsEnsured: true,\r\n        IsGroup: false,\r\n        Groups: [],\r\n      };\r\n\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        user.Groups.push(principalToPeople(oGroup));\r\n      }\r\n      resolve(user);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    currCtx.load(oUser);\r\n    currCtx.load(oGroups);\r\n    const data = { oUser, oGroups, resolve, reject };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  });\r\n}\r\n\r\nsal.NewUtilities = function () {\r\n  // TODO: Split this up into UserManager, GroupManager, etc\r\n  function createSiteGroup(groupName, permissions, callback) {\r\n    /* groupName: the name of the new SP Group\r\n     *  permissions: an array of permissions to assign to the group\r\n     * groupOwner: the name of the owner group\r\n     */\r\n    callback = callback === undefined ? null : callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var groupCreationInfo = new SP.GroupCreationInformation();\r\n    groupCreationInfo.set_title(groupName);\r\n    this.oGroup = oWebsite.get_siteGroups().add(groupCreationInfo);\r\n    oGroup.set_owner(oWebsite.get_associatedOwnerGroup());\r\n\r\n    oGroup.update();\r\n    var collRoleDefinitionBinding =\r\n      SP.RoleDefinitionBindingCollection.newObject(clientContext);\r\n\r\n    this.oRoleDefinitions = [];\r\n\r\n    permissions.forEach(function (perm) {\r\n      var oRoleDefinition = oWebsite.get_roleDefinitions().getByName(perm);\r\n      this.oRoleDefinitions.push(oRoleDefinition);\r\n      collRoleDefinitionBinding.add(oRoleDefinition);\r\n    });\r\n\r\n    var collRollAssignment = oWebsite.get_roleAssignments();\r\n    collRollAssignment.add(oGroup, collRoleDefinitionBinding);\r\n\r\n    function onCreateGroupSucceeded() {\r\n      var roleInfo =\r\n        oGroup.get_title() +\r\n        \" created and assigned to \" +\r\n        oRoleDefinitions.forEach(function (rd) {\r\n          rd + \", \";\r\n        });\r\n      if (callback) {\r\n        callback(oGroup.get_id());\r\n      }\r\n      console.log(roleInfo);\r\n    }\r\n\r\n    function onCreateGroupFailed(sender, args) {\r\n      alert(\r\n        groupnName +\r\n          \" - Create group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    clientContext.load(oGroup, \"Title\");\r\n\r\n    var data = {\r\n      groupName: groupName,\r\n      oGroup: oGroup,\r\n      oRoleDefinition: oRoleDefinition,\r\n      callback: callback,\r\n    };\r\n\r\n    clientContext.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateGroupSucceeded),\r\n      Function.createDelegate(data, onCreateGroupFailed)\r\n    );\r\n  }\r\n\r\n  function getUserGroups(user, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var everyone = web.ensureUser(user);\r\n    var oGroups = everyone.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      var groups = new Array();\r\n      var groupsInfo = new String();\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        var group = principalToPeople(oGroup);\r\n\r\n        groupsInfo +=\r\n          \"\\n\" +\r\n          \"Group ID: \" +\r\n          oGroup.get_id() +\r\n          \", \" +\r\n          \"Title : \" +\r\n          oGroup.get_title();\r\n        groups.push(group);\r\n      }\r\n      console.log(groupsInfo.toString());\r\n      callback(groups);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    currCtx.load(everyone);\r\n    currCtx.load(oGroups);\r\n    data = { everyone: everyone, oGroups: oGroups, callback: callback };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  }\r\n\r\n  function getUsersWithGroup(oGroup, callback) {\r\n    var context = new SP.ClientContext.get_current();\r\n\r\n    var oUsers = oGroup.get_users();\r\n\r\n    function onGetUserSuccess() {\r\n      var userObjs = [];\r\n      var userEnumerator = oUsers.getEnumerator();\r\n      while (userEnumerator.moveNext()) {\r\n        var oUser = userEnumerator.get_current();\r\n        var userObj = principalToPeople(oUser);\r\n        userObjs.push(userObj);\r\n      }\r\n      callback(userObjs);\r\n    }\r\n\r\n    function onGetUserFailed(sender, args) {}\r\n\r\n    var data = { oUsers: oUsers, callback: callback };\r\n    context.load(oUsers);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onGetUserSuccess),\r\n      Function.createDelegate(data, onGetUserFailed)\r\n    );\r\n  }\r\n\r\n  function copyFiles(sourceLib, destLib, callback, onError) {\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourceLib);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        console.log(\"Got the source folder right here!\");\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destLib + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \") + args.get_message();\r\n            onError;\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.log(\"Sorry, something messed up: \" + args.get_message());\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n\r\n  var publicMembers = {\r\n    copyFiles: copyFiles,\r\n    copyFilesAsync,\r\n    createSiteGroup: createSiteGroup,\r\n    getUserGroups: getUserGroups,\r\n    getUsersWithGroup: getUsersWithGroup,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\nexport async function copyFileAsync(sourceFilePath, destFilePath) {\r\n  const uri = `/web/getfilebyserverrelativeurl('${sourceFilePath}')/copyto('${destFilePath}')`;\r\n\r\n  const result = await fetchSharePointData(uri, \"POST\");\r\n\r\n  return result;\r\n}\r\n\r\n// Used in Authorization\r\nasync function getCurrentUserPropertiesAsync() {\r\n  var headers = {\r\n    \"Content-Type\": \"application/json;odata=verbose\",\r\n    \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n  };\r\n  try {\r\n    var response = await fetch(\r\n      _spPageContextInfo.webAbsoluteUrl +\r\n        \"/_api/SP.UserProfiles.PeopleManager/GetMyProperties\",\r\n      {\r\n        method: \"GET\",\r\n        headers,\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(response.status);\r\n    }\r\n\r\n    const data = await response.json();\r\n    sal.globalConfig.currentUserProfile = data.d;\r\n    const requestorPhone = data.d.UserProfileProperties.results.find(function (\r\n      prop\r\n    ) {\r\n      return prop.Key == \"WorkPhone\";\r\n    }).Value;\r\n  } catch (error) {\r\n    console.error(\"Unable to fetch User Properties:\", error);\r\n  }\r\n}\r\n\r\n// Used in Knockout people custom binding\r\nexport async function ensureUserByKeyAsync(userName) {\r\n  return new Promise((resolve, reject) => {\r\n    var group = sal.globalConfig.siteGroups.find(function (group) {\r\n      return group.LoginName == userName;\r\n    });\r\n\r\n    if (group) {\r\n      resolve(group);\r\n      return;\r\n    }\r\n\r\n    var context = new SP.ClientContext.get_current();\r\n    var oUser = context.get_web().ensureUser(userName);\r\n\r\n    function onEnsureUserSucceeded(sender, args) {\r\n      const user = principalToPeople(oUser);\r\n      resolve(user);\r\n    }\r\n\r\n    function onEnsureUserFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to ensure user :\" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    const data = { oUser, resolve, reject };\r\n\r\n    context.load(oUser);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onEnsureUserSucceeded),\r\n      Function.createDelegate(data, onEnsureUserFailed)\r\n    );\r\n  });\r\n}\r\n\r\nfunction getSPSiteGroupByName(groupName) {\r\n  var userGroup = null;\r\n  if (this.globalConfig.siteGroups != null) {\r\n    userGroup = this.globalConfig.siteGroups.find(function (group) {\r\n      return group.Title == groupName;\r\n    });\r\n  }\r\n  return userGroup;\r\n}\r\n\r\nexport class ItemPermissions {\r\n  constructor({ hasUniqueRoleAssignments, roles }) {\r\n    this.hasUniqueRoleAssignments = hasUniqueRoleAssignments;\r\n    this.roles = roles;\r\n  }\r\n\r\n  hasUniqueRoleAssignments;\r\n  roles = [];\r\n\r\n  addPrincipalRole(principal, roleName) {\r\n    const newRoleDef = new RoleDef({ name: roleName });\r\n    const principalRole = this.getPrincipalRole(principal);\r\n\r\n    if (principalRole) {\r\n      principalRole.addRoleDef(newRoleDef);\r\n      return;\r\n    }\r\n\r\n    const newRole = new Role({ principal });\r\n    newRole.addRoleDef(newRoleDef);\r\n    this.roles.push(newRole);\r\n  }\r\n\r\n  getPrincipalRole(principal) {\r\n    return this.roles.find((role) => role.principal.ID == principal.ID);\r\n  }\r\n\r\n  principalHasPermissionKind(principal, permission) {\r\n    const role = this.getPrincipalRole(principal);\r\n    return role?.roleDefs.find((roleDef) =>\r\n      roleDef.basePermissions?.has(permission)\r\n    )\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  getValuePairs() {\r\n    // For backwards compatibility\r\n    return this.roles.flatMap((role) =>\r\n      role.roleDefs.map((roleDef) => [role.principal.Title, roleDef.name])\r\n    );\r\n  }\r\n\r\n  static fromRestResult(result) {\r\n    const roles = result.RoleAssignments.results.map(\r\n      Role.fromRestRoleAssignment\r\n    );\r\n\r\n    return new ItemPermissions({\r\n      hasUniqueRoleAssignments: result.HasUniqueRoleAssignments,\r\n      roles,\r\n    });\r\n  }\r\n}\r\n\r\nexport class Role {\r\n  constructor({ principal, roleDefs = [] }) {\r\n    this.principal = principal;\r\n    this.roleDefs = roleDefs;\r\n  }\r\n\r\n  principal; // People Entity\r\n  roleDefs = [];\r\n\r\n  addRoleDef(roleDef) {\r\n    this.roleDefs.push(roleDef);\r\n  }\r\n\r\n  static fromRestRoleAssignment(role) {\r\n    return new Role({\r\n      principal: { ...role.Member, ID: role.Member.Id },\r\n      roleDefs: role.RoleDefinitionBindings.results.map(\r\n        RoleDef.fromRestRoleDef\r\n      ),\r\n    });\r\n  }\r\n  static fromJsomRole(role) {\r\n    const newRole = new Role({\r\n      principal: principalToPeople(role.get_member()),\r\n    });\r\n\r\n    var roleDefs = role.get_roleDefinitionBindings();\r\n    if (roleDefs != null) {\r\n      var roleDefsEnumerator = roleDefs.getEnumerator();\r\n      while (roleDefsEnumerator.moveNext()) {\r\n        var roleDef = roleDefsEnumerator.get_current();\r\n        newRole.roleDefs.push(RoleDef.fromJsomRoleDef(roleDef));\r\n      }\r\n    }\r\n    return newRole;\r\n  }\r\n}\r\n\r\nexport class RoleDef {\r\n  constructor({ name, basePermissions = null }) {\r\n    this.name = name;\r\n    this.basePermissions = basePermissions;\r\n  }\r\n  name;\r\n  basePermissions;\r\n\r\n  static fromRestRoleDef(roleDef) {\r\n    const newRoleDef = new RoleDef({\r\n      name: roleDef.Name,\r\n      basePermissions: roleDef.BasePermissions,\r\n    });\r\n    Object.assign(newRoleDef, roleDef);\r\n    return newRoleDef;\r\n  }\r\n\r\n  static fromJsomRoleDef(roleDef) {\r\n    const newRoleDef = new RoleDef({ name: roleDef.get_name() });\r\n    newRoleDef.basePermissions = roleDef.get_basePermissions();\r\n\r\n    return newRoleDef;\r\n  }\r\n}\r\n\r\nexport function SPList(listDef) {\r\n  /*\r\n      Expecting a list definition object in the following format:\r\n        var assignmentListDef = {\r\n        name: \"Assignment\",\r\n        title: \"Assignment\"\r\n      };\r\n    */\r\n\r\n  /*****************************************************************\r\n                                Globals       \r\n    ******************************************************************/\r\n\r\n  var self = this;\r\n\r\n  self.config = {\r\n    def: listDef,\r\n  };\r\n\r\n  /*****************************************************************\r\n                                Common Private Methods       \r\n    ******************************************************************/\r\n  async function init() {\r\n    if (!self.config.fieldSchema) {\r\n      const listEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')?$expand=Fields`;\r\n      const list = await fetchSharePointData(listEndpoint);\r\n      // const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      //const fields = await fetchData(apiEndpoint);\r\n      self.config.guid = list.d.Id;\r\n      self.config.fieldSchema = list.d.Fields.results;\r\n    }\r\n  }\r\n\r\n  init();\r\n\r\n  /*****************************************************************\r\n                                Common Public Methods       \r\n    ******************************************************************/\r\n\r\n  async function setListPermissionsAsync(itemPermissions, reset) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    // await executeQuery(currCtx).catch((sender, args) => {\r\n    //   console.warn(\"Unable to get list: \", sender);\r\n    //   return;\r\n    // });\r\n\r\n    return setResourcePermissionsAsync(oList, itemPermissions, reset);\r\n  }\r\n\r\n  function setListPermissions(valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n\r\n    var users = new Array();\r\n    var resolvedGroups = new Array();\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup) {\r\n        resolvedGroups.push([resolvedGroup, vp[1]]);\r\n      } else {\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindItemSucceeded() {\r\n      console.log(\"Successfully found item\");\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      if (reset) {\r\n        oList.resetRoleInheritance();\r\n        oList.breakRoleInheritance(false, false);\r\n        oList\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        oList.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { oList: oList, callback: callback };\r\n\r\n      function onSetListPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        callback(oList);\r\n      }\r\n\r\n      function onSetListPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on List: \" +\r\n            this.oList.get_title() +\r\n            args.get_message() +\r\n            \"\\n\",\r\n          args.get_stackTrace()\r\n        );\r\n      }\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetListPermissionsSuccess),\r\n        Function.createDelegate(data, onSetListPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindItemFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to find List: \" + this.oList.get_title + args.get_message(),\r\n        args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      oList: oList,\r\n      users: users,\r\n      resolvedGroups: resolvedGroups,\r\n      callback: callback,\r\n    };\r\n    //let data = { title: oListItem.get_item(\"Title\"), oListItem: oListItem };\r\n\r\n    currCtx.load(oList);\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindItemSucceeded),\r\n      Function.createDelegate(data, onFindItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                                createListItem      \r\n    ******************************************************************/\r\n  function mapObjectToListItem(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    if (!Array.isArray(val)) {\r\n      return mapItemToListItem(val);\r\n    }\r\n    return val\r\n      .map((item) => {\r\n        return mapItemToListItem(item);\r\n      })\r\n      .join(\";#\");\r\n  }\r\n\r\n  function mapItemToListItem(item) {\r\n    if (item.ID) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return `${item.ID};#${item.LookupValue ?? \"\"}`;\r\n    }\r\n    if (item.LookupValue) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return item.LookupValue;\r\n    }\r\n    if (item.constructor.getName() == \"Date\") {\r\n      return item.toISOString();\r\n    }\r\n    return item;\r\n  }\r\n\r\n  function createListItemAsync(entity, folderPath = null) {\r\n    return new Promise((resolve, reject) => {\r\n      //self.updateConfig();\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n      if (folderPath) {\r\n        var folderUrl =\r\n          sal.globalConfig.siteUrl +\r\n          \"/Lists/\" +\r\n          self.config.def.name +\r\n          \"/\" +\r\n          folderPath;\r\n        itemCreateInfo.set_folderUrl(folderUrl);\r\n      }\r\n\r\n      const oListItem = oList.addItem(itemCreateInfo);\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onCreateListItemSucceeded() {\r\n        resolve(oListItem.get_id());\r\n      }\r\n\r\n      function onCreateListItemFailed(sender, args) {\r\n        console.error(\"Create Item Failed - List: \" + self.config.def.name);\r\n        console.error(\"ValuePairs\", entity);\r\n        console.error(sender, args);\r\n        reject(sender);\r\n      }\r\n\r\n      const data = { entity, oListItem, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onCreateListItemSucceeded),\r\n        Function.createDelegate(data, onCreateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                                getListItems      \r\n    ******************************************************************/\r\n  function mapListItemToObject(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    let out = {};\r\n    switch (val.constructor.getName()) {\r\n      case \"SP.FieldUserValue\":\r\n        out.LoginName = val.get_email();\r\n      case \"SP.FieldLookupValue\":\r\n        out.ID = val.get_lookupId();\r\n        out.LookupValue = val.get_lookupValue();\r\n        out.Title = val.get_lookupValue();\r\n        break;\r\n      default:\r\n        out = val;\r\n    }\r\n    return out;\r\n  }\r\n\r\n  function getListItems(caml, fields, callback) {\r\n    /*\r\n        Obtain all list items that match the querystring passed by caml.\r\n        */\r\n    var camlQuery = new SP.CamlQuery.createAllItemsQuery();\r\n\r\n    camlQuery.set_viewXml(caml);\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var collListItem = oList.getItems(camlQuery);\r\n\r\n    function onGetListItemsSucceeded() {\r\n      var self = this;\r\n      var listItemEnumerator = self.collListItem.getEnumerator();\r\n\r\n      const foundObjects = [];\r\n\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n        var listObj = {};\r\n        fields.forEach((field) => {\r\n          var colVal = oListItem.get_item(field);\r\n          //console.log(`SAL: Setting ${field} to`, colVal);\r\n          listObj[field] = Array.isArray(colVal)\r\n            ? colVal.map((val) => mapListItemToObject(val))\r\n            : mapListItemToObject(colVal);\r\n        });\r\n        //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n        // listObj.oListItem = oListItem;\r\n        foundObjects.push(listObj);\r\n      }\r\n      //this.setState({ focusedItems })\r\n      //console.log(\"calling callback get list\");\r\n      callback(foundObjects);\r\n    }\r\n\r\n    function onGetListItemsFailed(sender, args) {\r\n      console.log(\"unsuccessful read\", sender);\r\n\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      collListItem: collListItem,\r\n      callback: callback,\r\n      fields,\r\n      camlQuery,\r\n    };\r\n\r\n    currCtx.load(collListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemsSucceeded),\r\n      Function.createDelegate(data, onGetListItemsFailed)\r\n    );\r\n  }\r\n\r\n  function getListItemsAsync({ fields = null, caml = null }) {\r\n    if (!caml) {\r\n      var caml =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">0</Value>' +\r\n        \"</Eq></Where></Query></View>\";\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      getListItems(caml, fields, resolve);\r\n    });\r\n  }\r\n\r\n  function findByIdAsync(id, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        findById(id, fields, resolve);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  async function getById(id, fields) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n\r\n    const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/items(${id})?$Select=${queryFields}&$expand=${expandFields}`;\r\n\r\n    const result = await fetchSharePointData(apiEndpoint);\r\n    return result.d;\r\n  }\r\n\r\n  async function getListFields() {\r\n    if (!self.config.fieldSchema) {\r\n      const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      const fields = await fetchSharePointData(apiEndpoint);\r\n      self.config.fieldSchema = fields.d.results;\r\n    }\r\n    return self.config.fieldSchema;\r\n  }\r\n\r\n  async function getQueryFields(fields) {\r\n    const queryFields = [];\r\n    const expandFields = [];\r\n\r\n    const listFields = await getListFields();\r\n    fields.map((f) => {\r\n      // TODO: Figure out why FileRef is pretending to be a lookup\r\n      if (f == \"FileRef\") {\r\n        queryFields.push(f);\r\n        return;\r\n      }\r\n\r\n      if (f.includes(\"/\")) {\r\n        queryFields.push(f);\r\n        expandFields.push(f.split(\"/\")[0]);\r\n        return;\r\n      }\r\n      const fieldSchema = listFields.find((lf) => lf.StaticName == f);\r\n      if (!fieldSchema) {\r\n        alert(`Field '${f}' not found on list ${self.config.def.name}`);\r\n        return;\r\n      }\r\n\r\n      const idString = f + \"/ID\";\r\n      let titleString = f + \"/Title\";\r\n      switch (fieldSchema.TypeAsString) {\r\n        case \"LookupMulti\":\r\n        case \"Lookup\":\r\n          titleString = f + \"/\" + fieldSchema.LookupField;\r\n        case \"User\":\r\n          queryFields.push(idString);\r\n          queryFields.push(titleString);\r\n          expandFields.push(f);\r\n          // expandFields.push(titleString);\r\n          break;\r\n        case \"Choice\":\r\n        default:\r\n          queryFields.push(f);\r\n      }\r\n    });\r\n    return [queryFields, expandFields];\r\n  }\r\n\r\n  // { column, value, type = \"LookupValue\" }\r\n  async function findByColumnValueAsync(\r\n    columnFilters,\r\n    { orderByColumn = null, sortAsc },\r\n    { count = null, includePermissions = false, includeFolders = false },\r\n    fields\r\n  ) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n    if (includePermissions) {\r\n      queryFields.push(\"RoleAssignments\");\r\n      queryFields.push(\"HasUniqueRoleAssignments\");\r\n      expandFields.push(\"RoleAssignments\");\r\n    }\r\n    const orderBy = orderByColumn\r\n      ? `$orderby=${orderByColumn} ${sortAsc ? \"asc\" : \"desc\"}`\r\n      : \"\";\r\n    // TODO: fieldfilter should use 'lookupcolumnId' e.g. ServiceTypeId eq 1\r\n    const colFilterArr = [];\r\n    columnFilters.forEach((colFilter) =>\r\n      colFilterArr.push(\r\n        `${colFilter.column} ${colFilter.op ?? \"eq\"} '${colFilter.value}'`\r\n      )\r\n    );\r\n    if (!includeFolders) colFilterArr.push(`FSObjType eq '0'`);\r\n\r\n    const filter = \"$filter=(\" + colFilterArr.join(`) and (`) + \")\";\r\n\r\n    //const fsObjTypeFilter = `FSObjType eq '0'`;\r\n    // const fieldFilter = `${column} eq '${value}'`;\r\n    // const filter2 = !includeFolders\r\n    //   ? `$filter=(${fieldFilter}) and (${fsObjTypeFilter})`\r\n    //   : `$filter=${fieldFilter}`;\r\n\r\n    const include = \"$select=\" + queryFields;\r\n    const expand = `$expand=` + expandFields;\r\n    const page = count ? `$top=${count}` : \"\";\r\n\r\n    const apiEndpoint =\r\n      `/web/lists/GetByTitle('${self.config.def.title}')/items?` +\r\n      `${include}&${expand}&${orderBy}&${filter}&${page}`;\r\n\r\n    const result = await fetchSharePointData(apiEndpoint);\r\n    const cursor = {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n\r\n    // if (window.DEBUG) console.log(cursor);\r\n    return cursor;\r\n  }\r\n\r\n  async function loadNextPage(cursor) {\r\n    const result = await fetchSharePointData(cursor._next);\r\n    return {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n  }\r\n\r\n  function findById(id, fields, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n    var oListItem = oList.getItemById(id);\r\n\r\n    function onGetListItemSucceeded() {\r\n      const listObj = {};\r\n      fields.forEach((field) => {\r\n        var colVal = oListItem.get_item(field);\r\n        //console.log(`SAL: Setting ${field} to`, colVal);\r\n        listObj[field] = Array.isArray(colVal)\r\n          ? colVal.map((val) => mapListItemToObject(val))\r\n          : mapListItemToObject(colVal);\r\n      });\r\n      callback(listObj);\r\n    }\r\n\r\n    function onGetListItemFailed(sender, args) {\r\n      console.error(\"SAL: findById - List: \" + self.config.def.name);\r\n      console.error(\"Fields\", this);\r\n      console.error(sender, args);\r\n    }\r\n\r\n    var data = {\r\n      oListItem,\r\n      callback,\r\n      fields,\r\n    };\r\n    currCtx.load(oListItem);\r\n    // currCtx.load(oListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemSucceeded),\r\n      Function.createDelegate(data, onGetListItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                            updateListItem      \r\n    ******************************************************************/\r\n\r\n  function updateListItemAsync(entity) {\r\n    if (!entity?.ID) {\r\n      return false;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const oListItem = oList.getItemById(entity.ID);\r\n\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onUpdateListItemsSucceeded() {\r\n        //alert('Item updated!');\r\n        console.log(\"Successfully updated \" + this.oListItem.get_item(\"Title\"));\r\n        resolve();\r\n      }\r\n\r\n      function onUpdateListItemFailed(sender, args) {\r\n        console.error(\"Update Failed - List: \" + self.config.def.name);\r\n        console.error(\"Item Id\", this.oListItem.get_id() ?? \"N/A\");\r\n        console.error(entity);\r\n        console.error(sender, args);\r\n        reject(args);\r\n      }\r\n\r\n      const data = { oListItem, entity, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onUpdateListItemsSucceeded),\r\n        Function.createDelegate(data, onUpdateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            deleteListItem      \r\n    ******************************************************************/\r\n  function deleteListItem(id, callback) {\r\n    //[[\"ColName\", \"Value\"], [\"Col2\", \"Value2\"]]\r\n    //self.callbackDeleteListItem = callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var data = { callback: callback };\r\n    const oListItem = oList.getItemById(id);\r\n    oListItem.deleteObject();\r\n\r\n    function onDeleteListItemsSucceeded(sender, args) {\r\n      //alert('Item updated!');\r\n      callback();\r\n    }\r\n\r\n    function onDeleteListItemsFailed(sender, args) {\r\n      console.error(\r\n        \"sal.SPList.deleteListItem: Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onDeleteListItemsSucceeded),\r\n      Function.createDelegate(data, onDeleteListItemsFailed)\r\n    );\r\n  }\r\n\r\n  async function deleteListItemAsync(id) {\r\n    const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/items(${id})`;\r\n    return await fetchSharePointData(apiEndpoint, \"DELETE\", {\r\n      \"If-Match\": \"*\",\r\n    });\r\n    // return new Promise((resolve, reject) => deleteListItem(id, resolve));\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Permissions  \r\n    ******************************************************************/\r\n  /**\r\n   * Documentation - setItemPermissions\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {ItemPermissions} itemPermissions an instance of ItemPermissions\r\n   */\r\n  async function setItemPermissionsAsync(id, itemPermissions, reset) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n\r\n    const oListItem = await getoListItemByIdAsync(id);\r\n\r\n    return setResourcePermissionsAsync(oListItem, itemPermissions, reset);\r\n  }\r\n\r\n  async function setResourcePermissionsAsync(\r\n    oListItem,\r\n    itemPermissions,\r\n    reset\r\n  ) {\r\n    if (reset) {\r\n      oListItem.resetRoleInheritance();\r\n      oListItem.breakRoleInheritance(false, false);\r\n    }\r\n\r\n    // const result = await new Promise((resolve, reject) => {\r\n    //   currCtx.executeQueryAsync(\r\n    //     () => {\r\n    //       resolve();\r\n    //     },\r\n    //     (sender, args) => {\r\n    //       console.error(\r\n    //         \"Failed to break permissions on item: \" +\r\n    //           this.oListItem.get_lookupValue() +\r\n    //           args.get_message(),\r\n    //         args\r\n    //       );\r\n    //       reject();\r\n    //     }\r\n    //   );\r\n    // });\r\n\r\n    for (const role of itemPermissions.roles) {\r\n      const ensuredPrincipalResult = await ensureUserByKeyAsync(\r\n        role.principal.Title\r\n      );\r\n      if (!ensuredPrincipalResult) return;\r\n\r\n      const currCtx2 = new SP.ClientContext.get_current();\r\n      const web = currCtx2.get_web();\r\n\r\n      const oPrincipal = ensuredPrincipalResult.oPrincipal;\r\n\r\n      currCtx2.load(oPrincipal);\r\n\r\n      role.roleDefs.map((roleDef) => {\r\n        const roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx2);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(roleDef.name)\r\n        );\r\n        oListItem.get_roleAssignments().add(oPrincipal, roleDefBindingColl);\r\n      });\r\n\r\n      const data = {};\r\n      await executeQuery(currCtx2).catch(({ sender, args }) => {\r\n        console.error(\r\n          `Failed to set role permissions on item id ${id} for principal ${role.principal.Title} ` +\r\n            args.get_message(),\r\n          args\r\n        );\r\n      });\r\n    }\r\n\r\n    if (reset) {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n\r\n      oListItem\r\n        .get_roleAssignments()\r\n        .getByPrincipal(sal.globalConfig.currentUser)\r\n        .deleteObject();\r\n\r\n      await executeQuery(currCtx).catch(({ sender, args }) => {\r\n        console.error(\r\n          `Failed to remove role permissions on item id ${id} for Current User ` +\r\n            args.get_message(),\r\n          args\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  function getoListItemByIdAsync(id) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const oListItem = oList.getItemById(id);\r\n      currCtx.executeQueryAsync(\r\n        () => {\r\n          resolve(oListItem);\r\n        },\r\n        (sender, args) => {\r\n          console.error(\r\n            \"Failed to find item: \" + id + args.get_message(),\r\n            args\r\n          );\r\n          reject();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Documentation - getItemPermissionsAsync\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {Function} callback The callback function to execute after\r\n   *  obtaining permissions\r\n   */\r\n  function getItemPermissionsAsync(id) {\r\n    return new Promise((resolve, reject) => {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var oList = web.get_lists().getByTitle(self.config.def.title);\r\n      var camlQuery = new SP.CamlQuery();\r\n      camlQuery.set_viewXml(\r\n        '<View><Query><Where><Eq><FieldRef Name=\"ID\"/><Value Type=\"Text\">' +\r\n          id +\r\n          \"</Value></Eq></Where></Query></View>\"\r\n      );\r\n\r\n      var oListItems = oList.getItems(camlQuery);\r\n\r\n      currCtx.load(\r\n        oListItems,\r\n        \"Include(ID, HasUniqueRoleAssignments, RoleAssignments, RoleAssignments.Include(Member, RoleDefinitionBindings))\"\r\n      );\r\n\r\n      function onQuerySuccess() {\r\n        var listItemEnumerator = oListItems.getEnumerator();\r\n\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItem = listItemEnumerator.get_current();\r\n          var itemPermissions = new ItemPermissions({\r\n            hasUniqueRoleAssignments: oListItem.get_hasUniqueRoleAssignments(),\r\n            roles: [],\r\n          });\r\n\r\n          var roleEnumerator = oListItem.get_roleAssignments().getEnumerator();\r\n          // enumerate the roles\r\n          while (roleEnumerator.moveNext()) {\r\n            var roleColl = roleEnumerator.get_current();\r\n            const role = Role.fromJsomRole(roleColl);\r\n            // var principal = roleColl.get_member();\r\n\r\n            // const roleDef = {\r\n            //   principal: principalToPeople(principal),\r\n            //   permissions: [],\r\n            // };\r\n\r\n            // const roleDefBindingCollEnumerator = roleColl\r\n            //   .get_roleDefinitionBindings()\r\n            //   .getEnumerator();\r\n            // while (roleDefBindingCollEnumerator.moveNext()) {\r\n            //   const role = roleDefBindingCollEnumerator.get_current();\r\n            //   roleDef.permissions.push(role.get_name());\r\n            // }\r\n            itemPermissions.roles.push(role);\r\n          }\r\n          resolve(itemPermissions);\r\n          break;\r\n        }\r\n      }\r\n\r\n      function onQueryFailed(sender, args) {\r\n        reject(args.get_message());\r\n      }\r\n\r\n      const data = {\r\n        oListItems,\r\n        resolve,\r\n        reject,\r\n      };\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onQuerySuccess),\r\n        Function.createDelegate(data, onQueryFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getListPermissions() {\r\n    const url =\r\n      `/web/lists/getByTitle('${self.config.def.name}')` +\r\n      `?$select=HasUniqueRoleAssignments,RoleAssignments` +\r\n      `&$expand=RoleAssignments/Member,RoleAssignments/RoleDefinitionBindings`;\r\n\r\n    const headers = {\r\n      \"Cache-Control\": \"no-cache\",\r\n    };\r\n    const result = await fetchSharePointData(url, \"GET\", headers);\r\n\r\n    if (!result) return;\r\n\r\n    return ItemPermissions.fromRestResult(result.d);\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Folders          \r\n    ******************************************************************/\r\n\r\n  function getServerRelativeFolderPath(relFolderPath) {\r\n    let builtPath = sal.globalConfig.siteUrl;\r\n\r\n    builtPath += self.config.def.isLib\r\n      ? \"/\" + self.config.def.name\r\n      : \"/Lists/\" + self.config.def.name;\r\n\r\n    if (relFolderPath) {\r\n      builtPath += \"/\" + relFolderPath;\r\n    }\r\n\r\n    return builtPath;\r\n  }\r\n\r\n  function upsertFolderPathAsync(folderPath) {\r\n    return new Promise((resolve, reject) =>\r\n      upsertListFolderByPath(folderPath, resolve)\r\n    );\r\n  }\r\n\r\n  async function setFolderReadonlyAsync(folderPath) {\r\n    try {\r\n      const currentPerms = await getFolderPermissionsAsync(folderPath);\r\n\r\n      const targetPerms = currentPerms.map((user) => {\r\n        return [user.LoginName, sal.config.siteRoles.roles.RestrictedRead];\r\n      });\r\n      await setFolderPermissionsAsync(folderPath, targetPerms, true);\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n    return;\r\n  }\r\n\r\n  async function ensureFolderPermissionsAsync(relFolderPath, targetPerms) {\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const apiEndpoint =\r\n      sal.globalConfig.siteUrl +\r\n      `/_api/web/GetFolderByServerRelativeUrl('${serverRelFolderPath}')/` +\r\n      \"ListItemAllFields/RoleAssignments?$expand=Member,Member/Users,RoleDefinitionBindings\";\r\n\r\n    const response = await fetch(apiEndpoint, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json; odata=verbose\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      if (response.status == 404) {\r\n        return;\r\n      }\r\n      console.error(response);\r\n    }\r\n    const result = await response.json();\r\n    const permissionResults = result?.d?.results;\r\n    if (!permissionResults) {\r\n      console.warn(\"No results found\", result);\r\n      return;\r\n    }\r\n\r\n    const missingPerms = targetPerms.filter((targetPermPair) => {\r\n      const targetLoginName = targetPermPair[0];\r\n      const targetPerm = targetPermPair[1];\r\n      // find an existing matching permissiont\r\n      const permExists = permissionResults.find((curPerm) => {\r\n        // If the target user isn't the member\r\n        if (curPerm.Member.LoginName != targetLoginName) {\r\n          // Or the member is a group that the target user isn't in\r\n          if (\r\n            !curPerm.Member.Users?.results.find(\r\n              (curUser) => curUser.LoginName == targetLoginName\r\n            )\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // The target principal has permissions assigned, let see if they include the target permission\r\n        if (\r\n          curPerm.RoleDefinitionBindings.results?.find((curBinding) =>\r\n            sal.config.siteRoles.fulfillsRole(curBinding.Name, targetPerm)\r\n          )\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        // Finally, the target principal is assigned, but don't have the appropriate permissions\r\n        return false;\r\n      });\r\n\r\n      return !permExists;\r\n    });\r\n\r\n    console.log(\"Adding missing permissions\", missingPerms);\r\n    if (missingPerms.length)\r\n      await setFolderPermissionsAsync(relFolderPath, missingPerms, false);\r\n\r\n    return;\r\n  }\r\n  /*****************************************************************\r\n                            List Folders          \r\n    ******************************************************************/\r\n  function getFolderContentsAsync(relFolderPath, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      // TODO: everything is the same as getListItems except for the caml query\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n      camlQuery.set_folderServerRelativeUrl(serverRelFolderPath);\r\n      const allItems = oList.getItems(camlQuery);\r\n\r\n      currCtx.load(allItems, `Include(${fields.join(\", \")})`);\r\n\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const foundObjects = [];\r\n          var listItemEnumerator = allItems.getEnumerator();\r\n          while (listItemEnumerator.moveNext()) {\r\n            var oListItem = listItemEnumerator.get_current();\r\n            var listObj = {};\r\n            fields.forEach((field) => {\r\n              var colVal = oListItem.get_item(field);\r\n              //console.log(`SAL: Setting ${field} to`, colVal);\r\n              listObj[field] = Array.isArray(colVal)\r\n                ? colVal.map((val) => mapListItemToObject(val))\r\n                : mapListItemToObject(colVal);\r\n            });\r\n            //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n            listObj.oListItem = oListItem;\r\n            foundObjects.push(listObj);\r\n          }\r\n          resolve(foundObjects);\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load list folder contents:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderPermissionsAsync(relFolderPath) {\r\n    return new Promise(async (resolve, reject) => {\r\n      const oListItem = await getFolderItemByPath(relFolderPath);\r\n      if (!oListItem) {\r\n        reject(\"Folder item does not exist\");\r\n        return;\r\n      }\r\n      const roles = oListItem.get_roleAssignments();\r\n\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      currCtx.load(oListItem);\r\n      currCtx.load(roles);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const currCtx = new SP.ClientContext.get_current();\r\n          console.log(oListItem);\r\n          const principals = [];\r\n          const bindings = [];\r\n          const roleEnumerator = roles.getEnumerator();\r\n          // enumerate the roles\r\n          while (roleEnumerator.moveNext()) {\r\n            const role = roleEnumerator.get_current();\r\n            const principal = role.get_member();\r\n            const bindings = role.get_roleDefinitionBindings();\r\n            // get the principal\r\n            currCtx.load(bindings);\r\n            currCtx.load(principal);\r\n            principals.push({ principal: principal, bindings: bindings });\r\n          }\r\n          currCtx.executeQueryAsync(\r\n            // success\r\n            function (sender, args) {\r\n              // alert the title\r\n              //alert(principal.get_title());\r\n\r\n              const logins = principals.map(function ({ principal, bindings }) {\r\n                const principalRoles = [];\r\n                const bindingEnumerator = bindings.getEnumerator();\r\n                while (bindingEnumerator.moveNext()) {\r\n                  const binding = bindingEnumerator.get_current();\r\n                  principalRoles.push(binding.get_name());\r\n                }\r\n                return {\r\n                  ID: principal.get_id(),\r\n                  Title: principal.get_title(),\r\n                  LoginName: principal.get_loginName(),\r\n                  Roles: principalRoles,\r\n                };\r\n              });\r\n              resolve(logins);\r\n            },\r\n            // failure\r\n            function (sender, args) {\r\n              console.warn(\"Unable load folder principals permissions:\");\r\n              console.error(sender);\r\n              console.error(args);\r\n              reject(args);\r\n            }\r\n          );\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load folder permissions:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderItemByPath(relFolderPath) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      var camlq =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><And><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">1</Value>' +\r\n        \"</Eq><Eq>\" +\r\n        '<FieldRef Name=\"FileRef\"/><Value Type=\"Text\">' +\r\n        serverRelFolderPath +\r\n        \"</Value>\" +\r\n        \"</Eq></And></Where></Query><RowLimit>1</RowLimit></View>\";\r\n\r\n      camlQuery.set_viewXml(camlq);\r\n\r\n      const allFolders = oList.getItems(camlQuery);\r\n\r\n      async function onFindItemSucceeded() {\r\n        const foundObjects = [];\r\n        var listItemEnumerator = allFolders.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          // Should be only one item\r\n          const oListItem = listItemEnumerator.get_current();\r\n          foundObjects.push(oListItem);\r\n        }\r\n\r\n        if (!foundObjects) {\r\n          console.warn(\"folder not found\");\r\n          resolve(foundObjects);\r\n        }\r\n\r\n        if (foundObjects.length > 1) {\r\n          console.warn(\"Multiple folders found!\");\r\n          resolve(foundObjects);\r\n        }\r\n        const oListItem = foundObjects[0];\r\n        resolve(oListItem);\r\n      }\r\n\r\n      function onFindItemFailed(sender, args) {\r\n        console.warn(\"Unable load list folder contents:\");\r\n        console.error(sender);\r\n        console.error(args);\r\n        reject(args);\r\n      }\r\n      const data = {\r\n        allFolders,\r\n        resolve,\r\n        reject,\r\n      };\r\n      currCtx.load(allFolders);\r\n\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onFindItemSucceeded),\r\n        Function.createDelegate(data, onFindItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Document Libraries Folders\r\n    ******************************************************************/\r\n\r\n  /*****************************************************************\r\n                        Folder Creation          \r\n    ******************************************************************/\r\n\r\n  function upsertListFolderByPath(folderPath, callback) {\r\n    var folderArr = folderPath.split(\"/\");\r\n    var idx = 0;\r\n\r\n    var upsertListFolderInner = function (parentPath, folderArr, idx, success) {\r\n      var folderName = folderArr[idx];\r\n      idx++;\r\n      var curPath = folderArr.slice(0, idx).join(\"/\");\r\n      ensureListFolder(\r\n        curPath,\r\n        function (iFolder) {\r\n          if (idx >= folderArr.length) {\r\n            //We've reached the innermost folder and found it exists\r\n            success(iFolder.get_id());\r\n          } else {\r\n            upsertListFolderInner(curPath, folderArr, idx, success);\r\n          }\r\n        },\r\n        function () {\r\n          self.createListFolder(\r\n            folderName,\r\n            function (folderId) {\r\n              if (idx >= folderArr.length) {\r\n                //We've reached the innermost folder and found it exists\r\n                success(folderId);\r\n              } else {\r\n                upsertListFolderInner(curPath, folderArr, idx, success);\r\n              }\r\n            },\r\n            parentPath\r\n          );\r\n        }\r\n      );\r\n    };\r\n    upsertListFolderInner(\"\", folderArr, idx, callback);\r\n  }\r\n\r\n  /**\r\n   * CreateListFolder\r\n   * Creates a folder at the specified path\r\n   * @param {String} folderName\r\n   * @param {Function} callback\r\n   * @param {String} path\r\n   */\r\n  self.createListFolder = function (folderName, callback, path) {\r\n    path = path === undefined ? \"\" : path;\r\n\r\n    // Used for lists, duh\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n    let folderUrl = \"\";\r\n    const itemCreateInfo = new SP.ListItemCreationInformation();\r\n    itemCreateInfo.set_underlyingObjectType(SP.FileSystemObjectType.folder);\r\n    itemCreateInfo.set_leafName(folderName);\r\n    if (path) {\r\n      folderUrl =\r\n        sal.globalConfig.siteUrl +\r\n        \"/Lists/\" +\r\n        self.config.def.name +\r\n        \"/\" +\r\n        path;\r\n      itemCreateInfo.set_folderUrl(folderUrl);\r\n    }\r\n\r\n    const newItem = oList.addItem(itemCreateInfo);\r\n    newItem.set_item(\"Title\", folderName);\r\n\r\n    newItem.update();\r\n\r\n    function onCreateFolderSucceeded(sender, args) {\r\n      callback(this.newItem.get_id());\r\n    }\r\n\r\n    function onCreateFolderFailed(sender, args) {\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n\" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    const data = {\r\n      folderName: folderName,\r\n      callback: callback,\r\n      newItem: newItem,\r\n    };\r\n\r\n    currCtx.load(newItem);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateFolderSucceeded),\r\n      Function.createDelegate(data, onCreateFolderFailed)\r\n    );\r\n  };\r\n\r\n  function ensureListFolder(path, onExists, onNonExists) {\r\n    var folderUrl =\r\n      sal.globalConfig.siteUrl + \"/Lists/\" + self.config.def.name + \"/\" + path;\r\n\r\n    var ctx = SP.ClientContext.get_current();\r\n\r\n    // Could also call getFileByServerRelativeUrl() here. Doesn't matter.\r\n    // The way this works is identical for files and folders.\r\n    var folder = ctx.get_web().getFolderByServerRelativeUrl(folderUrl);\r\n    folder.get_listItemAllFields();\r\n    var data = {\r\n      folder: folder,\r\n      path: path,\r\n      onExists: onExists,\r\n      onNonExists: onNonExists,\r\n    };\r\n    ctx.load(folder, \"Exists\", \"Name\");\r\n\r\n    function onQueryFolderSucceeded() {\r\n      if (folder.get_exists()) {\r\n        // Folder exists and isn't hidden from us. Print its name.\r\n        console.log(\r\n          \"Folder \" + folder.get_name() + \" exists in \" + self.config.def.name\r\n        );\r\n        var currCtx = new SP.ClientContext.get_current();\r\n\r\n        var folderItem = folder.get_listItemAllFields();\r\n        function onQueryFolderItemSuccess() {\r\n          onExists(folderItem);\r\n        }\r\n        function onQueryFolderItemFailure(sender, args) {\r\n          console.error(\"Failed to find folder at \" + path, args);\r\n        }\r\n        data = { folderItem: folderItem, path: path, onExists: onExists };\r\n        currCtx.load(folderItem);\r\n        currCtx.executeQueryAsync(\r\n          Function.createDelegate(data, onQueryFolderItemSuccess),\r\n          Function.createDelegate(data, onQueryFolderItemFailure)\r\n        );\r\n      } else {\r\n        console.warn(\"Folder exists but is hidden (security-trimmed) for us.\");\r\n      }\r\n    }\r\n\r\n    function onQueryFolderFailed(sender, args) {\r\n      if (args.get_errorTypeName() === \"System.IO.FileNotFoundException\") {\r\n        // Folder doesn't exist at all.\r\n        console.log(\r\n          \"SAL.SPList.ensureListFolder: \\\r\n          Folder \" +\r\n            path +\r\n            \" does not exist in \" +\r\n            self.config.def.name\r\n        );\r\n        onNonExists();\r\n      } else {\r\n        // An unexpected error occurred.\r\n        console.error(\"Error: \" + args.get_message());\r\n      }\r\n    }\r\n    ctx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryFolderSucceeded),\r\n      Function.createDelegate(data, onQueryFolderFailed)\r\n    );\r\n  }\r\n\r\n  function setFolderPermissionsAsync(folderPath, valuePairs, reset) {\r\n    return new Promise((resolve, reject) => {\r\n      setFolderPermissions(folderPath, valuePairs, resolve, reset);\r\n    });\r\n  }\r\n\r\n  function setFolderPermissions(relFolderPath, valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n    // TODO: Validate that the users exist\r\n    var users = [];\r\n    var resolvedGroups = [];\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const folder = web.getFolderByServerRelativeUrl(serverRelFolderPath);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup?.oGroup) {\r\n        resolvedGroups.push([resolvedGroup.oGroup, vp[1]]);\r\n      } else {\r\n        //This doesn't appear to be a group, let's see if we can find a user\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindFolderSuccess() {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var folderItem = this.folder.get_listItemAllFields();\r\n      if (reset) {\r\n        folderItem.resetRoleInheritance();\r\n        folderItem.breakRoleInheritance(false, false);\r\n        folderItem\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        folderItem.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { folderItem: folderItem, callback: callback };\r\n\r\n      function onSetFolderPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        this.callback(folderItem);\r\n      }\r\n\r\n      function onSetFolderPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on item: \" +\r\n            this.folderItem.get_lookupValue() +\r\n            args.get_message() +\r\n            \"\\n\" +\r\n            args.get_stackTrace(),\r\n          false\r\n        );\r\n      }\r\n\r\n      currCtx.load(folderItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetFolderPermissionsSuccess),\r\n        Function.createDelegate(data, onSetFolderPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindFolderFailure(sender, args) {\r\n      console.error(\r\n        \"Something went wrong setting perms on library folder\",\r\n        args\r\n      );\r\n    }\r\n\r\n    var data = {\r\n      folder: folder,\r\n      users: users,\r\n      callback: callback,\r\n      resolvedGroups: resolvedGroups,\r\n      valuePairs: valuePairs,\r\n      reset: reset,\r\n    };\r\n\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.load(folder);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindFolderSuccess),\r\n      Function.createDelegate(data, onFindFolderFailure)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                                  \r\n  ******************************************************************/\r\n\r\n  function showModal(formName, title, args, callback) {\r\n    var id = \"\";\r\n    if (args.id) {\r\n      id = args.id;\r\n    }\r\n    const options = SP.UI.$create_DialogOptions();\r\n\r\n    var listPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    var rootFolder = \"\";\r\n\r\n    if (args.rootFolder) {\r\n      rootFolder = sal.globalConfig.siteUrl + listPath + args.rootFolder;\r\n    }\r\n\r\n    // WARNING: this looks similar to listPath but is different\r\n    var formsPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/forms/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    Object.assign(options, {\r\n      title: title,\r\n      dialogReturnValueCallback: callback,\r\n      args: JSON.stringify(args),\r\n      height: 800,\r\n      url:\r\n        sal.globalConfig.siteUrl +\r\n        formsPath +\r\n        formName +\r\n        \"?ID=\" +\r\n        id +\r\n        \"&Source=\" +\r\n        location.pathname +\r\n        \"&RootFolder=\" +\r\n        rootFolder,\r\n    });\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n\r\n    // SP.SOD.execute(\r\n    //   \"sp.ui.dialog.js\",\r\n    //   \"SP.UI.ModalDialog.showModalDialog\",\r\n    //   options\r\n    // );\r\n  }\r\n\r\n  function showCheckinModal(fileRef, callback) {\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"Check in Document\";\r\n    options.height = \"600\";\r\n    options.dialogReturnValueCallback = callback;\r\n\r\n    options.url =\r\n      sal.globalConfig.siteUrl +\r\n      \"/_layouts/checkin.aspx?List={\" +\r\n      self.config.guid +\r\n      \"}&FileName=\" +\r\n      fileRef;\r\n\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function checkinWithComment(fileRef, comment) {\r\n    const url = `/web/GetFileByServerRelativeUrl('${fileRef}')/CheckIn(comment='${comment}',checkintype=0)`;\r\n    return fetchSharePointData(url, \"POST\");\r\n  }\r\n\r\n  function showVersionHistoryModal(itemId) {\r\n    return new Promise((resolve) => {\r\n      var options = SP.UI.$create_DialogOptions();\r\n      options.title = \"Version History\";\r\n      options.height = \"600\";\r\n      options.dialogReturnValueCallback = resolve;\r\n\r\n      options.url = getVersionHistoryUrl(itemId);\r\n\r\n      SP.UI.ModalDialog.showModalDialog(options);\r\n    });\r\n  }\r\n\r\n  function getVersionHistoryUrl(itemId) {\r\n    return (\r\n      sal.globalConfig.siteUrl +\r\n      \"/_layouts/15/versions.aspx?List={\" +\r\n      self.config.guid +\r\n      \"}&ID=\" +\r\n      itemId\r\n    );\r\n  }\r\n\r\n  function uploadNewDocumentAsync(folderPath, title, args) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          //folder = folder != '/' ? folder : '';\r\n\r\n          var siteString =\r\n            sal.globalConfig.siteUrl == \"/\" ? \"\" : sal.globalConfig.siteUrl;\r\n\r\n          const options = SP.UI.$create_DialogOptions();\r\n          Object.assign(options, {\r\n            title: title,\r\n            dialogReturnValueCallback: resolve,\r\n            args: JSON.stringify(args),\r\n            url:\r\n              siteString +\r\n              \"/_layouts/Upload.aspx?List=\" +\r\n              oList.get_id().toString() +\r\n              \"&RootFolder=\" +\r\n              siteString +\r\n              \"/\" +\r\n              self.config.def.name +\r\n              \"/\" +\r\n              encodeURI(folderPath) +\r\n              \"&Source=\" +\r\n              location.pathname +\r\n              \"&args=\" +\r\n              encodeURI(JSON.stringify(args)),\r\n          });\r\n          //console.log(\"Options url: \" + options.url);\r\n          SP.UI.ModalDialog.showModalDialog(options);\r\n          // SP.SOD.execute(\r\n          //   \"sp.ui.dialog.js\",\r\n          //   \"SP.UI.ModalDialog.showModalDialog\",\r\n          //   options\r\n          // );\r\n        },\r\n        function (sender, args) {\r\n          console.error(\"Error showing file modal: \");\r\n          console.error(sender);\r\n          console.error(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  const UPLOADCHUNKSIZE = 10485760; // PnPJs\r\n  // const UPLOADCHUNKSIZE = 262144000; // SPO\r\n\r\n  const uploadchunkActionTypes = {\r\n    start: \"startupload\",\r\n    continue: \"continueupload\",\r\n    finish: \"finishupload\",\r\n  };\r\n\r\n  async function uploadFileRestChunking(\r\n    file,\r\n    relFolderPath,\r\n    fileName,\r\n    progress\r\n  ) {\r\n    /* https://sharepoint.stackexchange.com/questions/287334/upload-files-250mb-via-sharepoint-rest-api\r\nhttps://learn.microsoft.com/en-us/previous-versions/office/developer/sharepoint-rest-reference/dn450841(v=office.15)\r\n    */\r\n    const blob = file;\r\n    const chunkSize = UPLOADCHUNKSIZE;\r\n    const fileSize = file.size;\r\n\r\n    const totalBlocks =\r\n      parseInt((fileSize / chunkSize).toString(), 10) +\r\n      (fileSize % chunkSize === 0 ? 1 : 0);\r\n\r\n    const fileRef = relFolderPath + \"/\" + fileName;\r\n\r\n    const jobGuid = getGUID();\r\n    // const jobGuid = crypto.randomUUID\r\n    //   ? crypto.randomUUID()\r\n    //   : \"74493426-fb10-4e47-bc82-120954b81a60\";\r\n\r\n    let currentPointer;\r\n    progress({ currentBlock: 0, totalBlocks });\r\n    currentPointer = await startUpload(\r\n      jobGuid,\r\n      file.slice(0, chunkSize),\r\n      fileRef,\r\n      relFolderPath\r\n    );\r\n\r\n    for (let i = 2; i < totalBlocks; i++) {\r\n      progress({ currentBlock: i, totalBlocks });\r\n      currentPointer = await continueUpload(\r\n        jobGuid,\r\n        file.slice(currentPointer, currentPointer + chunkSize),\r\n        currentPointer,\r\n        fileRef\r\n      );\r\n    }\r\n\r\n    progress({ currentBlock: totalBlocks - 1, totalBlocks });\r\n    const result = await finishUpload(\r\n      jobGuid,\r\n      file.slice(currentPointer),\r\n      currentPointer,\r\n      fileRef\r\n    );\r\n\r\n    progress({ currentBlock: totalBlocks, totalBlocks });\r\n\r\n    return result;\r\n  }\r\n\r\n  async function startUpload(uploadId, chunk, fileRef, relFolderPath) {\r\n    const url =\r\n      `/web/getFolderByServerRelativeUrl(@folder)/files/getByUrlOrAddStub(@file)/StartUpload(guid'${uploadId}')?` +\r\n      `&@folder='${relFolderPath}'&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.StartUpload);\r\n  }\r\n\r\n  async function continueUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/ContinueUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.ContinueUpload);\r\n  }\r\n\r\n  async function finishUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/FinishUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  async function uploadFileRest(file, relFolderPath, fileName) {\r\n    return await fetch(\r\n      _spPageContextInfo.webServerRelativeUrl +\r\n        `/_api/web/GetFolderByServerRelativeUrl('${relFolderPath}')/Files/add(url='${fileName}',overwrite=true)`,\r\n      {\r\n        method: \"POST\",\r\n        credentials: \"same-origin\",\r\n        body: file,\r\n        headers: {\r\n          Accept: \"application/json; odata=verbose\",\r\n          \"Content-Type\": \"application/json;odata=nometadata\",\r\n          \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Uploading File\", response);\r\n        return;\r\n      }\r\n\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  async function uploadFileToFolderAndUpdateMetadata(\r\n    file,\r\n    fileName,\r\n    relFolderPath,\r\n    payload,\r\n    progress = null\r\n  ) {\r\n    if (!progress) {\r\n      progress = () => {};\r\n    }\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n    let result = null;\r\n    if (file.size > UPLOADCHUNKSIZE) {\r\n      const job = () =>\r\n        uploadFileRestChunking(file, serverRelFolderPath, fileName, progress);\r\n      result = await uploadQueue.addJob(job);\r\n    } else {\r\n      progress({ currentBlock: 0, totalBlocks: 1 });\r\n      result = await uploadFileRest(file, serverRelFolderPath, fileName);\r\n      progress({ currentBlock: 1, totalBlocks: 1 });\r\n    }\r\n\r\n    await updateUploadedFileMetadata(result.d, payload);\r\n\r\n    // check in\r\n    await checkinWithComment(serverRelFolderPath + \"/\" + fileName, \"\");\r\n\r\n    let itemUri = result.d.ListItemAllFields.__deferred.uri + \"?$select=ID\";\r\n\r\n    const listItem = await fetchSharePointData(itemUri);\r\n    return listItem.d.ID;\r\n  }\r\n\r\n  async function updateUploadedFileMetadata(fileResult, payload) {\r\n    var result = await fetch(fileResult.ListItemAllFields.__deferred.uri, {\r\n      method: \"POST\",\r\n      credentials: \"same-origin\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        Accept: \"application/json; odata=nometadata\",\r\n        \"Content-Type\": \"application/json;odata=nometadata\",\r\n        \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        \"X-HTTP-Method\": \"MERGE\",\r\n        \"If-Match\": \"*\",\r\n      },\r\n    }).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Updating File\", response);\r\n        return;\r\n      }\r\n\r\n      return response;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function copyFiles(sourceFolderPath, destFolderPath, callback, onError) {\r\n    const sourcePath = getServerRelativeFolderPath(sourceFolderPath);\r\n    const destPath = getServerRelativeFolderPath(destFolderPath);\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourcePath);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destPath + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \") + args.get_message();\r\n            onError;\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.error(\"Unable to copy files: \", args.get_message());\r\n        console.error(sender);\r\n        console.error(args);\r\n        reject(args);\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    // TODO: this should stay as a static utility instead of list specific\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n\r\n  // Ensure List/Library exists on the site\r\n  async function ensureList() {\r\n    // Query List Title\r\n    const listInfo = await fetchSharePointData(\r\n      `/web/lists/GetByTitle('${self.config.def.title}')`\r\n    );\r\n  }\r\n\r\n  const publicMembers = {\r\n    findByIdAsync,\r\n    getById,\r\n    findByColumnValueAsync,\r\n    loadNextPage,\r\n    getListItemsAsync,\r\n    createListItemAsync,\r\n    updateListItemAsync,\r\n    deleteListItemAsync,\r\n    setItemPermissionsAsync,\r\n    getItemPermissionsAsync,\r\n    getListPermissions,\r\n    setListPermissionsAsync,\r\n    getFolderContentsAsync,\r\n    upsertFolderPathAsync,\r\n    getServerRelativeFolderPath,\r\n    setFolderReadonlyAsync,\r\n    setFolderPermissionsAsync,\r\n    ensureFolderPermissionsAsync,\r\n    uploadFileToFolderAndUpdateMetadata,\r\n    uploadNewDocumentAsync,\r\n    copyFilesAsync,\r\n    showModal,\r\n    showCheckinModal,\r\n    showVersionHistoryModal,\r\n    getVersionHistoryUrl,\r\n  };\r\n\r\n  return publicMembers;\r\n}\r\n\r\nasync function fetchSharePointData(\r\n  uri,\r\n  method = \"GET\",\r\n  headers = {},\r\n  opts = {}\r\n) {\r\n  const siteEndpoint = uri.startsWith(\"http\")\r\n    ? uri\r\n    : sal.globalConfig.siteUrl + \"/_api\" + uri;\r\n  const response = await fetch(siteEndpoint, {\r\n    method,\r\n    headers: {\r\n      Accept: \"application/json; odata=verbose\",\r\n      \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n      ...headers,\r\n    },\r\n    ...opts,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    if (response.status == 404) {\r\n      return;\r\n    }\r\n    console.error(response);\r\n  }\r\n  try {\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (e) {\r\n    return;\r\n  }\r\n}\r\n\r\nasync function getRequestDigest() {\r\n  const response = await fetch(sal.globalConfig.siteUrl + \"/_api/contextinfo\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json; odata=verbose\",\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    console.error(\"Cannot refresh token\", response);\r\n    return;\r\n  }\r\n  const result = await response.json();\r\n  return result.d.GetContextWebInformation;\r\n}\r\n\r\nasync function refreshDigestValue() {\r\n  const result = await getRequestDigest();\r\n\r\n  if (!result) return;\r\n\r\n  document.getElementById(\"__REQUESTDIGEST\").value = result.FormDigestValue;\r\n\r\n  // Refresh before timeout\r\n  window.setTimeout(refreshDigestValue, result.FormDigestTimeoutSeconds * 900);\r\n}\r\nrefreshDigestValue();\r\n\r\nwindow.fetchSharePointData = fetchSharePointData;\r\n\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* eslint-disable no-bitwise */\r\nfunction getGUID() {\r\n  if (crypto.randomUUID) return crypto.randomUUID();\r\n\r\n  let d = Date.now();\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    const r = (d + Math.random() * 16) % 16 | 0;\r\n    d = Math.floor(d / 16);\r\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n  });\r\n}\r\n\r\nclass UploadQueue {\r\n  constructor() {}\r\n\r\n  jobs = [];\r\n  _queue = [];\r\n\r\n  enqueue(job) {\r\n    this._queue.push(job);\r\n  }\r\n\r\n  async dequeue() {\r\n    this._queue.shift();\r\n  }\r\n\r\n  async doWork() {\r\n    const job = await this.dequeue();\r\n  }\r\n\r\n  addJob(job) {\r\n    return new Promise((resolve) => {\r\n      this.enqueue(job);\r\n    });\r\n  }\r\n}\r\n\r\nclass JobProcessor {\r\n  constructor(maxConcurrency) {\r\n    this.maxConcurrency = maxConcurrency;\r\n    this.runningJobs = 0;\r\n    this.queue = [];\r\n  }\r\n\r\n  addJob(asyncFunction) {\r\n    return new Promise((resolve, reject) => {\r\n      const job = async () => {\r\n        try {\r\n          const result = await asyncFunction();\r\n          resolve(result);\r\n        } catch (error) {\r\n          reject(error);\r\n        } finally {\r\n          this.runningJobs--;\r\n          this.processQueue();\r\n        }\r\n      };\r\n\r\n      this.queue.push(job);\r\n      this.processQueue();\r\n    });\r\n  }\r\n\r\n  processQueue() {\r\n    while (this.runningJobs < this.maxConcurrency && this.queue.length > 0) {\r\n      const job = this.queue.shift();\r\n      this.runningJobs++;\r\n      job();\r\n    }\r\n  }\r\n}\r\n\r\nconst uploadQueue = new JobProcessor(5);\r\n", "import { getGroupUsers } from \"./sal.js\";\r\n\r\nexport async function getUsersByGroupName(groupName) {\r\n  const users = await getGroupUsers(groupName);\r\n\r\n  if (!users) return [];\r\n\r\n  return users.map((userProps) => new People(userProps));\r\n}\r\n", "export * from \"./entity_utilities.js\";\r\nexport * from \"./knockout_extensions.js\";\r\nexport * from \"./register_components.js\";\r\nexport * from \"./sal.js\";\r\nexport * from \"./authorization.js\";\r\n", "import { sortByTitle } from \"../infrastructure/index.js\";\r\nimport { PeopleModule } from \"../components/fields/PeopleModule.js\";\r\nimport { People } from \"../entities/People.js\";\r\nimport { getUsersByGroupName } from \"../infrastructure/index.js\";\r\nimport { ensureUserByKeyAsync } from \"../infrastructure/sal.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nconst components = {\r\n  view: \"people-view\",\r\n  edit: \"people-edit\",\r\n  new: \"people-edit\",\r\n};\r\n\r\nexport class PeopleField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    // this.pickerOptions = params.pickerOptions ?? {};\r\n    this.spGroupName = params.spGroupName ?? null;\r\n    this.multiple = params.multiple ?? false;\r\n    // this.pickerOptions = params.pickerOptions ?? {};\r\n\r\n    this.Value = this.multiple ? ko.observableArray() : ko.observable();\r\n\r\n    if (ko.isObservable(this.spGroupName)) {\r\n      this.spGroupName.subscribe(this.spGroupNameChangedHandler);\r\n    }\r\n    if (ko.unwrap(this.spGroupName)) {\r\n      this.spGroupNameChangedHandler(ko.unwrap(this.spGroupName));\r\n    }\r\n  }\r\n\r\n  spGroupId = ko.observable();\r\n  userOpts = ko.observableArray();\r\n  expandUsers = ko.observable(false);\r\n\r\n  spGroupNameChangedHandler = async (groupName) => {\r\n    if (!groupName) {\r\n      this.userOpts.removeAll();\r\n      this.spGroupId(null);\r\n    }\r\n\r\n    const group = await ensureUserByKeyAsync(groupName);\r\n    this.spGroupId(group.ID);\r\n    const users = await getUsersByGroupName(groupName);\r\n    this.userOpts(users.sort(sortByTitle));\r\n  };\r\n\r\n  pickerOptions = ko.pureComputed(() => {\r\n    const groupId = ko.unwrap(this.spGroupId);\r\n\r\n    const opts = {\r\n      AllowMultipleValues: this.multiple,\r\n    };\r\n\r\n    if (groupId) opts.SharePointGroupID = groupId;\r\n\r\n    return opts;\r\n  });\r\n\r\n  toString = ko.pureComputed(() => {\r\n    if (!this.multiple) return this.Value()?.Title;\r\n\r\n    return this.Value()?.map((user) => user.Title);\r\n  });\r\n\r\n  set = (val) => {\r\n    if (!this.multiple) {\r\n      this.Value(People.Create(val));\r\n      return;\r\n    }\r\n\r\n    if (!val) {\r\n      this.Value.removeAll();\r\n      return;\r\n    }\r\n\r\n    const vals = val.results ?? val;\r\n\r\n    if (!vals.length) {\r\n      this.Value.removeAll();\r\n      return;\r\n    }\r\n    this.Value(vals.map((u) => People.Create(u)));\r\n  };\r\n\r\n  components = PeopleModule;\r\n}\r\n", "import {\r\n  SearchSelectModule,\r\n  SelectModule,\r\n} from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport class SelectField extends BaseField {\r\n  constructor({\r\n    displayName,\r\n    isRequired = false,\r\n    Visible,\r\n    options,\r\n    multiple = false,\r\n    optionsText,\r\n    instructions,\r\n  }) {\r\n    super({ Visible, displayName, isRequired, instructions });\r\n    this.Options(options);\r\n    this.multiple = multiple;\r\n    this.Value = multiple ? ko.observableArray() : ko.observable();\r\n    this.optionsText = optionsText;\r\n\r\n    this.components = this.multiple ? SearchSelectModule : SelectModule;\r\n  }\r\n\r\n  toString = ko.pureComputed(() =>\r\n    this.multiple ? this.Value().join(\", \") : this.Value()\r\n  );\r\n\r\n  get = () => this.Value();\r\n\r\n  set = (val) => {\r\n    if (val && this.multiple) {\r\n      if (Array.isArray(val)) {\r\n        this.Value(val);\r\n      } else {\r\n        this.Value(val.results ?? val.split(\";#\"));\r\n      }\r\n      return;\r\n    }\r\n    this.Value(val);\r\n  };\r\n\r\n  Options = ko.observableArray();\r\n}\r\n", "import { TextAreaModule } from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport class TextAreaField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.isRichText = params.isRichText;\r\n    this.attr = params.attr ?? {};\r\n  }\r\n\r\n  components = TextAreaModule;\r\n}\r\n", "import { TextModule } from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\n// import ValidationError from \"../primitives/ValidationError.js\";\r\n\r\nexport class TextField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.attr = params.attr ?? {};\r\n    this.options = params.options ?? null;\r\n  }\r\n\r\n  components = TextModule;\r\n}\r\n", "export * from \"./BaseField.js\";\r\nexport * from \"./BlobField.js\";\r\nexport * from \"./CheckboxField.js\";\r\nexport * from \"./DateField.js\";\r\nexport * from \"./LookupField.js\";\r\nexport * from \"./PeopleField.js\";\r\nexport * from \"./SelectField.js\";\r\nexport * from \"./TextAreaField.js\";\r\nexport * from \"./TextField.js\";\r\n\r\n// export default {BaseField, BlobField}\r\n", "import { Entity } from \"./index.js\";\r\nimport { BaseField } from \"../fields/index.js\";\r\n\r\n/**\r\n * Constrained Entity's are validated based on their declared fields.\r\n * We are expecting user input, so need to validate each input field.\r\n */\r\n\r\nexport class ConstrainedEntity extends Entity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  toJSON = () => {\r\n    const out = {};\r\n    Object.keys(this.FieldMap).map(\r\n      (key) => (out[key] = this.FieldMap[key]?.get())\r\n    );\r\n    return out;\r\n  };\r\n\r\n  fromJSON(inputObj) {\r\n    if (window.DEBUG)\r\n      console.log(\"Setting constrained entity from JSON\", inputObj);\r\n    Object.keys(inputObj).map((key) => this.FieldMap[key]?.set(inputObj[key]));\r\n  }\r\n\r\n  get FieldMap() {\r\n    const fieldMap = {};\r\n    Object.entries(this)\r\n      .filter(([key, val]) => val instanceof BaseField)\r\n      .map(([key, val]) => {\r\n        key = val.systemName ?? key;\r\n        fieldMap[key] = val;\r\n      });\r\n    return fieldMap;\r\n  }\r\n\r\n  FormFields = () => Object.values(this.FieldMap);\r\n\r\n  // Validate the entire entity\r\n  validate = (showErrors = true) => {\r\n    Object.values(this.FieldMap).map(\r\n      (field) => field?.validate && field.validate(showErrors)\r\n    );\r\n    return this.Errors();\r\n  };\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    return Object.values(this.FieldMap)\r\n      .filter((field) => field?.Errors && field.Errors())\r\n      .flatMap((field) => field.Errors());\r\n  });\r\n\r\n  IsValid = ko.pureComputed(() => !this.Errors().length);\r\n\r\n  /**\r\n   * Expose methods to generate default new, edit, and view forms\r\n   * for a constrained entity. Uses the constrained\r\n   * entity components.\r\n   *\r\n   * This could be broken into a separate service, but since it's\r\n   * tightly coupled leave it here?\r\n   */\r\n  // static components = {\r\n  //   new: (entity, view = null) =>\r\n  //     new ConstrainedEntityComponent({\r\n  //       entityView: new ConstrainedEntityView({ entity, view }),\r\n  //       displayMode: \"edit\",\r\n  //     }),\r\n  //   edit: (entity, view = null) =>\r\n  //     new ConstrainedEntityComponent({\r\n  //       entityView: new ConstrainedEntityView({ entity, view }),\r\n  //       displayMode: \"edit\",\r\n  //     }),\r\n  //   view: (entity, view = null) =>\r\n  //     new ConstrainedEntityComponent({\r\n  //       entityView: new ConstrainedEntityView({ entity, view }),\r\n  //       displayMode: \"view\",\r\n  //     }),\r\n  // };\r\n}\r\n", "import { AuditRequest, AuditOrganization } from \"./index.js\";\r\nimport { auditOrganizationStore } from \"../infrastructure/store.js\";\r\n\r\nimport { ConstrainedEntity } from \"../sal/primitives/constrained_entity.js\";\r\nimport { LookupField, TextField } from \"../sal/fields/index.js\";\r\n\r\nimport { appContext } from \"../infrastructure/application_db_context.js\";\r\n\r\nexport class AuditCoversheet extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Title\",\r\n    required: true,\r\n  });\r\n\r\n  FileName = new TextField({\r\n    displayName: \"Name\",\r\n    systemName: \"FileLeafRef\",\r\n    required: true,\r\n  });\r\n\r\n  FileRef = new TextField({\r\n    displayName: \"File Link\",\r\n    systemName: \"FileRef\",\r\n  });\r\n\r\n  ReqNum = new LookupField({\r\n    displayName: \"Request Number\",\r\n    type: AuditRequest,\r\n    lookupCol: \"Title\",\r\n    required: true,\r\n    entitySet: appContext.AuditRequests,\r\n  });\r\n\r\n  ActionOffice = new LookupField({\r\n    displayName: \"Action Offices\",\r\n    type: AuditOrganization,\r\n    options: auditOrganizationStore,\r\n    optionsFilter: ko.pureComputed(() => {\r\n      // Only allow action offices from this coversheets associated request\r\n      const request = ko.unwrap(this.ReqNum.Value);\r\n      if (!request) return (val) => val;\r\n\r\n      const requestActionOffices = ko.unwrap(request.ActionOffice.Value);\r\n\r\n      return (opt) => requestActionOffices.includes(opt);\r\n    }),\r\n    lookupCol: \"Title\",\r\n    multiple: true,\r\n    entitySet: appContext.AuditOrganizations,\r\n  });\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"FileLeafRef\", \"FileRef\", \"ReqNum\", \"ActionOffice\"],\r\n    AOCanUpdate: [\"Title\", \"FileLeafRef\", \"ActionOffice\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    title: \"AuditCoversheets\",\r\n    name: \"AuditCoversheets\",\r\n    isLib: true,\r\n  };\r\n}\r\n", "import { ConstrainedEntity } from \"../sal/primitives/constrained_entity.js\";\r\n\r\nexport class AuditEmail extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"To\", \"Body\", \"NotificationType\", \"ReqNum\", \"ResID\"],\r\n  };\r\n  static ListDef = {\r\n    name: \"AuditEmails\",\r\n    title: \"AuditEmails\",\r\n  };\r\n}\r\n", "import { ConstrainedEntity } from \"../sal/primitives/constrained_entity.js\";\r\n\r\nexport const ORGTYPES = {\r\n  BUREAU: \"Bureau\",\r\n  EXTERNAL: \"External\",\r\n  INTERNAL: \"Internal\",\r\n  POST: \"Post\",\r\n};\r\n\r\nexport const ORGROLES = {\r\n  ACTIONOFFICE: \"Action Office\",\r\n  REQUESTINGOFFICE: \"Requesting Office\",\r\n  QUALITYASSURANCE: \"Quality Assurance\",\r\n  SPECIALPERMISSIONS: \"Special Permissions\",\r\n  RESTRICTEDREADERS: \"Restricted Readers\",\r\n};\r\n\r\nexport class AuditOrganization extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"Country\",\r\n      \"Organization_x0020_Description\",\r\n      \"EmailGroup\",\r\n      \"Org_Type\",\r\n      \"Post_x0020_Code\",\r\n      \"UserGroup\",\r\n      \"Role\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"AuditOrganizations\",\r\n    title: \"AuditOrganizations\",\r\n  };\r\n}\r\n", "import { AuditOrganization, ORGTYPES } from \"./audit_organization.js\";\r\nimport {\r\n  LookupField,\r\n  PeopleField,\r\n  TextField,\r\n  TextAreaField,\r\n  DateField,\r\n  dateFieldTypes,\r\n  SelectField,\r\n  CheckboxField,\r\n} from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nimport { ValidationError } from \"../sal/primitives/validation_error.js\";\r\nimport {\r\n  allActionOfficesFilter,\r\n  allRequestingOfficesFilter,\r\n  auditOrganizationStore,\r\n  configurationsStore,\r\n} from \"../infrastructure/store.js\";\r\nimport { appContext } from \"../infrastructure/application_db_context.js\";\r\n\r\nexport const AUDITREQUESTSTATES = {\r\n  OPEN: \"Open\",\r\n  CANCELLED: \"Canceled\",\r\n  CLOSED: \"Closed\",\r\n  REOPENED: \"ReOpened\",\r\n};\r\n\r\nexport const AUDITREQUESTTYPES = {\r\n  TASKER: \"Tasker\",\r\n  REQUEST: \"Request\",\r\n};\r\n\r\n// export const requestDefaultReminders = [\r\n//   \"3 Days Before Due\",\r\n//   \"1 Day Before Due\",\r\n//   \"1 Day Past Due\",\r\n//   \"3 Days Past Due\",\r\n//   \"7 Days Past Due\",\r\n//   \"7 Days Recurring\",\r\n// ];\r\n\r\nexport const getRequestDefaultReminders = () => {\r\n  let reminders = [\r\n    \"3 Days Before Due\",\r\n    \"1 Day Before Due\",\r\n    \"1 Day Past Due\",\r\n    \"3 Days Past Due\",\r\n    \"7 Days Past Due\",\r\n    \"7 Days Recurring\",\r\n  ];\r\n  const remindersText = configurationsStore[\"default-reminders\"];\r\n  if (remindersText) {\r\n    try {\r\n      reminders = JSON.parse(remindersText);\r\n    } catch (e) {\r\n      console.warn(\"Error parsing reminders default\", remindersText);\r\n    }\r\n  }\r\n  return reminders;\r\n};\r\n\r\nexport class AuditRequest extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n\r\n    this.InternalDueDate.addFieldRequirement({\r\n      requirement: ko.pureComputed(() => {\r\n        return this.InternalDueDate.Value() > this.ReqDueDate.Value();\r\n      }),\r\n      error: new ValidationError(\r\n        \"text-field\",\r\n        \"required-field\",\r\n        \"The Internal Due Date must be before the Request Due Date!\"\r\n      ),\r\n    });\r\n  }\r\n\r\n  ReqType = new SelectField({\r\n    displayName: \"Request Type\",\r\n    options: Object.values(AUDITREQUESTTYPES),\r\n    isRequired: true,\r\n    instructions: ko.pureComputed(() => {\r\n      switch (this.ReqType.Value()) {\r\n        case AUDITREQUESTTYPES.TASKER:\r\n          return \"A request that doesn't require QA Approval.\";\r\n        case AUDITREQUESTTYPES.REQUEST:\r\n          return \"A request requiring QA Approval\";\r\n        case AUDITREQUESTTYPES.NOTIFICATION:\r\n          return \"A request that is closed after the email is sent\";\r\n        default:\r\n      }\r\n    }),\r\n  });\r\n\r\n  isTasker = ko.pureComputed(() => {\r\n    return this.ReqType.Value() == AUDITREQUESTTYPES.TASKER;\r\n  });\r\n\r\n  isRequest = ko.pureComputed(() => {\r\n    return this.ReqType.Value() == AUDITREQUESTTYPES.REQUEST;\r\n  });\r\n\r\n  ReqNum = new TextField({\r\n    displayName: \"Request Number\",\r\n    systemName: \"Title\",\r\n    isRequired: true,\r\n  });\r\n\r\n  ReqSubject = new TextField({\r\n    displayName: \"Request Subject\",\r\n    isRequired: true,\r\n  });\r\n\r\n  RequestingOffice = new LookupField({\r\n    displayName: \"Requesting Office\",\r\n    type: AuditOrganization,\r\n    options: auditOrganizationStore,\r\n    optionsFilter: allRequestingOfficesFilter,\r\n    lookupCol: \"Title\",\r\n    entitySet: appContext.AuditOrganizations,\r\n    isRequired: true,\r\n  });\r\n\r\n  FiscalYear = new TextField({\r\n    displayName: \"Fiscal Year\",\r\n    isRequired: true,\r\n  });\r\n\r\n  InternalDueDate = new DateField({\r\n    displayName: \"Internal Due Date\",\r\n    type: dateFieldTypes.date,\r\n    isRequired: true,\r\n  });\r\n\r\n  ReqDueDate = new DateField({\r\n    displayName: \"Request Due Date\",\r\n    type: dateFieldTypes.date,\r\n    isRequired: true,\r\n  });\r\n\r\n  ReqStatus = new SelectField({\r\n    displayName: \"Request Status\",\r\n    options: Object.values(AUDITREQUESTSTATES),\r\n    isRequired: true,\r\n  });\r\n\r\n  IsSample = new CheckboxField({\r\n    displayName: \"Is Sample?\",\r\n  });\r\n\r\n  ReceiptDate = new DateField({\r\n    displayName: \"Receipt Date\",\r\n    type: dateFieldTypes.date,\r\n    isRequired: false,\r\n  });\r\n\r\n  RelatedAudit = new TextField({\r\n    displayName: \"Related Audit\",\r\n    isRequired: false,\r\n    instructions:\r\n      \"The Audit Request number of the similar audit performed in the previous FY\",\r\n  });\r\n\r\n  ActionItems = new TextAreaField({\r\n    displayName: \"Action Items\",\r\n    instructions: \"Items that have been requested by the Auditor\",\r\n    isRichText: true,\r\n    isMinimalEditor: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  Comments = new TextAreaField({\r\n    displayName: \"Comments\",\r\n    isRichText: true,\r\n    isMinimalEditor: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  Reminders = new SelectField({\r\n    displayName: \"Reminders\",\r\n    options: [\r\n      \"3 Days Before Due\",\r\n      \"1 Day Before Due\",\r\n      \"1 Day Past Due\",\r\n      \"3 Days Past Due\",\r\n      \"7 Days Past Due\",\r\n      \"7 Days Recurring\",\r\n    ],\r\n    multiple: true,\r\n  });\r\n\r\n  EmailSent = new CheckboxField({\r\n    displayName: \"Email has been sent\",\r\n  });\r\n\r\n  Sensitivity = new SelectField({\r\n    displayName: \"Sensitivity\",\r\n    options: [\"None\", \"Official\", \"SBU\", \"PII_SBU\"],\r\n  });\r\n\r\n  ActionOffice = new LookupField({\r\n    displayName: \"Action Offices\",\r\n    type: AuditOrganization,\r\n    options: auditOrganizationStore,\r\n    optionsFilter: allActionOfficesFilter,\r\n    lookupCol: \"Title\",\r\n    multiple: true,\r\n    entitySet: appContext.AuditOrganizations,\r\n  });\r\n\r\n  EmailActionOffice = new LookupField({\r\n    displayName: \"Email Action Offices\",\r\n    type: AuditOrganization,\r\n    options: auditOrganizationStore,\r\n    optionsFilter: allActionOfficesFilter,\r\n    lookupCol: \"Title\",\r\n    multiple: true,\r\n    entitySet: appContext.AuditOrganizations,\r\n  });\r\n\r\n  ClosedDate = new DateField({\r\n    displayName: \"Closed Date\",\r\n    isRequired: false,\r\n  });\r\n\r\n  ClosedBy = new PeopleField({\r\n    displayName: \"Closed By\",\r\n    isRequired: false,\r\n  });\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"ReqType\",\r\n      \"ReqSubject\",\r\n      \"FiscalYear\",\r\n      \"InternalDueDate\",\r\n      \"ReqDueDate\",\r\n      \"ReqStatus\",\r\n      \"IsSample\",\r\n      \"ReceiptDate\",\r\n      \"RelatedAudit\",\r\n      \"ActionItems\",\r\n      \"Comments\",\r\n      \"Reminders\",\r\n      \"EmailSent\",\r\n      \"Sensitivity\",\r\n      \"ActionOffice\",\r\n      \"EmailActionOffice\",\r\n      \"RequestingOffice\",\r\n      \"ClosedDate\",\r\n      \"ClosedBy\",\r\n    ],\r\n    New: [\r\n      \"Title\",\r\n      \"ReqType\",\r\n      \"ReqSubject\",\r\n      \"RequestingOffice\",\r\n      \"FiscalYear\",\r\n      \"InternalDueDate\",\r\n      \"ReqDueDate\",\r\n      \"ReqStatus\",\r\n      \"IsSample\",\r\n      \"ReceiptDate\",\r\n      \"RelatedAudit\",\r\n      \"ActionItems\",\r\n      \"Comments\",\r\n      \"Reminders\",\r\n      \"Sensitivity\",\r\n      \"ActionOffice\",\r\n    ],\r\n    IACanUpdate: [\r\n      \"ReqType\",\r\n      \"ReqSubject\",\r\n      \"FiscalYear\",\r\n      \"RequestingOffice\",\r\n      \"InternalDueDate\",\r\n      \"ReqDueDate\",\r\n      \"ReqStatus\",\r\n      \"IsSample\",\r\n      \"ReceiptDate\",\r\n      \"RelatedAudit\",\r\n      \"ActionItems\",\r\n      \"Comments\",\r\n      \"Reminders\",\r\n      \"Sensitivity\",\r\n      \"ActionOffice\",\r\n      \"EmailActionOffice\",\r\n      \"ClosedBy\",\r\n      \"ClosedDate\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"AuditRequests\",\r\n    title: \"AuditRequests\",\r\n  };\r\n}\r\n", "import { configurationsStore } from \"../infrastructure/store.js\";\r\nimport {\r\n  AuditRequest,\r\n  AUDITREQUESTSTATES,\r\n  getRequestDefaultReminders,\r\n} from \"./audit_request.js\";\r\n// import { appContext } from \"../infrastructure/application_db_context.js\";\r\n\r\nexport class AuditBulkRequest extends AuditRequest {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  toNewRequest() {\r\n    const newReq = new AuditRequest(this);\r\n\r\n    newReq.fromJSON(this.toJSON());\r\n    newReq.ReqStatus.Value(AUDITREQUESTSTATES.OPEN);\r\n    const requestDefaultReminders = getRequestDefaultReminders();\r\n    newReq.Reminders.Value(requestDefaultReminders);\r\n\r\n    const requestDefaultType = configurationsStore[\"default-req-type\"];\r\n\r\n    if (requestDefaultType) newReq.ReqType.Value(requestDefaultType);\r\n\r\n    const defaultFy = configurationsStore[\"current-fy\"];\r\n\r\n    if (defaultFy) newReq.FiscalYear.Value(defaultFy);\r\n\r\n    return newReq;\r\n  }\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"ReqSubject\",\r\n      \"FiscalYear\",\r\n      \"InternalDueDate\",\r\n      \"ReqDueDate\",\r\n      \"IsSample\",\r\n      \"ReceiptDate\",\r\n      \"RelatedAudit\",\r\n      \"ActionItems\",\r\n      \"Comments\",\r\n      \"Reminders\",\r\n      \"Sensitivity\",\r\n      \"ActionOffice\",\r\n      \"RequestingOffice\",\r\n    ],\r\n  };\r\n  static ListDef = {\r\n    name: \"AuditBulkRequests\",\r\n    title: \"AuditBulkRequests\",\r\n  };\r\n}\r\n", "import { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\nimport { TextField, DateField, dateFieldTypes } from \"../sal/fields/index.js\";\r\n\r\nexport class Comment extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  id = new TextField({\r\n    displayName: \"ID\",\r\n  });\r\n  text = new TextField({\r\n    displayName: \"Comment\",\r\n  });\r\n  author = new TextField({\r\n    displayName: \"author\",\r\n  });\r\n  timestamp = new TextField({\r\n    displayName: \"timestamp\",\r\n  });\r\n\r\n  FieldMap = {\r\n    id: this.id,\r\n    text: this.text,\r\n    author: this.author,\r\n    timestamp: this.timestamp,\r\n  };\r\n\r\n  static Create({ id, text, author, timestamp }) {\r\n    const newComment = new Comment();\r\n    newComment.id.Value(id);\r\n    newComment.text.Value(text);\r\n    newComment.author.Value(author);\r\n    newComment.timestamp.Value(timestamp);\r\n\r\n    return newComment;\r\n  }\r\n  static Views = {\r\n    All: [\"id\", \"text\", \"author\", \"timestamp\"],\r\n  };\r\n}\r\n", "import { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\nimport { TextField, DateField, dateFieldTypes } from \"../sal/fields/index.js\";\r\n\r\nexport class ActiveViewer extends ConstrainedEntity {\r\n  id = new TextField({\r\n    displayName: \"ID\",\r\n  });\r\n  viewer = new TextField({\r\n    displayName: \"Viewer\",\r\n  });\r\n  timestamp = new DateField({\r\n    displayName: \"Timestamp\",\r\n    type: dateFieldTypes.datetime,\r\n  });\r\n\r\n  FieldMap = {\r\n    id: this.id,\r\n    viewer: this.viewer,\r\n    timestamp: this.timestamp,\r\n  };\r\n\r\n  static Views = {\r\n    All: [\"id\", \"viewer\", \"timestamp\"],\r\n  };\r\n}\r\n", "import { ActiveViewer } from \"../../value_objects/active_viewer.js\";\r\nimport { appContext } from \"../../infrastructure/application_db_context.js\";\r\n\r\nexport class ActiveViewersComponent {\r\n  constructor({ entity, fieldName }) {\r\n    this.entity = entity;\r\n    this.blobField = entity[fieldName];\r\n    this.fieldName = fieldName;\r\n    this.viewers = this.blobField.TypedValues;\r\n  }\r\n  entity;\r\n  blobField;\r\n  fieldName;\r\n\r\n  pushCurrentUser() {\r\n    this.pushUser(_spPageContextInfo.userLoginName);\r\n  }\r\n\r\n  pushUser(loginName) {\r\n    // Check if our viewer is listed\r\n    var filteredViewers = this.viewers().filter(function (viewer) {\r\n      return viewer.viewer != loginName;\r\n    });\r\n\r\n    this.viewers(filteredViewers);\r\n\r\n    var viewer = new ActiveViewer();\r\n    viewer.fromJSON({\r\n      id: Math.ceil(Math.random() * 1000000).toString(16),\r\n      viewer: loginName,\r\n      timestamp: new Date().toLocaleString(),\r\n    });\r\n    this.viewers.push(viewer);\r\n    this.commitChanges();\r\n  }\r\n\r\n  removeUser(viewerToRemove) {\r\n    this.viewers.remove(viewerToRemove);\r\n    this.commitChanges();\r\n  }\r\n\r\n  removeCurrentuser() {\r\n    this.removeUserByLogin(_spPageContextInfo.userLoginName);\r\n  }\r\n\r\n  removeUserByLogin(loginName) {\r\n    // Check if our viewer is listed\r\n    var viewerToRemove = this.viewers().find(function (viewer) {\r\n      return viewer.viewer == loginName;\r\n    });\r\n\r\n    if (viewerToRemove) {\r\n      this.removeUser(viewerToRemove);\r\n    }\r\n  }\r\n\r\n  onRemove = (viewerToRemove) => {\r\n    if (confirm(\"Are you sure you want to delete this item?\")) {\r\n      this.removeUser(viewerToRemove);\r\n    }\r\n  };\r\n\r\n  async commitChanges() {\r\n    const set = appContext.Set(this.entity.constructor);\r\n    if (!set) {\r\n      alert(\"Cannot find entity set\", this.entity);\r\n      return;\r\n    }\r\n    await set.UpdateEntity(this.entity, [this.fieldName]);\r\n  }\r\n}\r\n\r\n// TODO: convert to class\r\nexport function ActiveViewersModuleLegacy(requestId, props) {\r\n  var requestListTitle = props.requestListTitle;\r\n  var columnName = props.columnName;\r\n  var initialValue = props.initialValue;\r\n  var arrInitialViewers = [];\r\n  // If we have comments here, try to parse them.\r\n  if (initialValue) {\r\n    try {\r\n      arrInitialViewers = JSON.parse(initialValue);\r\n      arrInitialViewers.forEach(function (viewer) {\r\n        viewer.timestamp = new Date(viewer.timestamp);\r\n      });\r\n    } catch (e) {\r\n      console.error(\"could not parse internal status comments.\");\r\n    }\r\n  }\r\n  var viewers = ko.observableArray(arrInitialViewers);\r\n\r\n  function pushCurrentUser() {\r\n    pushUser(_spPageContextInfo.userLoginName);\r\n  }\r\n\r\n  function pushUser(loginName) {\r\n    // Check if our viewer is listed\r\n    var filteredViewers = viewers().filter(function (viewer) {\r\n      return viewer.viewer != loginName;\r\n    });\r\n\r\n    viewers(filteredViewers);\r\n\r\n    var viewer = {\r\n      id: Math.ceil(Math.random() * 1000000).toString(16),\r\n      viewer: loginName,\r\n      timestamp: new Date(),\r\n    };\r\n    viewers.push(viewer);\r\n    commitChanges();\r\n  }\r\n\r\n  function removeCurrentuser() {\r\n    removeUserByLogin(_spPageContextInfo.userLoginName);\r\n  }\r\n\r\n  function removeUserByLogin(loginName) {\r\n    // Check if our viewer is listed\r\n    var viewerToRemove = viewers().filter(function (viewer) {\r\n      return viewer.viewer == loginName;\r\n    });\r\n\r\n    if (viewerToRemove.length) {\r\n      removeUser(viewerToRemove[0]);\r\n    }\r\n  }\r\n\r\n  function onRemove(viewerToRemove) {\r\n    if (confirm(\"Are you sure you want to delete this item?\")) {\r\n      removeUser(viewerToRemove);\r\n    }\r\n  }\r\n\r\n  function removeUser(viewerToRemove) {\r\n    var viewerIndex = viewers.indexOf(viewerToRemove);\r\n    viewers.splice(viewerIndex, 1);\r\n    commitChanges();\r\n  }\r\n\r\n  function commitChanges() {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    //Now push to the request item:\r\n    var requestList = web.get_lists().getByTitle(requestListTitle);\r\n    const oListItem = requestList.getItemById(requestId);\r\n    oListItem.set_item(columnName, JSON.stringify(viewers()));\r\n    oListItem.update();\r\n\r\n    currCtx.load(oListItem);\r\n\r\n    currCtx.executeQueryAsync(\r\n      function onSuccess() {\r\n        // console.log(\"Added User\");\r\n      },\r\n      function onFailure(args, sender) {\r\n        console.error(\"Failed to commit changes - \" + columnName, args);\r\n      }\r\n    );\r\n  }\r\n\r\n  var publicMembers = {\r\n    viewers: viewers,\r\n    pushCurrentUser: pushCurrentUser,\r\n    pushUser: pushUser,\r\n    removeCurrentuser: removeCurrentuser,\r\n    removeUserByLogin: removeUserByLogin,\r\n    onRemove: onRemove,\r\n  };\r\n\r\n  return publicMembers;\r\n}\r\n", "import { html } from \"../../sal/infrastructure/index.js\";\r\n\r\nexport const commentChainTemplate = html`\r\n  <div>\r\n    <!-- ko if: showHistoryBool -->\r\n    <!-- ko foreach: comments -->\r\n    <div class=\"comment\">\r\n      <div data-bind=\"text: text.Value\"></div>\r\n      <div>\r\n        <span\r\n          data-bind=\"text: author.Value() + ' @ ' + timestamp.Value()\"\r\n        ></span\r\n        ><span class=\"remove\" data-bind=\"click: $parent.onRemove\">x</span>\r\n      </div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: showHistoryBool -->\r\n    <div class=\"comment\" data-bind=\"with: comments()[comments().length - 1]\">\r\n      <div data-bind=\"text: text.Value\"></div>\r\n      <div>\r\n        <span\r\n          data-bind=\"text: author.Value() + ' @ ' + timestamp.Value()\"\r\n        ></span\r\n        ><span class=\"remove\" data-bind=\"click: $parent.onRemove\">x</span>\r\n      </div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <a\r\n      title=\"Show hidden comments\"\r\n      href=\"javascript:void(0)\"\r\n      data-bind=\"click: toggleShowHistory\"\r\n    >\r\n      <span class=\"ui-icon ui-icon-comment\"></span>\r\n      Toggle Comment History (<span data-bind=\"text: comments().length\"></span>\r\n      Total)\r\n    </a>\r\n    <div class=\"newComment\">\r\n      <textarea cols=\"50\" data-bind=\"value: newCommentText\"></textarea>\r\n      <button type=\"button\" data-bind=\"click: onSubmit\">Submit</button>\r\n    </div>\r\n  </div>\r\n`;\r\n", "import { appContext } from \"../../infrastructure/application_db_context.js\";\r\nimport {\r\n  registerComponent,\r\n  directRegisterComponent,\r\n} from \"../../sal/infrastructure/index.js\";\r\nimport { Comment } from \"../../value_objects/comment.js\";\r\nimport { commentChainTemplate } from \"./CommentChainTemplate.js\";\r\n\r\nconst commentChainComponentName = \"commentChain\";\r\n\r\nexport class CommentChainComponent {\r\n  constructor({ entity, fieldName }) {\r\n    this.entity = entity;\r\n    this.blobField = entity[fieldName];\r\n    this.fieldName = fieldName;\r\n  }\r\n  entity;\r\n  blobField;\r\n  fieldName;\r\n\r\n  componentName = commentChainComponentName;\r\n}\r\n\r\nclass CommentChainModule {\r\n  constructor({ entity, fieldName, blobField }) {\r\n    this.entity = entity;\r\n    this.fieldName = fieldName;\r\n    this.blobField = blobField;\r\n    this.comments = blobField.TypedValues;\r\n  }\r\n\r\n  // comments = ko.observableArray();\r\n  newCommentText = ko.observable();\r\n\r\n  showHistoryBool = ko.observable(false);\r\n\r\n  toggleShowHistory = function () {\r\n    this.showHistoryBool(!this.showHistoryBool());\r\n  };\r\n\r\n  async onSubmit() {\r\n    var comment = Comment.Create({\r\n      id: Math.ceil(Math.random() * 1000000).toString(16),\r\n      text: this.newCommentText(),\r\n      author: _spPageContextInfo.userLoginName,\r\n      timestamp: new Date().toLocaleString(),\r\n    });\r\n    this.blobField.add(comment);\r\n    await this.commitChanges();\r\n    this.newCommentText(\"\");\r\n  }\r\n\r\n  onRemove = (commentToRemove) => {\r\n    if (confirm(\"Are you sure you want to delete this item?\")) {\r\n      this.blobField.remove(commentToRemove);\r\n      this.commitChanges();\r\n    }\r\n  };\r\n\r\n  async commitChanges() {\r\n    const set = appContext.Set(this.entity.constructor);\r\n    if (!set) {\r\n      alert(\"Cannot find entity set\", this.entity);\r\n      return;\r\n    }\r\n    await set.UpdateEntity(this.entity, [this.fieldName]);\r\n  }\r\n}\r\n\r\ndirectRegisterComponent(commentChainComponentName, {\r\n  template: commentChainTemplate,\r\n  viewModel: CommentChainModule,\r\n});\r\n\r\nexport class CommentChainModuleLegacy {\r\n  constructor(requestId, props) {\r\n    this.requestId = requestId;\r\n    this.requestListTitle = props.requestListTitle;\r\n    this.columnName = props.columnName;\r\n\r\n    const initialValue = props.initialValue;\r\n    if (initialValue) {\r\n      try {\r\n        const arrInitialComments = JSON.parse(initialValue);\r\n        arrInitialComments.map(function (comment) {\r\n          comment.timestamp = new Date(comment.timestamp);\r\n        });\r\n        this.comments(arrInitialComments);\r\n      } catch (e) {\r\n        console.error(\"could not parse internal status comments.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  comments = ko.observableArray();\r\n  newCommentText = ko.observable();\r\n\r\n  showHistoryBool = ko.observable(false);\r\n\r\n  toggleShowHistory = function () {\r\n    this.showHistoryBool(!this.showHistoryBool());\r\n  };\r\n\r\n  onSubmit = () => {\r\n    var comment = {\r\n      id: Math.ceil(Math.random() * 1000000).toString(16),\r\n      text: this.newCommentText(),\r\n      author: _spPageContextInfo.userLoginName,\r\n      timestamp: new Date(),\r\n    };\r\n    this.comments.push(comment);\r\n    this.commitChanges();\r\n    this.newCommentText(\"\");\r\n  };\r\n\r\n  onRemove = (commentToRemove) => {\r\n    if (confirm(\"Are you sure you want to delete this item?\")) {\r\n      this.comments.remove(commentToRemove);\r\n      this.commitChanges();\r\n    }\r\n  };\r\n\r\n  commitChanges = () => {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    //Now push to the request item:\r\n    const requestList = web.get_lists().getByTitle(this.requestListTitle);\r\n    const oListItem = requestList.getItemById(this.requestId);\r\n    oListItem.set_item(this.columnName, JSON.stringify(this.comments()));\r\n    oListItem.update();\r\n\r\n    currCtx.load(oListItem);\r\n\r\n    currCtx.executeQueryAsync(\r\n      function onSuccess() {\r\n        // console.log(\"Updated comments\");\r\n      },\r\n      function onFailure(args, sender) {\r\n        console.error(\"Failed to commit changes.\", args);\r\n      }\r\n    );\r\n  };\r\n}\r\n", "import { LookupField, BlobField } from \"../sal/fields/index.js\";\r\n\r\nimport { ConstrainedEntity } from \"../sal/primitives/constrained_entity.js\";\r\n\r\nimport { AuditRequest } from \"./audit_request.js\";\r\nimport { Comment } from \"../value_objects/comment.js\";\r\nimport { ActiveViewer } from \"../value_objects/active_viewer.js\";\r\n\r\nimport { ActiveViewersComponent } from \"../components/active_viewers/active_viewers_module.js\";\r\nimport { CommentChainComponent } from \"../components/comment_chain/comment_chain_module.js\";\r\n\r\nimport { appContext } from \"../infrastructure/application_db_context.js\";\r\n\r\nexport class AuditRequestsInternal extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  ActiveViewers = new BlobField({\r\n    displayName: \"Active Viewers\",\r\n    entityType: ActiveViewer,\r\n    multiple: true,\r\n  });\r\n\r\n  InternalStatus = new BlobField({\r\n    displayName: \"Internal Status\",\r\n    entityType: Comment,\r\n    multiple: true,\r\n  });\r\n\r\n  ReqNum = new LookupField({\r\n    displayName: \"Request\",\r\n    type: AuditRequest,\r\n    lookupCol: \"Title\",\r\n    entitySet: appContext.AuditRequests,\r\n  });\r\n\r\n  commentChainComponent = new CommentChainComponent({\r\n    entity: this,\r\n    fieldName: \"InternalStatus\",\r\n  });\r\n\r\n  activeViewersComponent = new ActiveViewersComponent({\r\n    entity: this,\r\n    fieldName: \"ActiveViewers\",\r\n  });\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"ActiveViewers\", \"InternalStatus\", \"ReqNum\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    title: \"AuditRequestsInternal\",\r\n    name: \"AuditRequestsInternal\",\r\n  };\r\n}\r\n", "import { People } from \"../sal/entities/index.js\";\r\nimport {\r\n  ensureUserByKeyAsync,\r\n  getDefaultGroups,\r\n  getUserPropsAsync,\r\n} from \"../sal/infrastructure/index.js\";\r\n\r\nconst groupNameSpecialPermName1 = \"CGFS Special Access1\";\r\nconst groupNameSpecialPermName2 = \"CGFS Special Access2\";\r\nconst groupNameQA = \"Quality Assurance\";\r\nconst groupNameEA = \"External Auditors\";\r\n\r\nexport function getSiteGroups() {\r\n  const groups = getDefaultGroups();\r\n  const mappedGroups = {};\r\n  Object.entries(groups).map(\r\n    ([key, group]) => (mappedGroups[key] = new People(group))\r\n  );\r\n  return mappedGroups;\r\n}\r\n\r\nconst _userPromiseMap = new Map();\r\nexport function getPeopleByUsername(userName) {\r\n  if (!_userPromiseMap.has(userName)) {\r\n    _userPromiseMap.set(\r\n      userName,\r\n      new Promise(async (resolve) => {\r\n        const user = await ensureUserByKeyAsync(userName);\r\n        if (!user) resolve(null);\r\n        resolve(new People(user));\r\n      })\r\n    );\r\n  }\r\n  return _userPromiseMap.get(userName);\r\n}\r\n\r\nlet _specialGroupsPromise = null;\r\nexport function getSpecialPermGroups() {\r\n  if (_specialGroupsPromise) return _specialGroupsPromise;\r\n  _specialGroupsPromise = new Promise(async (resolve, reject) => {\r\n    const specialPermGroup1 = await getPeopleByUsername(\r\n      groupNameSpecialPermName1\r\n    );\r\n    const specialPermGroup2 = await getPeopleByUsername(\r\n      groupNameSpecialPermName2\r\n    );\r\n    resolve({ specialPermGroup1, specialPermGroup2 });\r\n  });\r\n  return _specialGroupsPromise;\r\n}\r\n\r\nexport const getQAGroup = () => getPeopleByUsername(groupNameQA);\r\n\r\nclass User extends People {\r\n  constructor({\r\n    ID,\r\n    Title,\r\n    LoginName = null,\r\n    LookupValue = null,\r\n    WorkPhone = null,\r\n    EMail = null,\r\n    IsGroup = null,\r\n    IsEnsured = false,\r\n    Groups = null,\r\n  }) {\r\n    super({ ID, Title, LookupValue, LoginName, IsGroup, IsEnsured });\r\n\r\n    this.WorkPhone = WorkPhone;\r\n    this.EMail = EMail;\r\n\r\n    this.Groups = Groups;\r\n  }\r\n\r\n  Groups = [];\r\n\r\n  isInGroup(group) {\r\n    if (!group?.ID) return false;\r\n    return this.getGroupIds().includes(group.ID);\r\n  }\r\n\r\n  getGroupIds() {\r\n    return this.Groups.map((group) => group.ID);\r\n  }\r\n\r\n  IsSiteOwner = ko.pureComputed(() =>\r\n    this.isInGroup(getDefaultGroups().owners)\r\n  );\r\n\r\n  hasSystemRole = (systemRole) => {\r\n    const userIsOwner = this.IsSiteOwner();\r\n    switch (systemRole) {\r\n      case systemRoles.Admin:\r\n        return userIsOwner;\r\n        break;\r\n      case systemRoles.ActionOffice:\r\n        return userIsOwner || this.ActionOffices().length;\r\n      default:\r\n    }\r\n  };\r\n\r\n  static _user = null;\r\n  static Create = async function () {\r\n    if (User._user) return User._user;\r\n    // TODO: Major - Switch to getUserPropertiesAsync since that includes phone # etc\r\n    const userProps = await getUserPropsAsync();\r\n    // const userProps2 = await UserManager.getUserPropertiesAsync();\r\n    User._user = new User(userProps);\r\n    return User._user;\r\n  };\r\n}\r\n\r\nexport const currentUser = User.Create;\r\n", "import { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\nimport {\r\n  LookupField,\r\n  BlobField,\r\n  TextField,\r\n  TextAreaField,\r\n  DateField,\r\n  dateFieldTypes,\r\n  SelectField,\r\n  PeopleField,\r\n} from \"../sal/fields/index.js\";\r\n\r\nimport { AuditRequest, AuditOrganization } from \"./index.js\";\r\n\r\nimport { appContext } from \"../infrastructure/application_db_context.js\";\r\n\r\nimport { ActiveViewer } from \"../value_objects/active_viewer.js\";\r\nimport { ActiveViewersComponent } from \"../components/active_viewers/active_viewers_module.js\";\r\n\r\nimport { auditOrganizationStore } from \"../infrastructure/store.js\";\r\nimport { currentUser } from \"../services/people_manager.js\";\r\n\r\n// import { appContext } from \"../infrastructure/ServiceContainer.js\";\r\n\r\nexport const AuditResponseStates = {\r\n  Open: \"1-Open\",\r\n  Submitted: \"2-Submitted\",\r\n  ReturnedToAO: \"3-Returned to Action Office\",\r\n  ApprovedForQA: \"4-Approved for QA\",\r\n  ReturnedToGFS: \"5-Returned to GFS\",\r\n  RepostedAfterRejection: \"6-Reposted After Rejection\",\r\n  Closed: \"7-Closed\",\r\n};\r\n\r\nexport class AuditResponse extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Name\",\r\n  });\r\n\r\n  ReqNum = new LookupField({\r\n    displayName: \"Request Number\",\r\n    type: AuditRequest,\r\n    entitySet: appContext.AuditRequests,\r\n  });\r\n\r\n  SampleNumber = new TextField({\r\n    displayName: \"Sample Number\",\r\n    isRequired: true,\r\n  });\r\n\r\n  ResStatus = new SelectField({\r\n    displayName: \"Response Status\",\r\n    options: Object.values(AuditResponseStates),\r\n  });\r\n\r\n  ReturnReason = new TextField({\r\n    displayName: \"Return Reason\",\r\n    options: [\"Incomplete Document\", \"Incorrect POC\"],\r\n  });\r\n\r\n  Comments = new TextAreaField({\r\n    displayName: \"Comments\",\r\n    isRichText: true,\r\n    isMinimalEditor: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  ClosedDate = new DateField({\r\n    displayName: \"Closed Date\",\r\n    type: dateFieldTypes.date,\r\n  });\r\n\r\n  ClosedBy = new PeopleField({\r\n    displayName: \"Closed By\",\r\n  });\r\n\r\n  POC = new PeopleField({\r\n    displayName: \"POC\",\r\n  });\r\n\r\n  POCCC = new PeopleField({\r\n    displayName: \"POCCC\",\r\n  });\r\n\r\n  ActionOffice = new LookupField({\r\n    displayName: \"Action Office\",\r\n    type: AuditOrganization,\r\n    options: auditOrganizationStore,\r\n    optionsFilter: ko.pureComputed(() => {\r\n      // Only allow action offices from this coversheets associated request\r\n      const request = ko.unwrap(this.ReqNum.Value);\r\n      if (!request) return (val) => val;\r\n\r\n      const requestActionOffices = ko.unwrap(request.ActionOffice.Value);\r\n\r\n      return (opt) => requestActionOffices.includes(opt);\r\n    }),\r\n    entitySet: appContext.AuditOrganizations,\r\n    lookupCol: \"Title\",\r\n    isRequired: true,\r\n  });\r\n\r\n  ActiveViewers = new BlobField({\r\n    displayName: \"Active Viewers\",\r\n    entityType: ActiveViewer,\r\n    multiple: true,\r\n  });\r\n\r\n  activeViewersComponent = new ActiveViewersComponent({\r\n    entity: this,\r\n    fieldName: \"ActiveViewers\",\r\n  });\r\n\r\n  async uploadResponseDocFile(file) {\r\n    const fileMetadata = {\r\n      Title: file.name,\r\n      ReqNumId: this.ReqNum.Value().ID,\r\n      ResIDId: this.ID,\r\n    };\r\n\r\n    const { appContext } = await import(\r\n      \"../infrastructure/application_db_context.js\"\r\n    );\r\n\r\n    return await appContext.AuditResponseDocs.UploadFileToFolderAndUpdateMetadata(\r\n      file,\r\n      file.name,\r\n      this.Title.Value(),\r\n      fileMetadata\r\n    );\r\n  }\r\n\r\n  markClosed() {\r\n    this.ResStatus.Value(AuditResponseStates.Closed);\r\n    this.ClosedDate.set(new Date());\r\n    this.ClosedBy.set(currentUser());\r\n  }\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"SampleNumber\",\r\n      \"ResStatus\",\r\n      \"ReturnReason\",\r\n      \"Comments\",\r\n      \"ClosedDate\",\r\n      \"ClosedBy\",\r\n      \"POC\",\r\n      \"POCCC\",\r\n      \"ReqNum\",\r\n      \"ActionOffice\",\r\n      \"ActiveViewers\",\r\n    ],\r\n    NewForm: [\"ReqNum\", \"ActionOffice\", \"SampleNumber\", \"Comments\"],\r\n    EditForm: [\r\n      \"ReqNum\",\r\n      \"SampleNumber\",\r\n      \"Title\",\r\n      \"ActionOffice\",\r\n      \"ResStatus\",\r\n      \"ReturnReason\",\r\n      \"Comments\",\r\n      \"ClosedDate\",\r\n      \"ClosedBy\",\r\n      \"POC\",\r\n      \"POCCC\",\r\n    ],\r\n    IACanUpdate: [\r\n      \"Title\",\r\n      \"ActionOffice\",\r\n      \"ResStatus\",\r\n      \"ReturnReason\",\r\n      \"Comments\",\r\n      \"ClosedDate\",\r\n      \"ClosedBy\",\r\n      \"POC\",\r\n      \"POCCC\",\r\n    ],\r\n    IAUpdateClosed: [\"ResStatus\", \"ClosedDate\", \"ClosedBy\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"AuditResponses\",\r\n    title: \"AuditResponses\",\r\n  };\r\n}\r\n", "import {\r\n  LookupField,\r\n  PeopleField,\r\n  TextAreaField,\r\n  TextField,\r\n} from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\nimport { AuditResponse } from \"./index.js\";\r\nimport { appContext } from \"../infrastructure/application_db_context.js\";\r\nimport { AuditOrganization } from \"./index.js\";\r\nimport { auditOrganizationStore } from \"../infrastructure/store.js\";\r\n\r\nexport class AuditBulkResponse extends AuditResponse {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  // Title = new TextField({\r\n  //   displayName: \"Sample Number\",\r\n  // });\r\n\r\n  // Comments = new TextAreaField({\r\n  //   displayName: \"Comments\",\r\n  // });\r\n\r\n  // POC = new PeopleField({\r\n  //   displayName: \"POC\",\r\n  // });\r\n\r\n  // POCCC = new PeopleField({\r\n  //   displayName: \"POCCC\",\r\n  // });\r\n\r\n  // ActionOffice = new LookupField({\r\n  //   displayName: \"Action Office\",\r\n  //   type: AuditOrganization,\r\n  //   options: auditOrganizationStore,\r\n  //   entitySet: appContext.AuditOrganizations,\r\n  // });\r\n\r\n  toResponse(request) {\r\n    const response = new AuditResponse();\r\n    // response.ReqNum.Value(request);\r\n    // response.SampleNumber.set(this.Title.get());\r\n    // response.Comments.set(this.Comments.get());\r\n    // response.POC.set(this.POC.get());\r\n    // response.POCCC.set(this.POCCC.get());\r\n    // response.ActionOffice.Value(this.ActionOffice.Value());\r\n\r\n    response.fromJSON(this.toJSON());\r\n    // response.ReqNum.Value(request);\r\n    return response;\r\n  }\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"SampleNumber\",\r\n      \"Comments\",\r\n      \"POC\",\r\n      \"POCCC\",\r\n      \"ActionOffice\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"AuditBulkResponses\",\r\n    title: \"AuditBulkResponses\",\r\n  };\r\n}\r\n", "import { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\nimport {\r\n  LookupField,\r\n  TextField,\r\n  TextAreaField,\r\n  DateField,\r\n  dateFieldTypes,\r\n  SelectField,\r\n  PeopleField,\r\n} from \"../sal/fields/index.js\";\r\n\r\nimport { AuditResponse } from \"./audit_response.js\";\r\nimport { AuditRequest } from \"./audit_request.js\";\r\nimport { appContext } from \"../infrastructure/application_db_context.js\";\r\n\r\nexport const AuditResponseDocStates = {\r\n  Open: \"Open\",\r\n  Submitted: \"Submitted\",\r\n  SentToQA: \"Sent to QA\",\r\n  Approved: \"Approved\",\r\n  Rejected: \"Rejected\",\r\n  Archived: \"Archived\",\r\n  MarkedForDeletion: \"Marked for Deletion\",\r\n};\r\n\r\nexport class AuditResponseDoc extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Name\",\r\n  });\r\n\r\n  ReceiptDate = new DateField({\r\n    displayName: \"Receipt Date\",\r\n    type: dateFieldTypes.date,\r\n  });\r\n\r\n  DocumentStatus = new SelectField({\r\n    displayName: \"Document Status\",\r\n    options: Object.values(AuditResponseDocStates),\r\n  });\r\n\r\n  RejectReason = new TextAreaField({\r\n    displayName: \"Reject Reason\",\r\n  });\r\n\r\n  ReqNum = new LookupField({\r\n    displayName: \"Request Number\",\r\n    type: AuditRequest,\r\n    entitySet: appContext.AuditRequests,\r\n  });\r\n\r\n  ResID = new LookupField({\r\n    displayName: \"Response ID\",\r\n    type: AuditResponse,\r\n    entitySet: appContext.AuditResponses,\r\n  });\r\n\r\n  FileName = new TextField({\r\n    displayName: \"Name\",\r\n    systemName: \"FileLeafRef\",\r\n  });\r\n\r\n  FileRef = new TextField({\r\n    displayName: \"File Link\",\r\n    systemName: \"FileRef\",\r\n  });\r\n\r\n  Modified = new DateField({\r\n    displayName: \"Modified\",\r\n    type: dateFieldTypes.datetime,\r\n  });\r\n\r\n  Editor = new PeopleField({\r\n    displayName: \"Modified By\",\r\n  });\r\n\r\n  Created = new DateField({\r\n    displayName: \"Created\",\r\n    type: dateFieldTypes.datetime,\r\n  });\r\n\r\n  FileSizeDisplay = new TextField({\r\n    displayName: \"File\",\r\n  });\r\n\r\n  File_x0020_Type = new TextField({\r\n    displayName: \"File Type\",\r\n    systemName: \"File_x0020_Type\",\r\n  });\r\n\r\n  CheckoutUser = new PeopleField({\r\n    displayName: \"Checked Out To\",\r\n  });\r\n\r\n  markApprovedForRO(newFileName) {\r\n    this.DocumentStatus.Value(AuditResponseDocStates.Approved);\r\n    this.RejectReason.Value(\"\");\r\n    if (this.FileName.Value() != newFileName) this.FileName.Value(newFileName);\r\n  }\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"ReceiptDate\",\r\n      \"DocumentStatus\",\r\n      \"RejectReason\",\r\n      \"ReqNum\",\r\n      \"ResID\",\r\n      \"FileLeafRef\",\r\n      \"FileRef\",\r\n      \"FileSizeDisplay\",\r\n      \"File_x0020_Type\",\r\n      \"CheckoutUser\",\r\n      \"Modified\",\r\n      \"Editor\",\r\n      \"Created\",\r\n    ],\r\n    EditForm: [\r\n      \"FileLeafRef\",\r\n      \"Title\",\r\n      \"ReceiptDate\",\r\n      \"DocumentStatus\",\r\n      \"RejectReason\",\r\n      \"ReqNum\",\r\n      \"ResID\",\r\n    ],\r\n    AOCanUpdate: [\r\n      \"Title\",\r\n      \"ReceiptDate\",\r\n      \"DocumentStatus\",\r\n      \"RejectReason\",\r\n      \"FileLeafRef\",\r\n    ],\r\n    UpdateDocStatus: [\"Title\", \"FileLeafRef\", \"DocumentStatus\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"AuditResponseDocs\",\r\n    title: \"AuditResponseDocs\",\r\n    isLib: true,\r\n  };\r\n}\r\n", "import { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class AuditResponseDocRO extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  markApprovedForRO(request, response) {\r\n    this.ReqNum = request.Title;\r\n    this.ResID = response.Title.toString();\r\n    this.FiscalYear = request.FiscalYear.toString();\r\n    this.ReqSubject = request.ReqSubject.toString();\r\n    this.RequestingOffice = request.RequestingOffice.Value()?.UserGroup?.Title;\r\n  }\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"ReqNum\",\r\n      \"ResID\",\r\n      \"FiscalYear\",\r\n      \"RequestingOffice\",\r\n      \"ReqSubject\",\r\n      \"FileLeafRef\",\r\n      \"FileRef\",\r\n    ],\r\n    ApprovedForROUpdate: [\r\n      \"ReqNum\",\r\n      \"ResID\",\r\n      \"FiscalYear\",\r\n      \"ReqSubject\",\r\n      \"RequestingOffice\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"AuditResponseDocsRO\",\r\n    title: \"AuditResponseDocsRO\",\r\n  };\r\n}\r\n", "import { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class AuditROEmailLog extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Responses = \"\";\r\n  ResponseCount = 0;\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"RequestingOffice\",\r\n      \"Responses\",\r\n      \"ResponseCount\",\r\n      \"SentEmail\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"AuditROEmailLog\",\r\n    title: \"AuditROEmailLog\",\r\n    fields: AuditROEmailLog.Views.All,\r\n  };\r\n}\r\n", "import { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class AuditConfiguration extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  key;\r\n  value;\r\n\r\n  FieldMap = {\r\n    Title: {\r\n      get: () => this.key,\r\n      set: (val) => (this.key = val),\r\n    },\r\n    Value: {\r\n      get: () => this.value,\r\n      set: (val) => (this.value = val),\r\n    },\r\n  };\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Value\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Config\",\r\n    title: \"Config\",\r\n  };\r\n}\r\n", "export * from \"./audit_coversheet.js\";\r\nexport * from \"./audit_email.js\";\r\nexport * from \"./audit_organization.js\";\r\nexport * from \"./audit_request.js\";\r\nexport * from \"./audit_bulk_request.js\";\r\nexport * from \"./audit_request_internal.js\";\r\nexport * from \"./audit_response.js\";\r\nexport * from \"./audit_bulk_response.js\";\r\nexport * from \"./audit_response_doc.js\";\r\nexport * from \"./audit_response_doc_ro.js\";\r\nexport * from \"./audit_ro_email_log.js\";\r\nexport * from \"./config.js\";\r\n", "import { SitePage } from \"./entities/index.js\";\r\nimport { SPList, copyFileAsync } from \"./infrastructure/index.js\";\r\n\r\nconst DEBUG = false;\r\n\r\nexport class DbContext {\r\n  constructor() {}\r\n\r\n  SitePages = new EntitySet(SitePage);\r\n\r\n  utilities = {\r\n    copyFileAsync,\r\n  };\r\n  virtualSets = new Map();\r\n\r\n  Set = (entityType) => {\r\n    const key = entityType.ListDef.name;\r\n\r\n    // If we have a defined entityset, return that\r\n    const set = Object.values(this)\r\n      .filter((val) => val.constructor.name == EntitySet.name)\r\n      .find((set) => set.ListDef?.name == key);\r\n    if (set) return set;\r\n\r\n    if (!this.virtualSets.has(key)) {\r\n      const newSet = new EntitySet(entityType);\r\n      this.virtualSets.set(key, newSet);\r\n      return newSet;\r\n    }\r\n    return this.virtualSets.get(key);\r\n  };\r\n}\r\n\r\nexport class CachedEntitySet {\r\n  constructor(entityType) {\r\n    this.entitySet = new EntitySet(entityType);\r\n\r\n    this.AllDeclaredFields = this.entitySet.AllDeclaredFields;\r\n  }\r\n  _cache = ko.observable({});\r\n\r\n  FindById = async (id, fields = this.AllDeclaredFields) => {};\r\n}\r\n\r\nexport class EntitySet {\r\n  constructor(entityType) {\r\n    if (!entityType.ListDef) {\r\n      console.error(\"Missing entityType listdef for\", entityType);\r\n      return;\r\n    }\r\n\r\n    // Check if the object we passed in defines a ListDef\r\n    this.entityType = entityType;\r\n\r\n    try {\r\n      const allFieldsSet = new Set();\r\n      entityType.Views?.All?.map((field) => allFieldsSet.add(field));\r\n\r\n      // TODO: this is bombing due to circular dependencies,\r\n      // all fields need to be in View\r\n      // const newEntity = new this.entityType({ ID: null, Title: null });\r\n      // if (newEntity.FieldMap) {\r\n      //   Object.keys(newEntity.FieldMap).map((field) => allFieldsSet.add(field));\r\n      // }\r\n      // const fieldMapKeysSet = new Set(...);\r\n      // entityType.Views.All.map((field) => fieldMapKeysSet.add(field));\r\n      this.AllDeclaredFields = [...allFieldsSet];\r\n    } catch (e) {\r\n      console.warn(\"Could not instantiate\", entityType), console.warn(e);\r\n      this.AllDeclaredFields = entityType.Views?.All ?? [];\r\n    }\r\n\r\n    this.ListDef = entityType.ListDef;\r\n    this.Views = entityType.Views;\r\n    this.Title = entityType.ListDef.title;\r\n    this.Name = entityType.ListDef.name;\r\n\r\n    this.ListRef = new SPList(entityType.ListDef);\r\n\r\n    this.entityConstructor =\r\n      this.entityType.FindInStore || this.entityType.Create || this.entityType;\r\n  }\r\n\r\n  // Queries\r\n  FindById = async (id, fields = this.AllDeclaredFields) => {\r\n    // Hit our cache first\r\n\r\n    const result = await this.ListRef.getById(id, fields);\r\n    if (!result) return null;\r\n    const newEntity = new this.entityType(result);\r\n    mapObjectToEntity(result, newEntity);\r\n    return newEntity;\r\n  };\r\n\r\n  // TODO: Feature - Queries should return options to read e.g. toList, first, toCursor\r\n  /**\r\n   * Takes an array of columns and filter values with an optional comparison operator\r\n   * @param {[{column, op?, value}]} columnFilters\r\n   * @param {*} param1\r\n   * @param {*} param2\r\n   * @param {*} fields\r\n   * @param {*} includeFolders\r\n   * @returns\r\n   */\r\n  FindByColumnValue = async (\r\n    columnFilters,\r\n    { orderByColumn, sortAsc },\r\n    { count = null, includePermissions = false, includeFolders = false },\r\n    fields = this.AllDeclaredFields\r\n  ) => {\r\n    // if we pass in a count, we are expecting a cursor result\r\n    const returnCursor = count != null;\r\n    count = count ?? 5000;\r\n    // else, we should apply a count of 5000 and keep fetching\r\n\r\n    const results = await this.ListRef.findByColumnValueAsync(\r\n      columnFilters,\r\n      { orderByColumn, sortAsc },\r\n      { count, includePermissions, includeFolders },\r\n      fields\r\n    );\r\n\r\n    let cursor = {\r\n      _next: results._next,\r\n      results: results.results.map((item) => {\r\n        const newEntity = new this.entityConstructor(item);\r\n        mapObjectToEntity(item, newEntity);\r\n        return newEntity;\r\n      }),\r\n    };\r\n\r\n    if (returnCursor) {\r\n      return cursor;\r\n    }\r\n\r\n    const resultObj = {\r\n      results: cursor.results,\r\n    };\r\n\r\n    while (cursor._next) {\r\n      cursor = await this.LoadNextPage(cursor);\r\n      resultObj.results = resultObj.results.concat(cursor.results);\r\n    }\r\n\r\n    return resultObj;\r\n  };\r\n\r\n  LoadNextPage = async (cursor) => {\r\n    const results = await this.ListRef.loadNextPage(cursor);\r\n    return {\r\n      _next: results._next,\r\n      results: results.results.map((item) => {\r\n        const newEntity = new this.entityType(item);\r\n        mapObjectToEntity(item, newEntity);\r\n        return newEntity;\r\n      }),\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Return all items in list\r\n   */\r\n  ToList = async (refresh = false) => {\r\n    const fields = this.Views.All;\r\n    const results = await this.ListRef.getListItemsAsync({ fields });\r\n    const allItems = results.map((item) => {\r\n      let entityToLoad = new this.entityType(item);\r\n      mapObjectToEntity(item, entityToLoad);\r\n      return entityToLoad;\r\n    });\r\n    return allItems;\r\n  };\r\n\r\n  LoadEntity = async function (entity, refresh = false) {\r\n    if (!entity.ID) {\r\n      console.error(\"entity missing Id\", entity);\r\n      return false;\r\n    }\r\n\r\n    const result = await this.ListRef.getById(\r\n      entity.ID,\r\n      this.AllDeclaredFields\r\n    );\r\n    if (!result) return null;\r\n\r\n    mapObjectToEntity(result, entity);\r\n    return entity;\r\n  };\r\n\r\n  // Mutators\r\n  AddEntity = async function (entity, folderPath) {\r\n    const creationfunc = mapEntityToObject.bind(this);\r\n    const writeableEntity = creationfunc(entity, this.AllDeclaredFields);\r\n\r\n    if (DEBUG) console.log(writeableEntity);\r\n    const newId = await this.ListRef.createListItemAsync(\r\n      writeableEntity,\r\n      folderPath\r\n    );\r\n    mapObjectToEntity({ ID: newId }, entity);\r\n    return;\r\n  };\r\n\r\n  UpdateEntity = async function (entity, fields = null) {\r\n    const writeableEntity = mapEntityToObject.bind(this)(entity, fields);\r\n    writeableEntity.ID =\r\n      typeof entity.ID == \"function\" ? entity.ID() : entity.ID;\r\n    if (DEBUG) console.log(writeableEntity);\r\n    return this.ListRef.updateListItemAsync(writeableEntity);\r\n  };\r\n\r\n  RemoveEntity = async function (entity) {\r\n    if (!entity.ID) return false;\r\n    await this.ListRef.deleteListItemAsync(entity.ID);\r\n    return true;\r\n  };\r\n\r\n  RemoveEntityById = function (entityId) {\r\n    return this.ListRef.deleteListItemAsync(entityId);\r\n  };\r\n\r\n  // Permissions\r\n  GetItemPermissions = function (entity) {\r\n    return this.ListRef.getItemPermissionsAsync(entity.ID);\r\n  };\r\n\r\n  SetItemPermissions = async function (entity, valuePairs, reset = false) {\r\n    // const salValuePairs = valuePairs\r\n    //   .filter((vp) => vp[0] && vp[1])\r\n    //   .map((vp) => [vp[0].getKey(), vp[1]]);\r\n    return this.ListRef.setItemPermissionsAsync(entity.ID, valuePairs, reset);\r\n  };\r\n\r\n  GetRootPermissions = function () {\r\n    return this.ListRef.getListPermissions();\r\n  };\r\n\r\n  SetRootPermissions = async function (itemPermissions, reset) {\r\n    // const valuePairs = itemPermissions.getValuePairs();\r\n    await this.ListRef.setListPermissionsAsync(itemPermissions, reset);\r\n  };\r\n\r\n  // Folder Methods\r\n  GetFolderUrl = function (relFolderPath = \"\") {\r\n    return this.ListRef.getServerRelativeFolderPath(relFolderPath);\r\n  };\r\n\r\n  GetItemsByFolderPath = async function (\r\n    folderPath,\r\n    fields = this.AllDeclaredFields\r\n  ) {\r\n    //return this.ListRef.getFolderContentsAsync(folderPath, fields);\r\n    const results = await this.ListRef.getFolderContentsAsync(\r\n      folderPath,\r\n      fields\r\n    );\r\n    return results.map((result) => {\r\n      const newEntity = new this.entityType(result);\r\n      mapObjectToEntity(result, newEntity);\r\n      return newEntity;\r\n    });\r\n  };\r\n\r\n  UpsertFolderPath = async function (folderPath) {\r\n    return this.ListRef.upsertFolderPathAsync(folderPath);\r\n  };\r\n\r\n  RemoveFolderByPath = async function (folderPath) {\r\n    const itemResults = await this.FindByColumnValue(\r\n      [{ column: \"FileLeafRef\", value: folderPath }],\r\n      {},\r\n      {},\r\n      [\"ID\", \"Title\", \"FileLeafRef\"],\r\n      true\r\n    );\r\n    const entities = itemResults.results ?? [];\r\n    for (const entity of entities) {\r\n      await this.RemoveEntityById(entity.ID);\r\n    }\r\n  };\r\n\r\n  // Permissions\r\n  SetFolderReadOnly = async function (relFolderPath) {\r\n    return this.ListRef.setFolderReadonlyAsync(relFolderPath);\r\n  };\r\n\r\n  SetFolderPermissions = async function (folderPath, valuePairs, reset = true) {\r\n    const salValuePairs = valuePairs\r\n      .filter((vp) => vp[0] && vp[1])\r\n      .map((vp) => [vp[0].getKey(), vp[1]]);\r\n    return this.ListRef.setFolderPermissionsAsync(\r\n      folderPath,\r\n      salValuePairs,\r\n      reset\r\n    );\r\n  };\r\n\r\n  EnsureFolderPermissions = async function (relFolderPath, valuePairs) {\r\n    // Slightly more expensive operation to verify a user has the required permissions\r\n    // before adding them. This will cut down on the number of unique permissions in the\r\n    // system since a user may already have the permission via group membership.\r\n    const salValuePairs = valuePairs\r\n      .filter((vp) => vp[0] && vp[1])\r\n      .map((vp) => [vp[0].LoginName ?? vp[0].Title, vp[1]]);\r\n    return this.ListRef.ensureFolderPermissionsAsync(\r\n      relFolderPath,\r\n      salValuePairs\r\n    );\r\n  };\r\n\r\n  // Other Functions\r\n  // Upload file directly from browser \"File\" object e.g. from input field\r\n  UploadFileToFolderAndUpdateMetadata = async function (\r\n    file,\r\n    filename,\r\n    folderPath,\r\n    updates,\r\n    progress\r\n  ) {\r\n    const itemId = await this.ListRef.uploadFileToFolderAndUpdateMetadata(\r\n      file,\r\n      filename,\r\n      folderPath,\r\n      updates,\r\n      progress\r\n    );\r\n    const item = await this.ListRef.getById(itemId, this.AllDeclaredFields);\r\n    const newEntity = new this.entityConstructor(item);\r\n    mapObjectToEntity(item, newEntity);\r\n    return newEntity;\r\n  };\r\n\r\n  // Open file upload Modal\r\n  UploadNewDocument = async function (folderPath, args) {\r\n    return this.ListRef.uploadNewDocumentAsync(\r\n      folderPath,\r\n      \"Attach a New Document\",\r\n      args\r\n    );\r\n  };\r\n\r\n  CopyFolderContents = async function (sourceFolder, targetFolder) {\r\n    return this.ListRef.copyFilesAsync(sourceFolder, targetFolder);\r\n  };\r\n\r\n  // Form Methods\r\n  ShowForm = async function (name, title, args) {\r\n    return new Promise((resolve, reject) =>\r\n      this.ListRef.showModal(name, title, args, resolve)\r\n    );\r\n  };\r\n\r\n  CheckInDocument = async function (fileRef) {\r\n    return new Promise((resolve) =>\r\n      this.ListRef.showCheckinModal(fileRef, resolve)\r\n    );\r\n  };\r\n\r\n  EnsureList = async function () {};\r\n}\r\n\r\nfunction mapObjectToEntity(inputObject, targetEntity) {\r\n  if (DEBUG)\r\n    console.log(\r\n      `ApplicationDBContext: ${targetEntity.constructor.name}: `,\r\n      inputObject\r\n    );\r\n  if (!inputObject || !targetEntity) return;\r\n  // Takes an object and attempts to map it to the target entity\r\n  Object.keys(inputObject).forEach((key) => {\r\n    mapValueToEntityProperty(key, inputObject[key], targetEntity);\r\n  });\r\n}\r\n\r\nfunction mapValueToEntityProperty(propertyName, inputValue, targetEntity) {\r\n  if (DEBUG)\r\n    console.log(\r\n      `ApplicationDBContext: ${targetEntity.constructor.name}.${propertyName} to ${inputValue}`\r\n    );\r\n  //1. Check if the targetEntity has a fieldmapping for this property\r\n  if (targetEntity.FieldMap && targetEntity.FieldMap[propertyName]) {\r\n    mapObjectToViewField(inputValue, targetEntity.FieldMap[propertyName]);\r\n    return;\r\n  }\r\n  // 2. This is just a regular property, set it\r\n  if (\r\n    targetEntity[propertyName] &&\r\n    typeof targetEntity[propertyName] == \"function\"\r\n  ) {\r\n    targetEntity[propertyName](inputValue);\r\n    return;\r\n  }\r\n  targetEntity[propertyName] = inputValue;\r\n  return;\r\n}\r\n\r\nfunction mapObjectToViewField(inVal, fieldMapping) {\r\n  // Fieldmap has Three options for setting,\r\n  // 1. observable - the fieldmap represents an observable\r\n  // 2. setter - the fieldmap exposes a setter\r\n  // 3. factory/obs - the fieldmap exposes a factory and an observable to put the result.\r\n\r\n  if (typeof fieldMapping == \"function\") {\r\n    fieldMapping(inVal);\r\n    return;\r\n  }\r\n\r\n  if (typeof fieldMapping != \"object\") {\r\n    fieldMapping = inVal;\r\n    return;\r\n  }\r\n\r\n  if (fieldMapping.set && typeof fieldMapping.set == \"function\") {\r\n    fieldMapping.set(inVal);\r\n    return;\r\n  }\r\n\r\n  if (fieldMapping.obs) {\r\n    if (!inVal) {\r\n      fieldMapping.obs(null);\r\n      return;\r\n    }\r\n    // If the input value is an array, then we are putting an array into the observable.\r\n    const outVal = Array.isArray(inVal)\r\n      ? inVal.map((item) => generateObject(item, fieldMapping))\r\n      : generateObject(inVal, fieldMapping);\r\n\r\n    fieldMapping.obs(outVal);\r\n    return;\r\n  }\r\n\r\n  fieldMapping = inVal;\r\n  //throw \"Error setting fieldmap?\";\r\n}\r\n\r\nfunction generateObject(inVal, fieldMap) {\r\n  // If the fieldMap provides a factory, use that, otherwise return the value\r\n  return fieldMap.factory ? fieldMap.factory(inVal) : inVal;\r\n}\r\n\r\nexport function mapEntityToObject(input, selectedFields = null) {\r\n  const entity = {};\r\n  // We either predefine the fields in the ListDef, or provide a complete fieldmap\r\n  const allWriteableFieldsSet = new Set([]);\r\n  if (this?.ListDef?.fields) {\r\n    this.ListDef.fields.forEach((field) => allWriteableFieldsSet.add(field));\r\n  }\r\n  if (this?.AllDeclaredFields) {\r\n    this.AllDeclaredFields.map((field) => allWriteableFieldsSet.add(field));\r\n  }\r\n  if (input.FieldMap) {\r\n    Object.keys(input.FieldMap).forEach((field) =>\r\n      allWriteableFieldsSet.add(field)\r\n    );\r\n  }\r\n  const allWriteableFields = [...allWriteableFieldsSet];\r\n\r\n  const fields =\r\n    selectedFields ??\r\n    (input.FieldMap ? Object.keys(input.FieldMap) : null) ??\r\n    Object.keys(input);\r\n\r\n  fields\r\n    .filter((field) => allWriteableFields.includes(field))\r\n    .map((field) => {\r\n      if (input.FieldMap && input.FieldMap[field]) {\r\n        const storedFieldKey = input.FieldMap[field].systemName ?? field;\r\n        entity[storedFieldKey] = mapViewFieldToValue(input.FieldMap[field]);\r\n        return;\r\n      }\r\n      entity[field] = input[field];\r\n    });\r\n\r\n  return entity;\r\n}\r\n\r\nfunction mapViewFieldToValue(fieldMap) {\r\n  // Fieldmap has Three options for getting,\r\n  // 1. observable - the fieldmap represents an observable or other function that returns a value\r\n  // 2. get - the fieldmap is an object that exposes a getter function\r\n  // 3. factory/obs - the fieldmap is an object exposes a factory and an observable.\r\n  if (typeof fieldMap == \"function\") {\r\n    return fieldMap();\r\n  }\r\n  if (fieldMap.get && typeof fieldMap.get == \"function\") {\r\n    return fieldMap.get();\r\n  }\r\n\r\n  if (fieldMap.obs) {\r\n    return fieldMap.obs();\r\n  }\r\n\r\n  return fieldMap;\r\n\r\n  // console.error(\"Error setting fieldMap\", fieldMap);\r\n  // throw \"Error getting fieldmap\";\r\n}\r\n", "export { EntitySet, CachedEntitySet, DbContext } from \"./orm.js\";\r\n", "import {\r\n  AuditOrganization,\r\n  AuditRequest,\r\n  AuditBulkRequest,\r\n  AuditEmail,\r\n  AuditRequestsInternal,\r\n  AuditResponse,\r\n  AuditBulkResponse,\r\n  AuditResponseDoc,\r\n  AuditCoversheet,\r\n  AuditConfiguration,\r\n  AuditResponseDocRO,\r\n  AuditROEmailLog,\r\n} from \"../entities/index.js\";\r\nimport { EntitySet, DbContext } from \"../sal/index.js\";\r\n\r\nconst DEBUG = false;\r\n\r\nexport class ApplicationDbContext extends DbContext {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  AuditBulkRequests = new EntitySet(AuditBulkRequest);\r\n\r\n  AuditBulkResponses = new EntitySet(AuditBulkResponse);\r\n\r\n  AuditConfigurations = new EntitySet(AuditConfiguration);\r\n\r\n  AuditCoversheets = new EntitySet(AuditCoversheet);\r\n\r\n  AuditEmails = new EntitySet(AuditEmail);\r\n\r\n  AuditOrganizations = new EntitySet(AuditOrganization);\r\n\r\n  AuditResponses = new EntitySet(AuditResponse);\r\n\r\n  AuditResponseDocs = new EntitySet(AuditResponseDoc);\r\n\r\n  AuditResponseDocsRO = new EntitySet(AuditResponseDocRO);\r\n\r\n  AuditRequests = new EntitySet(AuditRequest);\r\n\r\n  AuditRequestsInternals = new EntitySet(AuditRequestsInternal);\r\n\r\n  AuditROEmailsLog = new EntitySet(AuditROEmailLog);\r\n}\r\n\r\nexport const appContext = new ApplicationDbContext();\r\n", "\uFEFFwindow.Audit = window.Audit || {};\r\nAudit.Common = Audit.Common || {};\r\n\r\nvar loadStart;\r\nfunction InitReport() {\r\n  loadStart = new Date();\r\n  Audit.Common.Utilities = new Audit.Common.NewUtilities();\r\n  Audit.Common.Init();\r\n}\r\n\r\nAudit.Common.Init = function () {};\r\n\r\nAudit.Common.NewUtilities = function () {\r\n  var m_siteUrl = _spPageContextInfo.webServerRelativeUrl; //IE11 in sp 2013 does not recognize L_Menu_BaseUrl\r\n\r\n  var m_listTitleRequests = \"AuditRequests\";\r\n  var m_listNameRequests = \"AuditRequests\";\r\n\r\n  var m_listTitleRequestsInternal = \"AuditRequestsInternal\";\r\n  var m_listNameRequestsInternal = \"AuditRequestsInternal\";\r\n\r\n  var m_listTitleResponses = \"AuditResponses\";\r\n  var m_listNameResponses = \"AuditResponses\";\r\n\r\n  var m_libTitleRequestDocs = \"AuditRequestDocs\";\r\n  var m_libNameRequestDocs = \"AuditRequestDocs\";\r\n\r\n  var m_libTitleCoverSheet = \"AuditCoverSheets\";\r\n  var m_libNameCoverSheet = \"AuditCoverSheets\";\r\n\r\n  var m_libTitleResponseDocs = \"AuditResponseDocs\";\r\n  var m_libNameResponseDocs = \"AuditResponseDocs\";\r\n\r\n  var m_libTitleResponseDocsEA = \"AuditResponseDocsRO\";\r\n  var m_libNameResponseDocsEA = \"AuditResponseDocsRO\";\r\n\r\n  var m_listTitleActionOffices = \"AuditOrganizations\";\r\n  var m_listNameActionOffices = \"AuditOrganizations\";\r\n\r\n  var m_listTitleEmailHistory = \"AuditEmails\";\r\n  var m_listNameEmailHistory = \"AuditEmails\";\r\n\r\n  var m_listTitleBulkResponses = \"AuditBulkResponses\";\r\n  var m_listNameBulkResponses = \"AuditBulkResponses\";\r\n\r\n  var m_listTitleBulkPermissions = \"AuditBulkPermissions\";\r\n  var m_listNameBulkPermissions = \"AuditBulkPermissions\";\r\n\r\n  var m_groupNameSpecialPermName1 = \"CGFS Special Access1\";\r\n  var m_groupNameSpecialPermName2 = \"CGFS Special Access2\";\r\n  var m_groupNameQA = \"Quality Assurance\";\r\n  var m_groupNameEA = \"External Auditors\";\r\n\r\n  var m_libResponseDocsLibraryGUID = null;\r\n\r\n  var m_arrSiteGroups = null;\r\n  var m_arrAOs = null;\r\n  /**\r\n   * Reloads the page, trys to preserve current path\r\n   * @param {bool} hard flag to remove all url params\r\n   * @returns\r\n   */\r\n  function m_fnRefresh(hard = false) {\r\n    if (hard) {\r\n      location.href = location.pathname;\r\n      return;\r\n    }\r\n    var curPath = location.pathname;\r\n\r\n    if ($(\"#tabs\").html() != null && $(\"#tabs\").html() != \"\") {\r\n      var tabIndex = 0;\r\n      try {\r\n        tabIndex = $(\"#tabs\").tabs(\"option\", \"active\");\r\n      } catch (ex) {}\r\n\r\n      curPath += \"?Tab=\" + tabIndex;\r\n\r\n      if (tabIndex == 0 && $(\"#ddlResponseName\").val() != \"\") {\r\n        curPath += \"&ResNum=\" + $(\"#ddlResponseName\").val();\r\n      } else if (tabIndex == 1) {\r\n        var responseNumOpen = $(\"#ddlResponsesOpen\").val();\r\n        var responseNumProcessed = $(\"#ddlResponsesProcessed\").val();\r\n\r\n        if (responseNumOpen != null && responseNumOpen != \"\")\r\n          curPath += \"&ResNum=\" + responseNumOpen;\r\n        else if (responseNumProcessed != null && responseNumProcessed != \"\")\r\n          curPath += \"&ResNum=\" + responseNumProcessed;\r\n      }\r\n\r\n      location.href = curPath;\r\n    } else {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  function m_fnOnLoadDisplayTimeStamp() {\r\n    var curDate = new Date();\r\n    const loadTime = (curDate - loadStart) / 1000;\r\n    document.getElementById(\r\n      \"divLoading\"\r\n    ).innerHTML = `Loaded at ${curDate.format(\"MM/dd/yyyy hh:mm tt\")}<br/>\r\n    Load time: ${loadTime + \"s\"}\r\n    `;\r\n  }\r\n\r\n  function m_fnOnLoadDisplayTabAndResponse() {\r\n    var paramTabIndex = GetUrlKeyValue(\"Tab\");\r\n    if (paramTabIndex != null && paramTabIndex != \"\") {\r\n      $(\"#tabs\").tabs(\"option\", \"active\", paramTabIndex);\r\n    }\r\n\r\n    var bFiltered = false;\r\n\r\n    var paramResponseNum = GetUrlKeyValue(\"ResNum\");\r\n    if (paramResponseNum != null && paramResponseNum != \"\") {\r\n      if (paramTabIndex == 0) {\r\n        if (\r\n          $(\"#ddlResponseName option[value='\" + paramResponseNum + \"']\")\r\n            .length > 0\r\n        ) {\r\n          $(\"#ddlResponseName\").val(paramResponseNum).change();\r\n          bFiltered = true;\r\n        }\r\n      } else {\r\n        if (\r\n          $(\"#ddlResponsesOpen option[value='\" + paramResponseNum + \"']\")\r\n            .length > 0\r\n        ) {\r\n          $(\"#ddlResponsesOpen\").val(paramResponseNum).change();\r\n        } else if (\r\n          $(\"#ddlResponsesProcessed option[value='\" + paramResponseNum + \"']\")\r\n            .length > 0\r\n        ) {\r\n          $(\"#ddlResponsesProcessed\").val(paramResponseNum).change();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!bFiltered) {\r\n      $(\".sr-response-item\").show(); //hiding rows by default\r\n    }\r\n  }\r\n\r\n  function m_fnOnLoadFilterResponses(responseStatus1, responseStatus2) {\r\n    var count = 0;\r\n    var cntOpen = 0;\r\n    var cntReOpened = 0;\r\n    var resStatus1 = 0;\r\n    var resStatus2 = 0;\r\n\r\n    var eacher = $(\".sr-response-item\");\r\n\r\n    eacher.each(function () {\r\n      var reqStatus = $.trim($(this).find(\".sr-response-requestStatus\").text());\r\n      var resStatus = $.trim($(this).find(\".sr-response-status\").text());\r\n\r\n      if (\r\n        (resStatus == responseStatus1 || resStatus == responseStatus2) &&\r\n        (reqStatus == \"Open\" || reqStatus == \"ReOpened\")\r\n      ) {\r\n        $(this).addClass(\"highlighted\");\r\n        count++;\r\n\r\n        if (resStatus == responseStatus1) resStatus1++;\r\n        else if (resStatus == responseStatus2) resStatus2++;\r\n\r\n        if (reqStatus == \"Open\") cntOpen++;\r\n        else if (reqStatus == \"ReOpened\") cntReOpened++;\r\n      }\r\n    });\r\n\r\n    if (count > 0) {\r\n      $(\"#lblStatusReportResponsesMsg\").html(\r\n        \"<span class='ui-icon ui-icon-alert'></span>There are \" +\r\n          count +\r\n          \" Responses pending your review\"\r\n      );\r\n\r\n      if (resStatus1 > 0 && resStatus2 == 0)\r\n        $(\"#ddlResponseStatus\").val(responseStatus1).change();\r\n      else if (resStatus2 > 0 && resStatus1 == 0)\r\n        $(\"#ddlResponseStatus\").val(responseStatus2).change();\r\n    } else\r\n      $(\"#lblStatusReportResponsesMsg\").html(\r\n        \"<span class='ui-icon ui-icon-circle-check'></span>There are 0 Responses pending your review\"\r\n      );\r\n  }\r\n\r\n  function m_fnLoadSiteGroups(itemColl) {\r\n    m_arrSiteGroups = new Array();\r\n\r\n    var listItemEnumerator = itemColl.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var oListItem = listItemEnumerator.get_current();\r\n\r\n      var id = oListItem.get_id();\r\n      var loginName = oListItem.get_loginName();\r\n      var title = oListItem.get_title();\r\n\r\n      var groupObject = new Object();\r\n      groupObject[\"ID\"] = id;\r\n      groupObject[\"loginName\"] = loginName;\r\n      groupObject[\"title\"] = title;\r\n      groupObject[\"group\"] = oListItem;\r\n\r\n      m_arrSiteGroups.push(groupObject);\r\n    }\r\n  }\r\n\r\n  function m_fnGetSPSiteGroup(groupName) {\r\n    var userGroup = null;\r\n    if (m_arrSiteGroups != null) {\r\n      for (var x = 0; x < m_arrSiteGroups.length; x++) {\r\n        if (m_arrSiteGroups[x].title == groupName) {\r\n          userGroup = m_arrSiteGroups[x].group;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return userGroup;\r\n  }\r\n\r\n  function m_fnLoadActionOffices(itemColl) {\r\n    m_arrAOs = new Array();\r\n\r\n    var listItemEnumerator = itemColl.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var oListItem = listItemEnumerator.get_current();\r\n\r\n      var id = oListItem.get_item(\"ID\");\r\n      var title = oListItem.get_item(\"Title\");\r\n      var userGroup = oListItem.get_item(\"UserGroup\");\r\n      if (userGroup != null) {\r\n        userGroup = userGroup.get_lookupValue();\r\n      } else userGroup = \"\";\r\n\r\n      var aoObject = new Object();\r\n      aoObject[\"ID\"] = id;\r\n      aoObject[\"title\"] = title;\r\n      aoObject[\"userGroup\"] = userGroup;\r\n\r\n      m_arrAOs.push(aoObject);\r\n    }\r\n  }\r\n\r\n  function m_fnGetAOSPGroupName(groupName) {\r\n    //finds the group name corresponding to the lookup field selected\r\n    var userGroup = null;\r\n    if (m_arrAOs != null) {\r\n      for (var x = 0; x < m_arrAOs.length; x++) {\r\n        var oGroup = m_arrAOs[x];\r\n        if (oGroup.title == groupName) {\r\n          userGroup = oGroup.userGroup;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return userGroup;\r\n  }\r\n\r\n  function m_fnCheckSPItemHasGroupPermission(item, groupName, permissionLevel) {\r\n    if (\r\n      item == null ||\r\n      groupName == \"\" ||\r\n      groupName == null ||\r\n      permissionLevel == null\r\n    )\r\n      return false;\r\n\r\n    var match = false;\r\n    var roleAssignments = item.get_roleAssignments();\r\n    if (roleAssignments == null) {\r\n      alert(\"Error retrieving role assignments\");\r\n      return false;\r\n    }\r\n\r\n    var rolesEnumerator = roleAssignments.getEnumerator();\r\n    while (rolesEnumerator.moveNext()) {\r\n      var role = rolesEnumerator.get_current();\r\n      if (role != null) {\r\n        var roleMember = role.get_member();\r\n        if (roleMember.isPropertyAvailable(\"Title\")) {\r\n          var memberTitleName = roleMember.get_title();\r\n\r\n          var roleDefs = role.get_roleDefinitionBindings();\r\n          if (roleDefs != null) {\r\n            var roleDefsEnumerator = roleDefs.getEnumerator();\r\n            while (roleDefsEnumerator.moveNext()) {\r\n              var rd = roleDefsEnumerator.get_current();\r\n              var rdName = rd.get_name();\r\n\r\n              if (\r\n                memberTitleName == groupName &&\r\n                rd.get_basePermissions().has(permissionLevel)\r\n              ) {\r\n                match = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return match;\r\n  }\r\n\r\n  function m_fnGoToResponse(responseTitle, isIA) {\r\n    if (!isIA) {\r\n      var bFound = false;\r\n      $(\"#ddlResponsesOpen > option\").each(function () {\r\n        if ($(this).text() == responseTitle) {\r\n          bFound = true;\r\n          notifyId = SP.UI.Notify.addNotification(\r\n            \"Displaying Response (\" + responseTitle + \")\",\r\n            false\r\n          );\r\n          $(\"#ddlResponsesOpen\").val(responseTitle).change();\r\n\r\n          return false;\r\n        }\r\n      });\r\n      if (!bFound) {\r\n        $(\"#ddlResponsesProcessed > option\").each(function () {\r\n          if ($(this).text() == responseTitle) {\r\n            bFound = true;\r\n            notifyId = SP.UI.Notify.addNotification(\r\n              \"Displaying Response (\" + responseTitle + \")\",\r\n              false\r\n            );\r\n            $(\"#ddlResponsesProcessed\").val(responseTitle).change();\r\n\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n\r\n      $(\"#tabs\").tabs({ active: 1 });\r\n    }\r\n  }\r\n\r\n  function m_fnGetResponseDocStyleTag2(documentStatus) {\r\n    var styleTag = {};\r\n    if (documentStatus == \"Archived\")\r\n      styleTag = { \"background-color\": \"Gainsboro\" };\r\n    else if (documentStatus == \"Approved\")\r\n      styleTag = { \"background-color\": \"PaleGreen\" };\r\n    else if (documentStatus == \"Rejected\")\r\n      styleTag = { \"background-color\": \"LightSalmon\" };\r\n    else if (documentStatus == \"Sent to QA\")\r\n      styleTag = { \"background-color\": \"LightCyan\" };\r\n    else if (documentStatus == \"Submitted\")\r\n      styleTag = { \"background-color\": \"LemonChiffon\" };\r\n    else if (documentStatus == \"Marked for Deletion\")\r\n      styleTag = {\r\n        \"background-color\": \"Gainsboro\",\r\n        \"font-style\": \"italic\",\r\n      };\r\n    return styleTag;\r\n    //\t\t\tstyleTag = \" style='background-color:Gainsboro; font-style:italic' title='Marked for Deletion by the Action Office' \";\r\n  }\r\n\r\n  function m_fnGetResponseDocStyleTag(documentStatus) {\r\n    var styleTag = \"\";\r\n\r\n    if (documentStatus == \"Archived\")\r\n      styleTag = \" style='background-color:Gainsboro;' \";\r\n    else if (documentStatus == \"Approved\")\r\n      styleTag = \" style='background-color:PaleGreen;' \";\r\n    else if (documentStatus == \"Rejected\")\r\n      styleTag = \" style='background-color:LightSalmon;' \";\r\n    else if (documentStatus == \"Sent to QA\")\r\n      styleTag = \" style='background-color:LightCyan;' \";\r\n    else if (documentStatus == \"Submitted\")\r\n      styleTag = \" style='background-color:LemonChiffon;' \";\r\n    else if (documentStatus == \"Marked for Deletion\")\r\n      styleTag =\r\n        \" style='background-color:Gainsboro; font-style:italic' title='Marked for Deletion by the Action Office' \";\r\n\r\n    return styleTag;\r\n  }\r\n\r\n  function m_fnCheckIfEmailFolderExists(items, requestNumber) {\r\n    //Check if folder exists in email library\r\n    var bFolderExists = false;\r\n    var listItemEnumerator = items.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var folderItem = listItemEnumerator.get_current();\r\n      var itemName = folderItem.get_displayName();\r\n      if (itemName == requestNumber) {\r\n        var bFolderExists = true;\r\n        break;\r\n      }\r\n    }\r\n    return bFolderExists;\r\n  }\r\n\r\n  var m_cntAddToEmailFolder = 0;\r\n  var m_cntAddedToEmailFolder = 0;\r\n\r\n  function m_fnCreateEmailFolder(list, requestNumber, requestItem, OnComplete) {\r\n    m_cntAddToEmailFolder = 0;\r\n    m_cntAddedToEmailFolder = 0;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var itemCreateInfo = new SP.ListItemCreationInformation();\r\n    itemCreateInfo.set_underlyingObjectType(SP.FileSystemObjectType.folder);\r\n    itemCreateInfo.set_leafName(requestNumber);\r\n    const oNewEmailFolder = list.addItem(itemCreateInfo);\r\n    oNewEmailFolder.set_item(\"Title\", requestNumber);\r\n    oNewEmailFolder.update();\r\n\r\n    const currentUser = web.get_currentUser();\r\n    const ownerGroup = web.get_associatedOwnerGroup();\r\n    const memberGroup = web.get_associatedMemberGroup();\r\n    const visitorGroup = web.get_associatedVisitorGroup();\r\n\r\n    oNewEmailFolder.resetRoleInheritance();\r\n    oNewEmailFolder.breakRoleInheritance(false, false);\r\n\r\n    var roleDefBindingCollAdmin =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollAdmin.add(\r\n      web.get_roleDefinitions().getByType(SP.RoleType.administrator)\r\n    );\r\n\r\n    var roleDefBindingCollContribute =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollContribute.add(\r\n      web.get_roleDefinitions().getByType(SP.RoleType.contributor)\r\n    );\r\n\r\n    var roleDefBindingCollRestrictedRead =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollRestrictedRead.add(\r\n      web.get_roleDefinitions().getByName(\"Restricted Read\")\r\n    );\r\n\r\n    var roleDefBindingCollRestrictedContribute =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollRestrictedContribute.add(\r\n      web.get_roleDefinitions().getByName(\"Restricted Contribute\")\r\n    );\r\n\r\n    //add associated site groups\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .add(ownerGroup, roleDefBindingCollAdmin);\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .add(memberGroup, roleDefBindingCollContribute);\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .add(visitorGroup, roleDefBindingCollRestrictedRead);\r\n\r\n    var spGroupQA = Audit.Common.Utilities.GetSPSiteGroup(\r\n      Audit.Common.Utilities.GetGroupNameQA()\r\n    );\r\n    if (spGroupQA != null)\r\n      oNewEmailFolder\r\n        .get_roleAssignments()\r\n        .add(spGroupQA, roleDefBindingCollRestrictedContribute);\r\n\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .getByPrincipal(currentUser)\r\n      .deleteObject();\r\n\r\n    //Need to break up adding AOs because it exceeds the resource limit (request uses too many resources)\r\n    function onUpdatePermsSucceeded() {\r\n      if (this.requestItem) {\r\n        //this will be null when sending from permissions page\r\n        //add action offices\r\n        var arrActionOffice = this.requestItem.get_item(\"ActionOffice\");\r\n        if (arrActionOffice == null || arrActionOffice.length == 0) {\r\n          if (this.OnComplete) this.OnComplete(true);\r\n          return;\r\n        }\r\n\r\n        for (var x = 0; x < arrActionOffice.length; x++) {\r\n          var actionOfficeName = arrActionOffice[x].get_lookupValue();\r\n\r\n          var actionOfficeGroupName =\r\n            Audit.Common.Utilities.GetAOSPGroupName(actionOfficeName);\r\n          var actionOfficeGroup = Audit.Common.Utilities.GetSPSiteGroup(\r\n            actionOfficeGroupName\r\n          );\r\n\r\n          if (actionOfficeGroup != null) {\r\n            m_cntAddToEmailFolder++;\r\n\r\n            var currCtx2 = new SP.ClientContext.get_current();\r\n            var web2 = currCtx2.get_web();\r\n\r\n            var roleDefBindingCollRestrictedContribute =\r\n              SP.RoleDefinitionBindingCollection.newObject(currCtx2);\r\n            roleDefBindingCollRestrictedContribute.add(\r\n              web2.get_roleDefinitions().getByName(\"Restricted Contribute\")\r\n            );\r\n\r\n            this.oNewEmailFolder\r\n              .get_roleAssignments()\r\n              .add(actionOfficeGroup, roleDefBindingCollRestrictedContribute);\r\n\r\n            function onUpdateAOPermsSucceeded() {\r\n              m_cntAddedToEmailFolder++;\r\n              if (m_cntAddedToEmailFolder == m_cntAddToEmailFolder) {\r\n                if (this.OnComplete) this.OnComplete(true);\r\n              }\r\n            }\r\n            function onUpdateAOPermsFailed(sender, args) {\r\n              m_cntAddedToEmailFolder++;\r\n              if (m_cntAddedToEmailFolder == m_cntAddToEmailFolder) {\r\n                if (this.OnComplete) this.OnComplete(true);\r\n              }\r\n            }\r\n            var data = { OnComplete: this.OnComplete };\r\n            currCtx2.executeQueryAsync(\r\n              Function.createDelegate(data, onUpdateAOPermsSucceeded),\r\n              Function.createDelegate(data, onUpdateAOPermsFailed)\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        if (this.OnComplete) this.OnComplete(true);\r\n      }\r\n    }\r\n\r\n    function onUpdatePermsFailed(sender, args) {\r\n      statusId = SP.UI.Status.addStatus(\r\n        \"Request failed: \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    var data = {\r\n      /*item: oListItem, */ requestItem: requestItem,\r\n      oNewEmailFolder: oNewEmailFolder,\r\n      OnComplete: OnComplete,\r\n    };\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onUpdatePermsSucceeded),\r\n      Function.createDelegate(data, onUpdatePermsFailed)\r\n    );\r\n  }\r\n\r\n  function m_fnSortResponseTitleNoCase(a, b) {\r\n    var aTitle = a;\r\n    var bTitle = b;\r\n    let newA, newB;\r\n\r\n    if (aTitle == null) aTitle = \"\";\r\n    if (bTitle == null) bTitle = \"\";\r\n\r\n    var aIndex = aTitle.lastIndexOf(\"-\");\r\n    if (aIndex >= 0) {\r\n      var subA = aTitle.substring(0, aIndex + 1);\r\n      var lastA = aTitle.replace(subA, \"\");\r\n      var intA = parseInt(lastA, 10);\r\n      var newIntA = Audit.Common.Utilities.PadDigits(intA, 5);\r\n      newA = subA + newIntA;\r\n    } else newA = aTitle;\r\n\r\n    var bIndex = bTitle.lastIndexOf(\"-\");\r\n    if (bIndex >= 0) {\r\n      var subB = bTitle.substring(0, bIndex + 1);\r\n      var lastB = bTitle.replace(subB, \"\");\r\n      var intB = parseInt(lastB, 10);\r\n      var newIntB = Audit.Common.Utilities.PadDigits(intB, 5);\r\n      newB = subB + newIntB;\r\n    } else newB = bTitle;\r\n\r\n    return newA.toLowerCase().localeCompare(newB.toLowerCase());\r\n  }\r\n\r\n  function m_fnSortResponseObjectNoCase(a, b) {\r\n    var aTitle = a.title;\r\n    var bTitle = b.title;\r\n    var newA;\r\n    var newB;\r\n    if (aTitle == null) aTitle = \"\";\r\n    if (bTitle == null) bTitle = \"\";\r\n\r\n    var aIndex = aTitle.lastIndexOf(\"-\");\r\n    if (aIndex >= 0) {\r\n      var subA = aTitle.substring(0, aIndex + 1);\r\n      var lastA = aTitle.replace(subA, \"\");\r\n      var intA = parseInt(lastA, 10);\r\n      var newIntA = Audit.Common.Utilities.PadDigits(intA, 5);\r\n      newA = subA + newIntA;\r\n    } else newA = aTitle;\r\n\r\n    var bIndex = bTitle.lastIndexOf(\"-\");\r\n    if (bIndex >= 0) {\r\n      var subB = bTitle.substring(0, bIndex + 1);\r\n      var lastB = bTitle.replace(subB, \"\");\r\n      var intB = parseInt(lastB, 10);\r\n      var newIntB = Audit.Common.Utilities.PadDigits(intB, 5);\r\n      newB = subB + newIntB;\r\n    } else newB = bTitle;\r\n\r\n    return newA.toLowerCase().localeCompare(newB.toLowerCase());\r\n  }\r\n\r\n  function m_fnSortNoCase(a, b) {\r\n    return a.toLowerCase().localeCompare(b.toLowerCase());\r\n  }\r\n\r\n  function m_fnSortDate(a, b) {\r\n    if (a == \"\") return -1;\r\n    if (b == \"\") return 1;\r\n    return new Date(a).getTime() - new Date(b).getTime();\r\n  }\r\n\r\n  //Adds the values in the arr array to the drop down with the specified id\r\n  function m_fnAddOptions(arr, ddlID, dateSort, responseSort) {\r\n    if (arr == null) return;\r\n    if (responseSort) arr.sort(m_fnSortResponseTitleNoCase);\r\n    else if (!dateSort) arr.sort(m_fnSortNoCase);\r\n    else arr.sort(m_fnSortDate);\r\n\r\n    var rOptions = new Array(),\r\n      j = -1;\r\n    rOptions[++j] = \"<option value=''>-Select-</option>\";\r\n\r\n    var arrLength = arr.length;\r\n\r\n    /*\tvar fragment = document.createDocumentFragment();\r\n\t\t\tvar choice = document.createElement('option');\r\n\t\t\tchoice.value = \"\";\r\n\t\t\tchoice.innerHTML = \"-Select-\";\r\n\t\t\tfragment.appendChild(choice);\r\n\t\t*/\r\n    for (var x = 0; x < arrLength; x++) {\r\n      var option = $.trim(arr[x]);\r\n\r\n      rOptions[++j] = \"<option value='\" + option + \"'>\" + option + \"</option>\";\r\n\r\n      /*\t\r\n\t\t\tvar choice = document.createElement('option');\r\n\t        choice.value = option;\r\n\t        choice.innerHTML = option;\r\n\t        fragment.appendChild(choice);*/\r\n    }\r\n\r\n    //ddlID = ddlID.replace(\"#\", \"\");\r\n    //document.getElementById(ddlID).innerHTML = rOptions.join('');\r\n\r\n    var thisDDL = $(ddlID);\r\n    thisDDL.empty().append(rOptions.join(\"\"));\r\n    /*var thisDDL = $(ddlID);\r\n\t\tthisDDL.empty().html( fragment );*/\r\n  }\r\n\r\n  function m_fnExistsInArr(arr, val) {\r\n    if (arr == null) return false;\r\n\r\n    var arrLength = arr.length;\r\n    for (var x = 0; x < arrLength; x++) {\r\n      if (arr[x] == val) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function m_fnGetTrueFalseIcon(val) {\r\n    if (val == true)\r\n      return \"<span class='ui-icon ui-icon-check'>\" + val + \"</span>\";\r\n    else return \"<span class='ui-icon ui-icon-close'>\" + val + \"</span>\";\r\n  }\r\n\r\n  function m_fnGetFriendlyDisplayName(oListItem, fieldName) {\r\n    var user = oListItem.get_item(fieldName);\r\n    if (user == null) return \"\";\r\n    else return user.get_lookupValue();\r\n  }\r\n\r\n  function m_fnPadDigits(n, totalDigits) {\r\n    n = n.toString();\r\n    var pd = \"\";\r\n    if (totalDigits > n.length) {\r\n      for (let i = 0; i < totalDigits - n.length; i++) {\r\n        pd += \"0\";\r\n      }\r\n    }\r\n    return pd + n.toString();\r\n  }\r\n\r\n  function m_fnPreciseRound(num, decimals) {\r\n    var sign = num >= 0 ? 1 : -1;\r\n    return (\r\n      Math.round(num * Math.pow(10, decimals) + sign * 0.001) /\r\n      Math.pow(10, decimals)\r\n    ).toFixed(decimals);\r\n  }\r\n\r\n  function m_fnGetFriendlyFileSize(fileSize) {\r\n    if (fileSize == null || fileSize == \"\") return \"\";\r\n\r\n    if (fileSize > 1048576) {\r\n      fileSize =\r\n        Audit.Common.Utilities.PreciseRound(fileSize / 1048576, 2) + \" MB\";\r\n    } else if (fileSize > 1024) {\r\n      fileSize =\r\n        Audit.Common.Utilities.PreciseRound(fileSize / 1024, 2) + \" KB\";\r\n    } else {\r\n      fileSize += \" B\";\r\n    }\r\n    return fileSize;\r\n  }\r\n\r\n  function m_fnISODateString(d) {\r\n    function pad(n) {\r\n      return n < 10 ? \"0\" + n : n;\r\n    }\r\n\r\n    return (\r\n      d.getUTCFullYear() +\r\n      \"-\" +\r\n      pad(d.getUTCMonth() + 1) +\r\n      \"-\" +\r\n      pad(d.getUTCDate()) +\r\n      \"T\" +\r\n      pad(d.getUTCHours()) +\r\n      \":\" +\r\n      pad(d.getUTCMinutes()) +\r\n      \":\" +\r\n      pad(d.getUTCSeconds()) +\r\n      \"Z\"\r\n    );\r\n  }\r\n\r\n  function m_fnBindHandlerResponseDoc() {\r\n    $(\".requestInfo-response-doc img\").click(function (event) {\r\n      event.preventDefault();\r\n      var curIcon = $(this).attr(\"src\");\r\n      if (curIcon == \"/_layouts/images/minus.gif\")\r\n        $(this).attr(\"src\", \"/_layouts/images/plus.gif\");\r\n      else $(this).attr(\"src\", \"/_layouts/images/minus.gif\");\r\n\r\n      //$(this).nextUntil('tr.Grouping').slideToggle(200);\r\n      $(this)\r\n        .parent()\r\n        .parent()\r\n        .nextUntil(\"tr.requestInfo-response-doc\")\r\n        .each(function () {\r\n          $(this).toggleClass(\"collapsed\");\r\n        });\r\n    });\r\n  }\r\n\r\n  /************\r\n\tNotice - for some reason, when the list item opens in a dialog or not in the dialog, it renders differently causing the values to get back data differently\r\n\t********/\r\n  /*\r\n\tfunction m_fnGetLookupFieldText( fieldName )\r\n\t{\r\n\t\tvar field = $( \"select[title='\" + fieldName  + \"']\" );\r\n\t\t\r\n\t\tif( field == null || field.html() == null ) //more than 20 items in the lookup\r\n\t\t{\r\n\t\t\tfield = $( \"input[title='\" + fieldName  + \"']\" );\r\n\t\t\treturn field.val();\r\n\t\t}\r\n\t\telse return $(\"select[title='\" + fieldName  + \"'] option:selected\").text();\r\n\t}\r\n\r\n\t*/\r\n\r\n  function m_fnGetLookupFormField(fieldTitle) {\r\n    if ($(\"select[title='\" + fieldTitle + \"']\").html() !== null) {\r\n      return $(\"select[title='\" + fieldTitle + \"']\");\r\n    } else {\r\n      return $(\"input[title='\" + fieldTitle + \"']\");\r\n    }\r\n  }\r\n\r\n  function m_fnGetLookupDisplayText(fieldTitle) {\r\n    //Set default value for lookups with less that 20 items\r\n    if ($(\"select[title='\" + fieldTitle + \"']\").html() !== null) {\r\n      return $(\"select[title='\" + fieldTitle + \"'] option:selected\").text();\r\n    } else {\r\n      return $(\"input[title='\" + fieldTitle + \"']\").val();\r\n    }\r\n  }\r\n\r\n  function m_fnSetLookupFromFieldNameByText(fieldName, text) {\r\n    try {\r\n      if (text == undefined) return;\r\n      var theSelect = m_fnGetTagFromIdentifierAndTitle(\"select\", \"\", fieldName);\r\n\r\n      if (theSelect == null) {\r\n        var theInput = m_fnGetTagFromIdentifierAndTitle(\"input\", \"\", fieldName);\r\n        //builtin\r\n        ShowDropdown(theInput.id);\r\n        var opt = document.getElementById(theInput.opt);\r\n        m_fnSetSelectedOptionByText(opt, text);\r\n        //builtin\r\n        OptLoseFocus(opt);\r\n      } else {\r\n        m_fnSetSelectedOptionByText(theSelect, text);\r\n      }\r\n    } catch (ex) {}\r\n  }\r\n\r\n  function m_fnSetSelectedOptionByText(select, text) {\r\n    var opts = select.options;\r\n    var optLength = opts.length;\r\n    if (select == null) return;\r\n\r\n    for (var i = 0; i < optLength; i++) {\r\n      if (opts[i].text == text) {\r\n        select.selectedIndex = i;\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function m_fnGetTagFromIdentifierAndTitle(tagName, identifier, title) {\r\n    var idLength = identifier.length;\r\n    var tags = document.getElementsByTagName(tagName);\r\n    for (var i = 0; i < tags.length; i++) {\r\n      var tagID = tags[i].id;\r\n      if (\r\n        tags[i].title == title &&\r\n        (identifier == \"\" ||\r\n          tagID.indexOf(identifier) == tagID.length - idLength)\r\n      ) {\r\n        return tags[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function m_fnViewUserManuals(docType) {\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"User Manual\";\r\n    options.height = 250;\r\n    //options.dialogReturnValueCallback = OnCallbackForm;\r\n    if (docType != null)\r\n      options.url =\r\n        Audit.Common.Utilities.GetSiteUrl() +\r\n        \"/SitePages/AuditUserManuals.aspx?FilterField1=DocType&FilterValue1=\" +\r\n        docType;\r\n    else\r\n      options.url =\r\n        Audit.Common.Utilities.GetSiteUrl() +\r\n        \"/SitePages/AuditUserManuals.aspx\";\r\n\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function m_fnPrintPage(pageTitle, divTbl) {\r\n    var curDate = new Date();\r\n    var siteUrl = Audit.Common.Utilities.GetSiteUrl();\r\n    var cssLink1 =\r\n      siteUrl +\r\n      \"/siteassets/css/tablesorter/style.css?v=\" +\r\n      curDate.format(\"MM_dd_yyyy\");\r\n    var cssLink2 =\r\n      siteUrl +\r\n      \"/siteAssets/css/audit_styles.css?v=\" +\r\n      curDate.format(\"MM_dd_yyyy\");\r\n\r\n    var divOutput = $(divTbl).html();\r\n\r\n    //remove hyperlinks pointing to the job codes\r\n    var updatedDivOutput = $(\"<div>\").append(divOutput);\r\n    updatedDivOutput.find(\".sr-response-title a\").each(function () {\r\n      $(this).removeAttr(\"onclick\");\r\n      $(this).removeAttr(\"href\");\r\n    });\r\n\r\n    divOutput = updatedDivOutput.html();\r\n\r\n    var printDateString = curDate.format(\"MM/dd/yyyy hh:mm tt\");\r\n    printDateString =\r\n      \"<div style='padding-bottom:10px;'>\" + printDateString + \"</div>\";\r\n    divOutput = printDateString + divOutput;\r\n\r\n    var cssFile1 = $(\"<div></div>\");\r\n    var cssFile2 = $(\"<div></div>\");\r\n\r\n    var def1 = $.Deferred();\r\n    var def2 = $.Deferred();\r\n\r\n    var cssFileText = \"\";\r\n    cssFile1.load(cssLink1, function () {\r\n      cssFileText += \"<style>\" + cssFile1.html() + \"</style>\";\r\n      def1.resolve();\r\n    });\r\n    cssFile2.load(cssLink2, function () {\r\n      cssFileText += \"<style>\" + cssFile2.html() + \"</style>\";\r\n      def2.resolve();\r\n    });\r\n\r\n    //gets called asynchronously after the css files have been loaded\r\n    $.when(def1, def2).done(function () {\r\n      var html =\r\n        \"<HTML>\\n\" +\r\n        \"<HEAD>\\n\\n\" +\r\n        \"<Title>\" +\r\n        pageTitle +\r\n        \"</Title>\\n\" +\r\n        cssFileText +\r\n        \"\\n\" +\r\n        \"<style>\" +\r\n        \".hideOnPrint, .rowFilters {display:none}\" +\r\n        \"</style>\\n\" +\r\n        \"</HEAD>\\n\" +\r\n        \"<BODY>\\n\" +\r\n        divOutput +\r\n        \"\\n\" +\r\n        \"</BODY>\\n\" +\r\n        \"</HTML>\";\r\n\r\n      var printWP = window.open(\"\", \"printWebPart\");\r\n      printWP.document.open();\r\n      //insert content\r\n      printWP.document.write(html);\r\n\r\n      printWP.document.close();\r\n      //open print dialog\r\n      printWP.print();\r\n    });\r\n  }\r\n\r\n  //make sure iframe with id csvexprframe is added to page up top\r\n  //http://stackoverflow.com/questions/18185660/javascript-jquery-exporting-data-in-csv-not-working-in-ie\r\n  function m_fnExportToCsv(fileName, tableName, removeHeader) {\r\n    var data = m_fnGetCellValues(tableName);\r\n\r\n    if (removeHeader == true) data = data.slice(1);\r\n\r\n    var csv = m_fnConvertToCsv(data);\r\n    //\tconsole.log( csv );\r\n    if (navigator.userAgent.search(\"Trident\") >= 0) {\r\n      window.CsvExpFrame.document.open(\"text/html\", \"replace\");\r\n      //\t\twindow.CsvExpFrame.document.open(\"application/csv\", \"replace\");\r\n      //\t\twindow.CsvExpFrame.document.charset = \"utf-8\";\r\n      //\t\twindow.CsvExpFrame.document.open(\"application/ms-excel\", \"replace\");\r\n      window.CsvExpFrame.document.write(csv);\r\n      window.CsvExpFrame.document.close();\r\n      window.CsvExpFrame.focus();\r\n      window.CsvExpFrame.document.execCommand(\r\n        \"SaveAs\",\r\n        true,\r\n        fileName + \".csv\"\r\n      );\r\n    } else {\r\n      var uri = \"data:text/csv;charset=utf-8,\" + escape(csv);\r\n      var downloadLink = document.createElement(\"a\");\r\n      downloadLink.href = uri;\r\n      downloadLink.download = fileName + \".csv\";\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    }\r\n  }\r\n\r\n  function m_fnGetCellValues(tableName) {\r\n    var table = document.getElementById(tableName);\r\n\r\n    //remove headers and footers\r\n    if (table.innerHTML.indexOf(\"rowFilters\") >= 0) {\r\n      var deets = $(\"<div>\").append(table.outerHTML);\r\n      deets.find(\".rowFilters\").each(function () {\r\n        $(this).remove();\r\n      });\r\n      table = deets.find(\"table\")[0];\r\n    }\r\n    if (table.innerHTML.indexOf(\"footer\") >= 0) {\r\n      var deets = $(\"<div>\").append(table.outerHTML);\r\n      deets.find(\".footer\").each(function () {\r\n        $(this).remove();\r\n      });\r\n      table = deets.find(\"table\")[0];\r\n    }\r\n\r\n    var tableArray = [];\r\n    for (var r = 0, n = table.rows.length; r < n; r++) {\r\n      tableArray[r] = [];\r\n      for (var c = 0, m = table.rows[r].cells.length; c < m; c++) {\r\n        var text =\r\n          table.rows[r].cells[c].textContent ||\r\n          table.rows[r].cells[c].innerText;\r\n        tableArray[r][c] = text.trim();\r\n      }\r\n    }\r\n    return tableArray;\r\n  }\r\n\r\n  function m_fnConvertToCsv(objArray) {\r\n    var array = typeof objArray != \"object\" ? JSON.parse(objArray) : objArray;\r\n    var str = \"sep=,\\r\\n\";\r\n    var line = \"\";\r\n    var index;\r\n    var value;\r\n    for (var i = 0; i < array.length; i++) {\r\n      line = \"\";\r\n      var array1 = array[i];\r\n      for (index in array1) {\r\n        if (array1.hasOwnProperty(index)) {\r\n          value = array1[index] + \"\";\r\n          line += '\"' + value.replace(/\"/g, '\"\"') + '\",';\r\n        }\r\n      }\r\n      line = line.slice(0, -1);\r\n      str += line + \"\\r\\n\";\r\n    }\r\n    return str;\r\n  }\r\n\r\n  var publicMembers = {\r\n    GetSiteUrl: function () {\r\n      if (m_siteUrl == \"/\") return \"\";\r\n      else return m_siteUrl;\r\n    },\r\n    GetListTitleRequests: function () {\r\n      return m_listTitleRequests;\r\n    },\r\n    GetListNameRequests: function () {\r\n      return m_listNameRequests;\r\n    },\r\n    GetListTitleRequestsInternal: function () {\r\n      return m_listTitleRequestsInternal;\r\n    },\r\n    GetListNameRequestsInternal: function () {\r\n      return m_listNameRequestsInternal;\r\n    },\r\n    GetListTitleResponses: function () {\r\n      return m_listTitleResponses;\r\n    },\r\n    GetListNameResponses: function () {\r\n      return m_listNameResponses;\r\n    },\r\n    GetLibTitleRequestDocs: function () {\r\n      return m_libTitleRequestDocs;\r\n    },\r\n    GetLibNameRequestDocs: function () {\r\n      return m_libNameRequestDocs;\r\n    },\r\n    GetLibTitleCoverSheets: function () {\r\n      return m_libTitleCoverSheet;\r\n    },\r\n    GetLibNameCoverSheets: function () {\r\n      return m_libNameCoverSheet;\r\n    },\r\n    GetLibTitleResponseDocs: function () {\r\n      return m_libTitleResponseDocs;\r\n    },\r\n    GetLibNameResponseDocs: function () {\r\n      return m_libNameResponseDocs;\r\n    },\r\n    GetLibTitleResponseDocsEA: function () {\r\n      return m_libTitleResponseDocsEA;\r\n    },\r\n    GetLibNameResponseDocsEA: function () {\r\n      return m_libNameResponseDocsEA;\r\n    },\r\n    GetListTitleActionOffices: function () {\r\n      return m_listTitleActionOffices;\r\n    },\r\n    GetListNameActionOffices: function () {\r\n      return m_listNameActionOffices;\r\n    },\r\n    GetListTitleEmailHistory: function () {\r\n      return m_listTitleEmailHistory;\r\n    },\r\n    GetListNameEmailHistory: function () {\r\n      return m_listNameEmailHistory;\r\n    },\r\n    GetListTitleBulkResponses: function () {\r\n      return m_listTitleBulkResponses;\r\n    },\r\n    GetListNameBulkResponses: function () {\r\n      return m_listNameBulkResponses;\r\n    },\r\n    GetListTitleBulkPermissions: function () {\r\n      return m_listTitleBulkPermissions;\r\n    },\r\n    GetListNameBulkPermissions: function () {\r\n      return m_listNameBulkPermissions;\r\n    },\r\n    GetGroupNameSpecialPerm1: function () {\r\n      return m_groupNameSpecialPermName1;\r\n    },\r\n    GetGroupNameSpecialPerm2: function () {\r\n      return m_groupNameSpecialPermName2;\r\n    },\r\n    GetGroupNameQA: function () {\r\n      return m_groupNameQA;\r\n    },\r\n    GetGroupNameEA: function () {\r\n      return m_groupNameEA;\r\n    },\r\n    Refresh: m_fnRefresh,\r\n    OnLoadDisplayTimeStamp: m_fnOnLoadDisplayTimeStamp,\r\n    OnLoadDisplayTabAndResponse: m_fnOnLoadDisplayTabAndResponse,\r\n    OnLoadFilterResponses: function (responseStatus1, responseStatus2) {\r\n      m_fnOnLoadFilterResponses(responseStatus1, responseStatus2);\r\n    },\r\n    SetResponseDocLibGUID: function (libGUID) {\r\n      m_libResponseDocsLibraryGUID = libGUID;\r\n    },\r\n    GetResponseDocLibGUID: function () {\r\n      return m_libResponseDocsLibraryGUID;\r\n    },\r\n    LoadSiteGroups: function (itemColl) {\r\n      m_fnLoadSiteGroups(itemColl);\r\n    },\r\n    GetSPSiteGroup: function (groupName) {\r\n      return m_fnGetSPSiteGroup(groupName);\r\n    },\r\n    LoadActionOffices: function (itemColl) {\r\n      m_fnLoadActionOffices(itemColl);\r\n    },\r\n    GetActionOffices: function () {\r\n      return m_arrAOs;\r\n    },\r\n    GetAOSPGroupName: function (groupName) {\r\n      return m_fnGetAOSPGroupName(groupName);\r\n    },\r\n    CheckSPItemHasGroupPermission: function (item, groupName, permissionLevel) {\r\n      return m_fnCheckSPItemHasGroupPermission(\r\n        item,\r\n        groupName,\r\n        permissionLevel\r\n      );\r\n    },\r\n    GoToResponse: function (responseTitle, isIA) {\r\n      m_fnGoToResponse(responseTitle, isIA);\r\n    },\r\n    GetResponseDocStyleTag: function (documentStatus) {\r\n      return m_fnGetResponseDocStyleTag(documentStatus);\r\n    },\r\n    GetResponseDocStyleTag2: function (documentStatus) {\r\n      return m_fnGetResponseDocStyleTag2(documentStatus);\r\n    },\r\n    CheckIfEmailFolderExists: function (items, requestNumber) {\r\n      return m_fnCheckIfEmailFolderExists(items, requestNumber);\r\n    },\r\n    CreateEmailFolder: function (list, requestNumber, requestItem, OnComplete) {\r\n      return m_fnCreateEmailFolder(\r\n        list,\r\n        requestNumber,\r\n        requestItem,\r\n        OnComplete\r\n      );\r\n    },\r\n    AddOptions: function (arr, ddlID, dateSort, responseSort) {\r\n      m_fnAddOptions(arr, ddlID, dateSort, responseSort);\r\n    },\r\n    ExistsInArr: function (arr, val) {\r\n      return m_fnExistsInArr(arr, val);\r\n    },\r\n    GetTrueFalseIcon: function (val) {\r\n      return m_fnGetTrueFalseIcon(val);\r\n    },\r\n    PadDigits: function (n, totalDigits) {\r\n      return m_fnPadDigits(n, totalDigits);\r\n    },\r\n    PreciseRound: function (num, decimals) {\r\n      return m_fnPreciseRound(num, decimals);\r\n    },\r\n    GetFriendlyFileSize: function (fileSize) {\r\n      return m_fnGetFriendlyFileSize(fileSize);\r\n    },\r\n    GetISODateString: function (d) {\r\n      return m_fnISODateString(d);\r\n    },\r\n    GetFriendlyDisplayName: function (oListItem, fieldName) {\r\n      return m_fnGetFriendlyDisplayName(oListItem, fieldName);\r\n    },\r\n    BindHandlerResponseDoc: m_fnBindHandlerResponseDoc,\r\n    PrintStatusReport: function (pageTitle, divTbl) {\r\n      m_fnPrintPage(pageTitle, divTbl);\r\n    },\r\n    ExportToCsv: function (fileName, tableName, removeHeader) {\r\n      m_fnExportToCsv(fileName, tableName, removeHeader);\r\n    },\r\n    ViewUserManuals: function (docType) {\r\n      m_fnViewUserManuals(docType);\r\n    },\r\n    //GetLookupFieldText: function( fieldName ){ return m_fnGetLookupFieldText( fieldName); },\r\n    GetLookupDisplayText: function (fieldName) {\r\n      return m_fnGetLookupDisplayText(fieldName);\r\n    },\r\n    GetLookupFormField: function (fieldName) {\r\n      return m_fnGetLookupFormField(fieldName);\r\n    },\r\n    SetLookupFromFieldNameByText: function (fieldName, text) {\r\n      return m_fnSetLookupFromFieldNameByText(fieldName, text);\r\n    },\r\n    SortResponseObjects: function (a, b) {\r\n      return m_fnSortResponseObjectNoCase(a, b);\r\n    },\r\n    SortResponseTitles: m_fnSortResponseTitleNoCase,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\n// ExecuteOrDelayUntilScriptLoaded(InitReport, \"sp.js\");\r\nInitReport();\r\n", "\uFEFFconst html = String.raw;\r\n\r\nexport const aoDbTemplate = html`\r\n  <iframe id=\"CsvExpFrame\" style=\"display: none\"></iframe>\r\n\r\n  <div\r\n    id=\"divCounter\"\r\n    style=\"display: none\"\r\n    title=\"used to auto refresh the page\"\r\n  >\r\n    600\r\n  </div>\r\n\r\n  <div class=\"audit\">\r\n    <!-- ko with: blockingTasks -->\r\n    <div\r\n      class=\"tasks blocking dimmer\"\r\n      data-bind=\"css: {'active': $data.length}\"\r\n    >\r\n      <span class=\"loader\"></span>\r\n      <ul class=\"\" data-bind=\"foreach: $data\">\r\n        <li data-bind=\"text: msg + '... ' + Status()\"></li>\r\n      </ul>\r\n    </div>\r\n    <!-- /ko -->\r\n\r\n    <!-- ko with: runningTasks -->\r\n    <div class=\"tasks running\">\r\n      <ul class=\"\" data-bind=\"foreach: $data\">\r\n        <li data-bind=\"text: msg + '... ' + Status()\"></li>\r\n      </ul>\r\n    </div>\r\n    <!-- /ko -->\r\n    <div id=\"divLoading\" style=\"color: green; padding-bottom: 10px\">\r\n      Please Wait... Loading\r\n      <span\r\n        data-bind=\"visible: arrResponses().length > 0 && debugMode, text: arrResponses().length\"\r\n      ></span>\r\n    </div>\r\n    <div id=\"divUsersGroups\" style=\"color: green; padding-bottom: 10px\"></div>\r\n    <div class=\"audit-body\">\r\n      <div class=\"reports-container\">\r\n        <div id=\"divRefresh\" class=\"quick-links\" style=\"display: none\">\r\n          <div>\r\n            <a\r\n              title=\"Refresh this page\"\r\n              href=\"javascript:void(0)\"\r\n              data-bind=\"click: refresh\"\r\n              ><span class=\"ui-icon ui-icon-refresh\"></span>Refresh</a\r\n            >\r\n          </div>\r\n          <div>\r\n            <a\r\n              title=\"View User Manual\"\r\n              href=\"javascript:void(0)\"\r\n              onclick=\"Audit.Common.Utilities.ViewUserManuals('AO User Manual')\"\r\n              ><span class=\"ui-icon ui-icon-help\"></span>User Manual</a\r\n            >\r\n          </div>\r\n          <div>\r\n            <a title=\"Help\" href=\"mailto:cgfsauditrequests@state.gov\"\r\n              ><span class=\"ui-icon ui-icon-mail-closed\"></span>Request Help</a\r\n            >\r\n          </div>\r\n        </div>\r\n        <div id=\"\" style=\"margin-top: 20px\">\r\n          <!-- ko using: tabs -->\r\n          <ul class=\"ui-tabs-nav\" data-bind=\"foreach: tabOpts\">\r\n            <li\r\n              data-bind=\"text: linkText, \r\n            click: $parent.clickTabLink, \r\n            css: {active: $parent.isSelected($data)}\"\r\n            ></li>\r\n          </ul>\r\n          <!-- ko foreach: tabOpts -->\r\n          <div\r\n            data-bind=\"template: {\r\n              name: template.id,\r\n              data: template.data\r\n            },\r\n            visible: $parent.isSelected($data)\"\r\n          ></div>\r\n          <!-- /ko -->\r\n          <!-- /ko -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <script type=\"text/html\" id=\"responseStatusReportTemplate\">\r\n    <div id=\"tabs-0\">\r\n      <div\r\n        id=\"lblStatusReportResponsesMsg\"\r\n        style=\"padding-top: 5px; color: green\"\r\n      >\r\n        <span\r\n          data-bind=\"css: (cntPendingReview() > 0 ? 'ui-icon ui-icon-alert' : 'ui-icon ui-icon-circle-check')\"\r\n        ></span\r\n        >There are <span data-bind=\"text: cntPendingReview\"></span> Responses\r\n        pending your review\r\n      </div>\r\n      <div\r\n        id=\"divButtons\"\r\n        style=\"padding-top: 3px\"\r\n        data-bind=\"visible: arrResponses().length > 0\"\r\n      >\r\n        <a\r\n          id=\"btnPrint1\"\r\n          title=\"Click here to Print\"\r\n          href=\"javascript:void(0)\"\r\n          class=\"hideOnPrint\"\r\n          ><span class=\"ui-icon ui-icon-print\">Print</span></a\r\n        >\r\n        <a class=\"export1 hideOnPrint\" title=\"Export to CSV\" href=\"#\"\r\n          ><span class=\"ui-icon ui-icon-disk\">Export to CSV</span></a\r\n        >\r\n        <a\r\n          id=\"btnViewAll\"\r\n          title=\"View All\"\r\n          href=\"javascript:void(0)\"\r\n          data-bind=\"visible: arrFilteredResponsesCount() < arrResponses().length && doSort, click: ClearFiltersResponseTab\"\r\n          ><span class=\"ui-icon ui-icon-circle-zoomout\"></span>View All\r\n          Responses</a\r\n        >\r\n      </div>\r\n\r\n      <div id=\"divStatusReportRespones\">\r\n        <table\r\n          id=\"tblStatusReportResponses\"\r\n          class=\"tablesorter report\"\r\n          data-bind=\"visible: arrResponses().length > 0\"\r\n        >\r\n          <thead>\r\n            <tr\r\n              valign=\"top\"\r\n              class=\"rowFilters\"\r\n              data-bind=\"visible: arrResponses().length > 0\"\r\n            >\r\n              <th class=\"sorter-false filter\" nowrap=\"nowrap\">\r\n                <select\r\n                  id=\"ddlResponseName\"\r\n                  data-bind=\"options: $root.ddOptionsResponseTabResponseTitle, value: filterResponseTabResponseName, optionsCaption: '-Select-'\"\r\n                ></select>\r\n              </th>\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\"></th>\r\n              <th class=\"sorter-false filter\" nowrap=\"nowrap\">\r\n                <select\r\n                  id=\"ddlResponseRequestInternalDueDate\"\r\n                  data-bind=\"options: $root.ddOptionsResponseTabRequestInternalDueDate, value: filterResponseTabRequestIntDueDate, optionsCaption: '-Select-'\"\r\n                ></select>\r\n              </th>\r\n              <th class=\"sorter-false filter\" nowrap=\"nowrap\">\r\n                <select\r\n                  id=\"ddlResponseStatus\"\r\n                  data-bind=\"options: $root.ddOptionsResponseTabResponseStatus, value: filterResponseTabResponseStatus, optionsCaption: '-Select-'\"\r\n                ></select>\r\n              </th>\r\n              <th class=\"sorter-false\"></th>\r\n              <th class=\"sorter-false\"></th>\r\n            </tr>\r\n            <tr valign=\"top\">\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\">Response Name</th>\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\">Response Subject</th>\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\">Due Date</th>\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\">Response Status</th>\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\"># of Documents</th>\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\">Modified</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id=\"fbody\">\r\n            <!-- ko foreach: arrResponses -->\r\n            <tr\r\n              class=\"sr-response-item\"\r\n              data-bind=\"css: {'highlighted': highlight}\"\r\n            >\r\n              <td class=\"sr-response-title\">\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  title=\"Go to Response Details\"\r\n                  data-bind=\"text: title,\r\n          click: () => Audit.AOReport.Report.GoToResponse(title)\"\r\n                >\r\n                </a>\r\n              </td>\r\n              <td\r\n                class=\"sr-response-requestSubject\"\r\n                data-bind=\"text: requestSubject\"\r\n              ></td>\r\n              <td\r\n                class=\"sr-response-internalDueDate\"\r\n                data-bind=\"text: internalDueDate\"\r\n              ></td>\r\n              <td class=\"sr-response-status\" data-bind=\"text: status\"></td>\r\n              <td class=\"sr-response-docCount\" data-bind=\"text: docCount\"></td>\r\n              <td class=\"sr-response-modified\" data-bind=\"text: modified\"></td>\r\n            </tr>\r\n            <!-- /ko -->\r\n          </tbody>\r\n          <tfoot class=\"footer\">\r\n            <tr>\r\n              <th colspan=\"6\">\r\n                Displaying\r\n                <span\r\n                  id=\"spanResponsesDisplayedTotal\"\r\n                  style=\"color: green\"\r\n                  data-bind=\"text: arrFilteredResponsesCount()\"\r\n                  >0</span\r\n                >\r\n                out of\r\n                <span\r\n                  id=\"spanResponsesTotal\"\r\n                  style=\"color: green\"\r\n                  data-bind=\"text: arrResponses().length\"\r\n                  >0</span\r\n                >\r\n                Responses\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </script>\r\n\r\n  <script type=\"text/html\" id=\"responseDetailTemplate\">\r\n    <div id=\"tabs-1\">\r\n      <div style=\"padding-bottom: 15px\">\r\n        <table>\r\n          <tr>\r\n            <td><span>Responses Pending Action:</span></td>\r\n            <td>\r\n              <select\r\n                id=\"ddlResponsesOpen\"\r\n                data-bind=\"options: $root.ddOptionsResponseInfoTabResponseNameOpen2, value: filterResponseInfoTabResponseNameOpen2, optionsCaption: '-Select-'\"\r\n              ></select>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td><span>Other Responses:</span></td>\r\n            <td>\r\n              <select\r\n                id=\"ddlResponsesProcessed\"\r\n                data-bind=\"options: $root.ddOptionsResponseInfoTabResponseNameProcessed2, value: filterResponseInfoTabResponseNameProcessed2, optionsCaption: '-Select-'\"\r\n              ></select>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n      <div class=\"response-detail-view\">\r\n        <div\r\n          id=\"divResponseInfo\"\r\n          class=\"audit-form response-info-form\"\r\n          data-bind=\"with: currentResponse\"\r\n        >\r\n          <div class=\"form-header\">\r\n            <h3 class=\"uppercase form-title\">\r\n              AUDIT RESPONSE DETAILS\r\n              <div class=\"fw-semibold\" data-bind=\"text: title\"></div>\r\n            </h3>\r\n            <!-- <button\r\n          type=\"button\"\r\n          class=\"btn btn-link form-title\"\r\n          data-bind=\"click: $parent.refreshRequest\"\r\n        >\r\n          <i title=\"Refresh Request\" class=\"fa-solid fa-arrows-rotate\"></i>\r\n        </button> -->\r\n          </div>\r\n\r\n          <div class=\"form-row uppercase\">\r\n            <dl>\r\n              <dt>Subject</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"requestInfoSubject\"\r\n                  data-bind=\"text: request.subject\"\r\n                ></span>\r\n              </dd>\r\n              <dt>Due Date</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"requestInfoInternalDueDate\"\r\n                  data-bind=\"text: request.internalDueDate\"\r\n                ></span>\r\n              </dd>\r\n            </dl>\r\n            <dl>\r\n              <dt>Response Status</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"responseInfoStatus\"\r\n                  data-bind=\"style: { color:  resStatus == '7-Closed' ? 'red' : 'green' }\"\r\n                >\r\n                  <span data-bind=\"text: resStatus\"></span\r\n                  ><span data-bind=\"visible: resStatus == '7-Closed'\">\r\n                    on <span data-bind=\"text: closedDate \"></span> by\r\n                    <span data-bind=\"text: closedBy\"></span>\r\n                  </span>\r\n                </span>\r\n              </dd>\r\n              <dt>Action Office</dt>\r\n              <dd>\r\n                <span id=\"responseInfoAO\" data-bind=\"text: actionOffice\"></span>\r\n                <span data-bind=\"visible: poc\" style=\"color: green\">POC: </span\r\n                ><span data-bind=\"text: poc\" style=\"color: green\"></span>\r\n              </dd>\r\n              <dt>Related Audit</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"requestInfoRelatedAudit\"\r\n                  data-bind=\"text: request.relatedAudit\"\r\n                ></span>\r\n              </dd>\r\n            </dl>\r\n          </div>\r\n          <div class=\"form-row uppercase\">\r\n            <dl>\r\n              <dt>Action Items</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"requestInfoActionItems\"\r\n                  data-bind=\"html: request.actionItems\"\r\n                ></span>\r\n              </dd>\r\n              <dt>Comments</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"responseInfoComments\"\r\n                  data-bind=\"html: comments\"\r\n                ></span>\r\n              </dd>\r\n            </dl>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <div id=\"divCoverSheets\" data-bind=\"visible: currentResponse\">\r\n            <fieldset>\r\n              <legend>Cover Sheets/Supplemental Documents</legend>\r\n\r\n              <div\r\n                id=\"divEmptyCoversheetsMsg\"\r\n                style=\"border: 0px !important; font-style: italic\"\r\n                data-bind=\"visible: arrCoverSheets().length <= 0\"\r\n              >\r\n                There are 0 cover sheets or supplemental documents\r\n              </div>\r\n              <table\r\n                id=\"tblCoverSheets\"\r\n                class=\"tablesorter report\"\r\n                data-bind=\"visible: arrCoverSheets().length > 0\"\r\n              >\r\n                <thead>\r\n                  <tr valign=\"top\">\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Name</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody data-bind=\"foreach: arrCoverSheets\">\r\n                  <tr class=\"coversheet-item\">\r\n                    <td class=\"coversheet-title\" title=\"Click to Download\">\r\n                      <a\r\n                        data-bind=\"attr: { href: 'javascript:void(0)', onclick: link}\"\r\n                        ><span data-bind=\"text: title\"></span\r\n                      ></a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr valign=\"top\">\r\n                    <th nowrap=\"nowrap\">\r\n                      Total:\r\n                      <span\r\n                        id=\"tblCoverSheetsTotal\"\r\n                        data-bind=\"text: arrCoverSheets().length\"\r\n                        >0</span\r\n                      >\r\n                    </th>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n            </fieldset>\r\n          </div>\r\n\r\n          <div\r\n            class=\"divSubmit\"\r\n            data-bind=\"visible: currentResponse && showSubmit\"\r\n          >\r\n            <fieldset style=\"border-color: GreenYellow\">\r\n              <legend style=\"font-weight: bold; font-size: 11pt\">\r\n                SUBMIT RESPONSE\r\n              </legend>\r\n              <div style=\"padding-top: 15px; padding-bottom: 15px\">\r\n                <span class=\"ui-icon ui-icon-disk\"></span\r\n                ><a\r\n                  class=\"btnSubmitPackage\"\r\n                  href=\"javascript:void(0)\"\r\n                  title=\"Click to Submit the Response Package\"\r\n                  data-bind=\"click: ClickSubmitResponse\"\r\n                  >Submit this Response Package</a\r\n                >\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n\r\n          <div id=\"divResponseDocs\" data-bind=\"visible: currentResponse\">\r\n            <fieldset>\r\n              <legend>Response Documents</legend>\r\n\r\n              <table\r\n                id=\"tblResponseDocs\"\r\n                class=\"tablesorter report\"\r\n                data-bind=\"visible: cntResponseDocs() > 0\"\r\n              >\r\n                <thead>\r\n                  <tr valign=\"top\">\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Type</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Name</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Title</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Receipt Date</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">File Size</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Modified</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Modified By</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody data-bind=\"with: arrResponseDocs\">\r\n                  <tr class=\"requestInfo-response-doc\">\r\n                    <td colspan=\"10\">\r\n                      <img\r\n                        style=\"background-color: transparent\"\r\n                        src=\"/_layouts/images/minus.gif\"\r\n                        title=\"Expand/Collapse\"\r\n                        data-bind=\"toggleClick: $data, toggleClass: 'collapsed', containerType: 'doc', classContainer: '.requestInfo-response-doc'\"\r\n                      /><span data-bind=\"text: responseTitle\"></span>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <!-- ko foreach: responseDocs-->\r\n\r\n                  <tr\r\n                    class=\"requestInfo-response-doc-item\"\r\n                    data-bind=\"style: styleTag\"\r\n                  >\r\n                    <td>\r\n                      <img\r\n                        data-bind=\"attr:{ src: $parent.siteUrl + '/_layouts/images/' + docIcon}\"\r\n                      />\r\n                    </td>\r\n                    <td\r\n                      class=\"requestInfo-response-doc-title\"\r\n                      title=\"Click to Download\"\r\n                    >\r\n                      <a\r\n                        data-bind=\"downloadLink: '../_layouts/download.aspx?SourceUrl=:folder/:fileName'\"\r\n                        ><span data-bind=\"text: fileName\"></span\r\n                      ></a>\r\n                      <span\r\n                        style=\"float: right\"\r\n                        data-bind=\"visible: ($parent.responseStatus == '1-Open' || $parent.responseStatus == '3-Returned to Action Office') && documentStatus == 'Open'\"\r\n                      >\r\n                        <a\r\n                          title=\"Delete Response Document\"\r\n                          href=\"javascript:void(0)\"\r\n                          data-bind=\"click:  $root.ClickMarkForDeletionResponseDoc\"\r\n                          ><span class=\"ui-icon ui-icon-trash\"\r\n                            >Delete Response Document</span\r\n                          ></a\r\n                        >\r\n                      </span>\r\n                    </td>\r\n                    <td nowrap data-bind=\"text: title\"></td>\r\n                    <td nowrap data-bind=\"text: receiptDate\"></td>\r\n                    <td nowrap data-bind=\"text: fileSize\"></td>\r\n                    <td\r\n                      class=\"requestInfo-response-doc-modified\"\r\n                      data-bind=\"text: modifiedDate\"\r\n                    ></td>\r\n                    <td\r\n                      class=\"requestInfo-response-doc-modifiedBy\"\r\n                      data-bind=\"text: modifiedBy\"\r\n                    ></td>\r\n                  </tr>\r\n\r\n                  <!-- /ko -->\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr valign=\"top\">\r\n                    <th colspan=\"7\" nowrap=\"nowrap\">\r\n                      Total:\r\n                      <span\r\n                        id=\"tblResponseDocsTotal\"\r\n                        data-bind=\"text: cntResponseDocs\"\r\n                        >0</span\r\n                      >\r\n                    </th>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n              <div class=\"divUpload\" data-bind=\"visible: showUpload()\">\r\n                <label class=\"file-upload-field\">\r\n                  Upload Response Documents:\r\n                  <div class=\"dropzone\" data-bind=\"\">Drop Files Here</div>\r\n                  <input\r\n                    class=\"file-upload\"\r\n                    type=\"file\"\r\n                    multiple\r\n                    data-bind=\"files: responseDocFiles\"\r\n                  />\r\n                </label>\r\n              </div>\r\n            </fieldset>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </script>\r\n\r\n  <div id=\"divTest\"></div>\r\n`;\r\n", "const state = {};\r\n\r\nwindow.history.replaceState({}, \"\", document.location.href);\r\nexport function setUrlParam(param, newVal) {\r\n  // No need to reset the param if it hasn't changed\r\n  if (getUrlParam(param) == newVal) return;\r\n\r\n  const search = window.location.search;\r\n  //var urlParams = new URLSearchParams(queryString);\r\n\r\n  const regex = new RegExp(\"([?;&])\" + param + \"[^&;]*[;&]?\");\r\n  const query = search.replace(regex, \"$1\").replace(/&$/, \"\");\r\n\r\n  const urlParams =\r\n    (query.length > 2 ? query + \"&\" : \"?\") +\r\n    (newVal ? param + \"=\" + newVal : \"\");\r\n\r\n  state[param] = newVal;\r\n  window.history.pushState(state, \"\", urlParams.toString());\r\n}\r\n\r\nexport function getUrlParam(param) {\r\n  const results = new RegExp(\"[?&]\" + param + \"=([^&#]*)\").exec(\r\n    window.location.href\r\n  );\r\n  if (results == null) {\r\n    return null;\r\n  } else {\r\n    return decodeURI(results[1]) || 0;\r\n  }\r\n}\r\n", "import { setUrlParam } from \"../../common/router.js\";\r\n\r\n// const urlParam = \"Tab\";\r\n\r\nexport class TabsModule {\r\n  constructor(tabOpts, urlParam = \"Tab\") {\r\n    this.urlParam = urlParam;\r\n    ko.utils.arrayPushAll(this.tabOpts, tabOpts);\r\n    this.selectedTab.subscribe(this.tabChangeHandler);\r\n    window.addEventListener(\"popstate\", this.popStateHandler);\r\n  }\r\n\r\n  tabOpts = ko.observableArray();\r\n  selectedTab = ko.observable();\r\n\r\n  isSelected = (tab) => {\r\n    return tab.id == this.selectedTab()?.id;\r\n  };\r\n\r\n  clickTabLink = (tab) => {\r\n    this.selectedTab(tab);\r\n    console.log(\"selected: \" + tab.id);\r\n  };\r\n\r\n  selectTab = (tab) => this.selectById(tab.id);\r\n\r\n  selectById = (tabId) => {\r\n    const tabById =\r\n      this.tabOpts().find((tab) => tab.id == tabId) ?? this.getDefaultTab();\r\n    this.selectedTab(tabById);\r\n  };\r\n\r\n  getDefaultTab = () => this.tabOpts()[0];\r\n\r\n  tabChangeHandler = (newTab) => {\r\n    if (newTab) setUrlParam(this.urlParam, newTab.id);\r\n    // window.history.pushState({ tab: { id: newTab.id } }, \"\", newTab.id);\r\n  };\r\n\r\n  popStateHandler = (event) => {\r\n    if (event.state) {\r\n      if (event.state[this.urlParam])\r\n        this.selectById(event.state[this.urlParam]);\r\n    }\r\n  };\r\n}\r\n\r\nexport class Tab {\r\n  constructor(id, linkText, template) {\r\n    this.id = id;\r\n    this.linkText = linkText;\r\n    this.template = template;\r\n  }\r\n}\r\n", "\uFEFFimport \"../../common/utilities.js\";\r\n\r\nimport { aoDbTemplate } from \"./AO_DB_Template.js\";\r\nimport { TabsModule, Tab } from \"../../components/tabs/tabs_module.js\";\r\nimport { setUrlParam } from \"../../common/index.js\";\r\nimport { appContext } from \"../../infrastructure/application_db_context.js\";\r\nimport { uploadResponseDocFile } from \"../../services/index.js\";\r\nimport { getAllItems } from \"../../services/legacy_helpers.js\";\r\n\r\nimport {\r\n  addTask,\r\n  blockingTasks,\r\n  finishTask,\r\n  runningTasks,\r\n  taskDefs,\r\n} from \"../../services/tasks.js\";\r\n\r\nimport \"../../sal/infrastructure/knockout_extensions.js\";\r\n\r\nvar Audit = window.Audit || {};\r\nAudit.AOReport = Audit.AOReport || {};\r\n\r\nconst responseParam = \"ResNum\";\r\n\r\nAudit.AOReport.Init = function () {\r\n  var paramShowSiteActionsToAnyone = GetUrlKeyValue(\"ShowSiteActions\");\r\n  if (paramShowSiteActionsToAnyone != true) {\r\n    //hide it even for owners unless this param is passed into the URL; pass in param if you want to change the page web parts/settings\r\n    $(\"#RibbonContainer-TabRowLeft\").hide();\r\n    $(\".ms-siteactionsmenu\").hide();\r\n  }\r\n\r\n  /*setInterval(function() {\r\n\t    var divVal = $(\"#divCounter\").text();\r\n\t    var count = divVal * 1 - 1;\r\n\t    $(\"#divCounter\").text(count);\r\n\t    if (count <= 0) {\r\n\t       // location.href=\"https://example.com\";\r\n\t       Audit.Common.Utilities.Refresh();\r\n\t    }\r\n\t}, 1000);\r\n\t*/\r\n\r\n  function SetTimer() {\r\n    var intervalRefreshID = setInterval(function () {\r\n      var divVal = $(\"#divCounter\").text();\r\n      var count = divVal * 1 - 1;\r\n      $(\"#divCounter\").text(count);\r\n      if (count <= 0) {\r\n        if (!Audit.AOReport.Report.IsTransactionExecuting())\r\n          Audit.Common.Utilities.Refresh();\r\n        else {\r\n          clearInterval(intervalRefreshID);\r\n          $(\"#divCounter\").text(\"1200\");\r\n          SetTimer();\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  SetTimer();\r\n};\r\n\r\nAudit.AOReport.NewReportPage = function () {\r\n  var m_bigMap = new Object();\r\n  var m_arrRequests = new Array();\r\n  var m_arrResponses = new Array();\r\n  var m_arrPermissions = new Array();\r\n  var m_IA_SPGroupName = null;\r\n  var m_IA_ActionOffice = null;\r\n\r\n  var ownerGroup,\r\n    memberGroup,\r\n    visitorGroup = null;\r\n  var m_groupColl = null;\r\n\r\n  var m_requestItems = null;\r\n  var m_responseItems = null;\r\n  var m_ResponseDocsItems = null;\r\n  var m_aoItems = null;\r\n\r\n  var m_responseDocsLibrary = null;\r\n\r\n  var m_statusToFilterOn = \"\";\r\n  var m_curResponseSelectedIsEditableByAO = false;\r\n\r\n  var m_bIsTransactionExecuting = false;\r\n\r\n  var m_responseStatus1 = \"1-Open\";\r\n  var m_responseStatus2 = \"3-Returned to Action Office\";\r\n\r\n  function ViewModel() {\r\n    var self = this;\r\n\r\n    self.debugMode = ko.observable(false);\r\n    self.siteUrl = Audit.Common.Utilities.GetSiteUrl();\r\n\r\n    self.tabOpts = {\r\n      Responses: new Tab(\"response-report\", \"Status Report\", {\r\n        id: \"responseStatusReportTemplate\",\r\n        data: self,\r\n      }),\r\n      ResponseDetail: new Tab(\"response-detail\", \"Responses\", {\r\n        id: \"responseDetailTemplate\",\r\n        data: self,\r\n      }),\r\n    };\r\n    self.tabs = new TabsModule(Object.values(self.tabOpts));\r\n\r\n    self.runningTasks = runningTasks;\r\n    self.blockingTasks = blockingTasks;\r\n\r\n    //cant add rate limit because it'll affect the refresh\r\n    //self.arrResponses = ko.observableArray( null ).extend({ rateLimit: 500 });\r\n    self.arrResponses = ko.observableArray(null);\r\n    self.arrFilteredResponsesCount = ko.observable(0);\r\n    self.cntPendingReview = ko.observable(0);\r\n\r\n    self.ddOptionsResponseTabRequestID = ko.observableArray();\r\n    self.ddOptionsResponseTabRequestStatus = ko.observableArray();\r\n    self.ddOptionsResponseTabRequestInternalDueDate = ko.observableArray();\r\n    self.ddOptionsResponseTabRequestSample = ko.observableArray();\r\n    self.ddOptionsResponseTabResponseTitle = ko.observableArray();\r\n    self.ddOptionsResponseTabResponseStatus = ko.observableArray();\r\n    self.filterResponseTabRequestIntDueDate = ko.observable();\r\n    self.filterResponseTabResponseName = ko.observable();\r\n    self.filterResponseTabResponseStatus = ko.observable();\r\n    self.doSort = ko.observable(false);\r\n\r\n    self.ddOptionsResponseInfoTabResponseNameOpen2 = ko.observableArray();\r\n    self.ddOptionsResponseInfoTabResponseNameProcessed2 = ko.observableArray();\r\n    self.filterResponseInfoTabResponseNameOpen2 = ko.observable(\"\");\r\n    self.filterResponseInfoTabResponseNameProcessed2 = ko.observable(\"\");\r\n\r\n    self.currentResponse = ko.observable();\r\n    self.arrCoverSheets = ko.observableArray(null);\r\n    self.arrResponseDocs = ko.observable(null);\r\n    self.cntResponseDocs = ko.observable(0);\r\n\r\n    // File Input Control\r\n    self.responseDocFiles = ko.observableArray();\r\n\r\n    self.showUpload = ko.observable(false);\r\n    self.showSubmit = ko.observable(false);\r\n\r\n    self.refresh = () => window.location.reload();\r\n    self.onNewResponseDocCallback = self.refresh;\r\n\r\n    self.currentResponse.subscribe((newResponse) => {\r\n      if (!newResponse) return;\r\n      setUrlParam(responseParam, newResponse.title);\r\n    });\r\n    self.selectedFiltersResponseTab = ko.computed(function () {\r\n      var requestIntDueDate = self.filterResponseTabRequestIntDueDate();\r\n      var responseName = self.filterResponseTabResponseName();\r\n      var responseStatus = self.filterResponseTabResponseStatus();\r\n\r\n      return requestIntDueDate + \" \" + responseName + \" \" + responseStatus;\r\n    });\r\n\r\n    /** Behaviors **/\r\n\r\n    self.ClearFiltersResponseTab = function () {\r\n      self.filterResponseTabRequestIntDueDate(\"\");\r\n      self.filterResponseTabResponseName(\"\");\r\n      self.filterResponseTabResponseStatus(\"\");\r\n    };\r\n\r\n    self.FilterChangedResponseTab = function () {\r\n      document.body.style.cursor = \"wait\";\r\n      setTimeout(function () {\r\n        var requestIntDueDate = self.filterResponseTabRequestIntDueDate();\r\n        var responseName = self.filterResponseTabResponseName();\r\n        var responseStatus = self.filterResponseTabResponseStatus();\r\n\r\n        if (!requestIntDueDate && !responseName && !responseStatus) {\r\n          $(\".sr-response-item\").show();\r\n          self.arrFilteredResponsesCount(self.arrResponses().length);\r\n          document.body.style.cursor = \"default\";\r\n          return;\r\n        }\r\n\r\n        requestIntDueDate = !requestIntDueDate ? \"\" : requestIntDueDate;\r\n        responseName = !responseName ? \"\" : responseName;\r\n        responseStatus = !responseStatus ? \"\" : responseStatus;\r\n\r\n        var count = 0;\r\n        var eacher = $(\".sr-response-item\");\r\n        eacher.each(function () {\r\n          var hide = false;\r\n\r\n          if (\r\n            !hide &&\r\n            requestIntDueDate != \"\" &&\r\n            $.trim($(this).find(\".sr-response-internalDueDate\").text()) !=\r\n              requestIntDueDate\r\n          )\r\n            hide = true;\r\n          if (\r\n            !hide &&\r\n            responseName != \"\" &&\r\n            $.trim($(this).find(\".sr-response-title\").text()) != responseName\r\n          )\r\n            hide = true;\r\n          if (\r\n            !hide &&\r\n            responseStatus != \"\" &&\r\n            $.trim($(this).find(\".sr-response-status\").text()) != responseStatus\r\n          )\r\n            hide = true;\r\n\r\n          if (hide) $(this).hide();\r\n          else {\r\n            $(this).show();\r\n            count++;\r\n          }\r\n        });\r\n\r\n        self.arrFilteredResponsesCount(count);\r\n        document.body.style.cursor = \"default\";\r\n      }, 100);\r\n    };\r\n\r\n    self.ClickSubmitResponse = function () {\r\n      m_fnSubmitPackage();\r\n    };\r\n\r\n    self.ClickUploadResponseDoc = function () {\r\n      var oResponse = self.currentResponse();\r\n      if (oResponse && oResponse.number && oResponse.title)\r\n        m_fnUploadResponseDoc(oResponse.number, oResponse.title);\r\n    };\r\n\r\n    self.ClickMarkForDeletionResponseDoc = function (oResponseDoc) {\r\n      if (oResponseDoc && oResponseDoc.ID)\r\n        m_fnMarkForDeletionResponseDoc(oResponseDoc.ID);\r\n    };\r\n\r\n    /** Subscriptions **/\r\n\r\n    self.selectedFiltersResponseTab.subscribe(function (value) {\r\n      self.FilterChangedResponseTab();\r\n    });\r\n\r\n    self.doSort.subscribe(function (newValue) {\r\n      Audit.Common.Utilities.OnLoadDisplayTimeStamp();\r\n\r\n      if (self.arrResponses().length > 0 && newValue) {\r\n        //should trigger only once\r\n        self.arrFilteredResponsesCount(self.arrResponses().length);\r\n\r\n        //draw these first\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseTabResponseStatus(),\r\n          self.GetDDVals(\"status\")\r\n        );\r\n        self.ddOptionsResponseTabResponseStatus.valueHasMutated();\r\n\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseInfoTabResponseNameOpen2(),\r\n          self.GetDDVals2(\"1\", true)\r\n        );\r\n        self.ddOptionsResponseInfoTabResponseNameOpen2.valueHasMutated();\r\n\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseInfoTabResponseNameProcessed2(),\r\n          self.GetDDVals2(\"0\", true)\r\n        );\r\n        self.ddOptionsResponseInfoTabResponseNameProcessed2.valueHasMutated();\r\n\r\n        //draw these next\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseTabRequestInternalDueDate(),\r\n          self.GetDDVals(\"internalDueDate\")\r\n        );\r\n        self.ddOptionsResponseTabRequestInternalDueDate.valueHasMutated();\r\n\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseTabResponseTitle(),\r\n          self.GetDDVals(\"title\", true)\r\n        );\r\n        self.ddOptionsResponseTabResponseTitle.valueHasMutated();\r\n\r\n        setTimeout(function () {\r\n          var paramTabIndex = GetUrlKeyValue(\"Tab\");\r\n          if (paramTabIndex != null && paramTabIndex != \"\") {\r\n            // $(\"#tabs\").tabs(\"option\", \"active\", paramTabIndex);\r\n            self.tabs.selectById(paramTabIndex);\r\n          } else {\r\n            self.tabs.selectById(self.tabOpts.Responses.id);\r\n          }\r\n          if (\r\n            paramTabIndex == null ||\r\n            paramTabIndex == \"\" ||\r\n            paramTabIndex == 0\r\n          ) {\r\n            if (self.cntPendingReview() > 0) {\r\n              SP.UI.Notify.addNotification(\r\n                \"<div style='text-align:left'>There are <b>\" +\r\n                  self.cntPendingReview() +\r\n                  \"</b> Responses pending your review/action. <br/> <br/> Please click on the links in the <b>Response Name</b> column of the <b>Status Report tab</b> <br/> to access each response and upload documents and submit the package.</div>\",\r\n                false\r\n              );\r\n            }\r\n          }\r\n\r\n          var paramResponseNum = GetUrlKeyValue(\"ResNum\");\r\n          if (paramResponseNum != null && paramResponseNum != \"\") {\r\n            if (paramTabIndex == 0) {\r\n              if (\r\n                $(\"#ddlResponseName option[value='\" + paramResponseNum + \"']\")\r\n                  .length > 0\r\n              )\r\n                _myViewModel.filterResponseTabResponseName(paramResponseNum);\r\n            } else {\r\n              if (\r\n                $(\"#ddlResponsesOpen option[value='\" + paramResponseNum + \"']\")\r\n                  .length > 0\r\n              )\r\n                _myViewModel.filterResponseInfoTabResponseNameOpen2(\r\n                  paramResponseNum\r\n                );\r\n              else if (\r\n                $(\r\n                  \"#ddlResponsesProcessed option[value='\" +\r\n                    paramResponseNum +\r\n                    \"']\"\r\n                ).length > 0\r\n              )\r\n                _myViewModel.filterResponseInfoTabResponseNameProcessed2(\r\n                  paramResponseNum\r\n                );\r\n            }\r\n          }\r\n\r\n          BindHandlersOnLoad();\r\n\r\n          self.filterResponseTabResponseStatus(m_statusToFilterOn);\r\n\r\n          //$( \"#tblStatusReportResponses\" ).trigger(\"update\");\r\n          $(\"#tblStatusReportResponses\").tablesorter({\r\n            sortList: [[2, 0]],\r\n            selectorHeaders: \".sorter-true\",\r\n          });\r\n        }, 200);\r\n      }\r\n    });\r\n\r\n    /**TODO: factor these below **/\r\n    /* second tab */\r\n    self.filterResponseInfoTabResponseNameOpen2.subscribe(function (newValue) {\r\n      self.filterResponseInfoTabResponseName(newValue, true);\r\n    });\r\n\r\n    /* second tab */\r\n    self.filterResponseInfoTabResponseNameProcessed2.subscribe(function (\r\n      newValue\r\n    ) {\r\n      self.filterResponseInfoTabResponseName(newValue, false);\r\n    });\r\n\r\n    self.filterResponseInfoTabResponseName = function (\r\n      newValue,\r\n      bOpenResponses\r\n    ) {\r\n      self.currentResponse(null);\r\n      self.arrCoverSheets([]);\r\n      self.arrResponseDocs(null);\r\n      self.cntResponseDocs(0);\r\n      m_curResponseSelectedIsEditableByAO = false;\r\n\r\n      var oResponse = m_bigMap[\"response-\" + newValue];\r\n      if (oResponse) {\r\n        if (bOpenResponses)\r\n          self.filterResponseInfoTabResponseNameProcessed2(\"\");\r\n        else self.filterResponseInfoTabResponseNameOpen2(\"\");\r\n\r\n        self.currentResponse(oResponse);\r\n\r\n        LoadTabResponseInfoCoverSheets(oResponse);\r\n        LoadTabResponseInfoResponseDocs(oResponse);\r\n\r\n        if (bOpenResponses) m_curResponseSelectedIsEditableByAO = true;\r\n      }\r\n    };\r\n\r\n    self.responseDocFiles.subscribe(async function (files) {\r\n      if (!files.length) return;\r\n      const resId = self.currentResponse()?.ID;\r\n      if (!resId) return;\r\n      // const request = await getRequestByTitle(this.number);\r\n      const response = await appContext.AuditResponses.FindById(resId);\r\n\r\n      const promises = [];\r\n\r\n      for (let file of files) {\r\n        promises.push(\r\n          new Promise(async (resolve) => {\r\n            const newSheet = await uploadResponseDocFile(response, file);\r\n            resolve();\r\n          })\r\n        );\r\n      }\r\n\r\n      await Promise.all(promises);\r\n      // TODO: need to requery responsedocs\r\n      self.responseDocFiles.removeAll();\r\n      self.onNewResponseDocCallback();\r\n    });\r\n\r\n    /**Other**/\r\n    self.GetDDVals = function (fieldName, sortAsResponse) {\r\n      var types = ko.utils.arrayMap(self.arrResponses(), function (item) {\r\n        return item[fieldName];\r\n      });\r\n\r\n      var ddArr = ko.utils.arrayGetDistinctValues(types).sort();\r\n      if (sortAsResponse) ddArr.sort(Audit.Common.Utilities.SortResponseTitles);\r\n\r\n      if (ddArr[0] == \"\") ddArr.shift();\r\n\r\n      return ddArr;\r\n    };\r\n\r\n    self.GetDDVals2 = function (responseStatusType, sortAsResponse) {\r\n      var types = ko.utils.arrayMap(self.arrResponses(), function (item) {\r\n        var requestStatus = item.requestStatus;\r\n        var responseStatus = item.status;\r\n\r\n        if (responseStatusType == 0) {\r\n          //get the other responses\r\n          if (\r\n            responseStatus != m_responseStatus1 &&\r\n            responseStatus != m_responseStatus2\r\n          )\r\n            return item[\"title\"];\r\n          else return \"\";\r\n        } else if (responseStatusType == 1) {\r\n          //get responses pending action\r\n          if (\r\n            (responseStatus == m_responseStatus1 ||\r\n              responseStatus == m_responseStatus2) &&\r\n            (requestStatus == \"Open\" || requestStatus == \"ReOpened\")\r\n          )\r\n            return item[\"title\"];\r\n          else return \"\";\r\n        }\r\n      });\r\n\r\n      var ddArr = ko.utils.arrayGetDistinctValues(types).sort();\r\n      if (sortAsResponse) ddArr.sort(Audit.Common.Utilities.SortResponseTitles);\r\n\r\n      if (ddArr[0] == \"\") ddArr.shift();\r\n      return ddArr;\r\n    };\r\n  }\r\n\r\n  var _myViewModel = new ViewModel();\r\n  ko.applyBindings(_myViewModel);\r\n\r\n  LoadInfo();\r\n\r\n  async function LoadInfo() {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    const m_currentUser = web.get_currentUser();\r\n    currCtx.load(m_currentUser);\r\n\r\n    var requestList = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetListTitleRequests());\r\n    var requestQuery = new SP.CamlQuery();\r\n    requestQuery.set_viewXml(\r\n      '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy></Query></View>'\r\n    );\r\n    m_requestItems = requestList.getItems(requestQuery);\r\n    currCtx.load(\r\n      m_requestItems,\r\n      \"Include(ID, Title, ReqSubject, ReqStatus, InternalDueDate, ActionOffice, RelatedAudit, ActionItems, Comments, EmailSent, ClosedDate)\"\r\n    );\r\n    /*\r\n    var responseList = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetListTitleResponses());\r\n    var responseQuery = new SP.CamlQuery();\r\n    responseQuery.set_viewXml(\r\n      '<View Scope=\"RecursiveAll\"><Query><OrderBy><FieldRef Name=\"ReqNum\"/></OrderBy></Query></View>'\r\n    );\r\n    m_responseItems = responseList.getItems(responseQuery);\r\n    currCtx.load(\r\n      m_responseItems,\r\n      \"Include(ID, Title, ReqNum, ActionOffice, ReturnReason, SampleNumber, ResStatus, Comments, Modified, ClosedDate, ClosedBy, POC)\"\r\n    );\r\n\r\n    //make sure to only pull documents (fsobjtype = 0)\r\n    var responseDocsLib = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n    var responseDocsQuery = new SP.CamlQuery();\r\n    responseDocsQuery.set_viewXml(\r\n      '<View Scope=\"RecursiveAll\"><Query><Where><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">0</Value></Eq></Where></Query></View>'\r\n    );\r\n    m_ResponseDocsItems = responseDocsLib.getItems(responseDocsQuery);\r\n    currCtx.load(\r\n      m_ResponseDocsItems,\r\n      \"Include(ID, Title, ReqNum, ResID, DocumentStatus, ReceiptDate, FileLeafRef, FileDirRef, File_x0020_Size, Modified, Editor)\"\r\n    );\r\n    */\r\n\r\n    await Promise.all([\r\n      getAllItems(Audit.Common.Utilities.GetListTitleResponses(), [\r\n        \"ID\",\r\n        \"Title\",\r\n        \"ReqNum\",\r\n        \"ActionOffice\",\r\n        \"ReturnReason\",\r\n        \"SampleNumber\",\r\n        \"ResStatus\",\r\n        \"Comments\",\r\n        \"Modified\",\r\n        \"ClosedDate\",\r\n        \"ClosedBy\",\r\n        \"POC\",\r\n      ]).then((result) => (m_responseItems = result)),\r\n      getAllItems(Audit.Common.Utilities.GetLibTitleResponseDocs(), [\r\n        \"ID\",\r\n        \"Title\",\r\n        \"ReqNum\",\r\n        \"ResID\",\r\n        \"DocumentStatus\",\r\n        \"ReceiptDate\",\r\n        \"FileLeafRef\",\r\n        \"FileDirRef\",\r\n        \"File_x0020_Size\",\r\n        \"Modified\",\r\n        \"Editor\",\r\n      ]).then((result) => (m_ResponseDocsItems = result)),\r\n    ]);\r\n\r\n    var aoList = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetListTitleActionOffices());\r\n    var aoQuery = new SP.CamlQuery();\r\n    aoQuery.set_viewXml(\r\n      '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy></Query></View>'\r\n    );\r\n    m_aoItems = aoList.getItems(aoQuery);\r\n    currCtx.load(m_aoItems, \"Include(ID, Title, UserGroup)\");\r\n\r\n    //Library GUIDS\r\n    m_responseDocsLibrary = currCtx\r\n      .get_web()\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n    currCtx.load(m_responseDocsLibrary, \"Title\", \"Id\");\r\n\r\n    ownerGroup = web.get_associatedOwnerGroup();\r\n    memberGroup = web.get_associatedMemberGroup();\r\n    visitorGroup = web.get_associatedVisitorGroup();\r\n\r\n    currCtx.load(ownerGroup);\r\n    currCtx.load(memberGroup);\r\n    currCtx.load(visitorGroup);\r\n\r\n    //Site Users\r\n    m_groupColl = web.get_siteGroups();\r\n    currCtx.load(m_groupColl);\r\n\r\n    currCtx.executeQueryAsync(OnSuccess, OnFailure);\r\n    function OnSuccess(sender, args) {\r\n      $(\"#divRefresh\").show();\r\n      m_fnLoadData();\r\n    }\r\n    function OnFailure(sender, args) {\r\n      $(\"#divRefresh\").hide();\r\n      $(\"#divLoading\").hide();\r\n\r\n      const statusId = SP.UI.Status.addStatus(\r\n        \"Request failed: \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n      );\r\n      SP.UI.Status.setStatusPriColor(statusId, \"red\");\r\n    }\r\n  }\r\n\r\n  function m_fnLoadData() {\r\n    Audit.Common.Utilities.LoadSiteGroups(m_groupColl);\r\n    LoadLibGUIDS();\r\n    Audit.Common.Utilities.LoadActionOffices(m_aoItems);\r\n\r\n    if (memberGroup != null) m_IA_SPGroupName = memberGroup.get_title();\r\n    if (m_IA_SPGroupName == null || m_IA_SPGroupName == \"\") {\r\n      const statusId = SP.UI.Status.addStatus(\r\n        \"Unable to retrieve the IA SharePoint Group. Please contact the Administrator\"\r\n      );\r\n      SP.UI.Status.setStatusPriColor(statusId, \"red\");\r\n      return;\r\n    }\r\n\r\n    m_IA_ActionOffice = Audit.Common.Utilities.GetActionOffices()?.find(\r\n      (ao) => ao.userGroup == m_IA_SPGroupName\r\n    );\r\n\r\n    LoadRequests();\r\n    LoadResponses();\r\n    LoadResponseDocs();\r\n\r\n    LoadTabStatusReport(m_arrResponses, \"fbody\");\r\n  }\r\n\r\n  function LoadLibGUIDS() {\r\n    Audit.Common.Utilities.SetResponseDocLibGUID(\r\n      m_responseDocsLibrary.get_id()\r\n    );\r\n  }\r\n\r\n  function LoadRequests() {\r\n    m_bigMap = new Object();\r\n    m_arrRequests = new Array();\r\n\r\n    var cnt = 0;\r\n    var listItemEnumerator = m_requestItems.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var oListItem = listItemEnumerator.get_current();\r\n\r\n      var emailSent = oListItem.get_item(\"EmailSent\");\r\n      if (!emailSent) continue;\r\n\r\n      var id = oListItem.get_item(\"ID\");\r\n      var number = oListItem.get_item(\"Title\");\r\n      var status = oListItem.get_item(\"ReqStatus\");\r\n\r\n      var subject = oListItem.get_item(\"ReqSubject\");\r\n      if (subject == null) subject = \"\";\r\n\r\n      var arrActionOffice = oListItem.get_item(\"ActionOffice\");\r\n      var actionOffice = \"\";\r\n      for (var x = 0; x < arrActionOffice.length; x++) {\r\n        actionOffice +=\r\n          \"<div>\" + arrActionOffice[x].get_lookupValue() + \"</div>\";\r\n      }\r\n\r\n      var comments = oListItem.get_item(\"Comments\");\r\n      var relatedAudit = oListItem.get_item(\"RelatedAudit\");\r\n      var actionItems = oListItem.get_item(\"ActionItems\");\r\n\r\n      if (comments == null) comments = \"\";\r\n      if (relatedAudit == null) relatedAudit = \"\";\r\n      if (actionItems == null) actionItems = \"\";\r\n\r\n      var internalDueDate = oListItem.get_item(\"InternalDueDate\");\r\n      var closedDate = oListItem.get_item(\"ClosedDate\");\r\n\r\n      internalDueDate != null\r\n        ? (internalDueDate = internalDueDate.format(\"MM/dd/yyyy\"))\r\n        : (internalDueDate = \"\");\r\n      closedDate != null\r\n        ? (closedDate = closedDate.format(\"MM/dd/yyyy\"))\r\n        : (closedDate = \"\");\r\n\r\n      var requestObject = new Object();\r\n      requestObject[\"ID\"] = id;\r\n      requestObject[\"number\"] = number;\r\n      requestObject[\"subject\"] = subject;\r\n      requestObject[\"status\"] = status;\r\n      requestObject[\"internalDueDate\"] = internalDueDate;\r\n      requestObject[\"actionOffice\"] = actionOffice;\r\n      requestObject[\"comments\"] = comments;\r\n      requestObject[\"relatedAudit\"] = relatedAudit;\r\n      requestObject[\"actionItems\"] = actionItems;\r\n      requestObject[\"emailSent\"] = emailSent;\r\n      requestObject[\"closedDate\"] = closedDate;\r\n      requestObject[\"responses\"] = new Array();\r\n\r\n      requestObject[\"arrIndex\"] = cnt;\r\n\r\n      m_arrRequests.push(requestObject);\r\n\r\n      m_bigMap[\"request-\" + number] = requestObject;\r\n      cnt++;\r\n    }\r\n  }\r\n\r\n  function LoadResponses() {\r\n    m_arrResponses = new Array();\r\n    var cnt = 0;\r\n\r\n    // var listItemEnumerator = m_responseItems.getEnumerator();\r\n    // while (listItemEnumerator.moveNext()) {\r\n    for (const oListItem of m_responseItems) {\r\n      // var oListItem = listItemEnumerator.get_current();\r\n\r\n      var number = oListItem.get_item(\"ReqNum\");\r\n      if (number != null) {\r\n        number = number.get_lookupValue();\r\n\r\n        var responseObject = new Object();\r\n        responseObject[\"request\"] = m_bigMap[\"request-\" + number]; //GetRequest( number );\r\n        if (!responseObject.request || !responseObject.request.emailSent)\r\n          //if request is null, then there's probably a permission issue\r\n          continue;\r\n\r\n        responseObject[\"actionOffice\"] = oListItem.get_item(\"ActionOffice\");\r\n        if (responseObject[\"actionOffice\"] == null)\r\n          responseObject[\"actionOffice\"] = \"\";\r\n        else\r\n          responseObject[\"actionOffice\"] =\r\n            responseObject[\"actionOffice\"].get_lookupValue();\r\n        if (responseObject[\"actionOffice\"] == \"\") continue;\r\n\r\n        responseObject[\"poc\"] = oListItem.get_item(\"POC\");\r\n        if (responseObject[\"poc\"] == null) responseObject[\"poc\"] = \"\";\r\n        else responseObject[\"poc\"] = responseObject[\"poc\"].get_lookupValue();\r\n\r\n        responseObject[\"ID\"] = oListItem.get_item(\"ID\");\r\n        responseObject[\"number\"] = number;\r\n\r\n        var title = oListItem.get_item(\"Title\");\r\n        responseObject[\"title\"] = title;\r\n\r\n        responseObject[\"resStatus\"] = oListItem.get_item(\"ResStatus\");\r\n        if (\r\n          responseObject.request.status == \"Closed\" ||\r\n          responseObject.request.status == \"Canceled\"\r\n        )\r\n          //make it appear that it's closed so that it doesnt confuse AO\r\n          responseObject[\"resStatus\"] = \"7-Closed\";\r\n\r\n        var modifiedDate = oListItem.get_item(\"Modified\");\r\n        var closedDate = oListItem.get_item(\"ClosedDate\");\r\n\r\n        modifiedDate != null\r\n          ? (modifiedDate = modifiedDate.format(\"MM/dd/yyyy hh:mm tt\"))\r\n          : (modifiedDate = \"\");\r\n        closedDate != null\r\n          ? (closedDate = closedDate.format(\"MM/dd/yyyy\"))\r\n          : (closedDate = \"\");\r\n\r\n        responseObject[\"modified\"] = modifiedDate;\r\n        responseObject[\"closedDate\"] = closedDate;\r\n        responseObject[\"closedBy\"] =\r\n          Audit.Common.Utilities.GetFriendlyDisplayName(oListItem, \"ClosedBy\");\r\n\r\n        responseObject[\"sample\"] = oListItem.get_item(\"SampleNumber\");\r\n        if (responseObject[\"sample\"] == null) responseObject[\"sample\"] = \"\";\r\n\r\n        var comments = oListItem.get_item(\"Comments\");\r\n        if (comments == null) comments = \"\";\r\n        responseObject[\"comments\"] = comments;\r\n\r\n        var returnReason = oListItem.get_item(\"ReturnReason\");\r\n        if (returnReason == null) returnReason = \"\";\r\n        responseObject[\"returnReason\"] = returnReason;\r\n\r\n        responseObject[\"responseDocs\"] = new Array();\r\n        responseObject[\"coversheets\"] = new Array();\r\n\r\n        responseObject[\"arrIndex\"] = cnt;\r\n        m_arrResponses.push(responseObject);\r\n\r\n        m_bigMap[\"response-\" + title] = responseObject;\r\n        cnt++;\r\n      }\r\n    }\r\n  }\r\n\r\n  function LoadResponseDocs() {\r\n    // var listItemEnumerator = m_ResponseDocsItems.getEnumerator();\r\n    // while (listItemEnumerator.moveNext()) {\r\n    for (var oListItem of m_ResponseDocsItems) {\r\n      // var oListItem = listItemEnumerator.get_current();\r\n\r\n      const responseDocID = oListItem.get_item(\"ID\");\r\n\r\n      var requestNumber = oListItem.get_item(\"ReqNum\");\r\n      if (requestNumber != null)\r\n        requestNumber = requestNumber.get_lookupValue();\r\n\r\n      var responseID = oListItem.get_item(\"ResID\");\r\n      if (responseID != null) responseID = responseID.get_lookupValue();\r\n\r\n      if (requestNumber == null || responseID == null) continue;\r\n\r\n      if (oListItem.get_item(\"DocumentStatus\") == \"Marked for Deletion\") {\r\n        //ao can mark a document for deletion, but their permissions do not have delete. IA will have to delete\r\n        //do  nothing\r\n      } else {\r\n        try {\r\n          var bigMapItem = m_bigMap[\"response-\" + responseID];\r\n\r\n          var indexOfArrResponses = bigMapItem.arrIndex;\r\n          var oResponse = m_arrResponses[indexOfArrResponses];\r\n          if (oResponse) {\r\n            var responseDocObject = new Object();\r\n            responseDocObject[\"ID\"] = oListItem.get_item(\"ID\");\r\n            responseDocObject[\"title\"] = oListItem.get_item(\"Title\");\r\n            if (responseDocObject[\"title\"] == null)\r\n              responseDocObject[\"title\"] = \"\";\r\n            responseDocObject[\"fileName\"] = oListItem.get_item(\"FileLeafRef\");\r\n            responseDocObject[\"folder\"] = oListItem.get_item(\"FileDirRef\");\r\n            responseDocObject[\"documentStatus\"] =\r\n              oListItem.get_item(\"DocumentStatus\");\r\n\r\n            var fileSize = oListItem.get_item(\"File_x0020_Size\");\r\n            fileSize = Audit.Common.Utilities.GetFriendlyFileSize(fileSize);\r\n            responseDocObject[\"fileSize\"] = fileSize;\r\n\r\n            var receiptDate = \"\";\r\n            if (\r\n              oListItem.get_item(\"ReceiptDate\") != null &&\r\n              oListItem.get_item(\"ReceiptDate\") != \"\"\r\n            )\r\n              receiptDate = oListItem\r\n                .get_item(\"ReceiptDate\")\r\n                .format(\"MM/dd/yyyy\");\r\n            responseDocObject[\"receiptDate\"] = receiptDate;\r\n\r\n            var modifiedDate = \"\";\r\n            if (\r\n              oListItem.get_item(\"Modified\") != null &&\r\n              oListItem.get_item(\"Modified\") != \"\"\r\n            )\r\n              modifiedDate = oListItem\r\n                .get_item(\"Modified\")\r\n                .format(\"MM/dd/yyyy hh:mm tt\");\r\n            responseDocObject[\"modifiedDate\"] = modifiedDate;\r\n\r\n            responseDocObject[\"modifiedBy\"] =\r\n              Audit.Common.Utilities.GetFriendlyDisplayName(\r\n                oListItem,\r\n                \"Editor\"\r\n              );\r\n\r\n            oResponse[\"responseDocs\"].push(responseDocObject);\r\n          }\r\n        } catch (err) {}\r\n      }\r\n    }\r\n  }\r\n\r\n  function LoadTabStatusReport(arr, fbody) {\r\n    if (arr == null) return;\r\n\r\n    //var bLoadTest = GetUrlKeyValue(\"LoadTest\");\r\n\r\n    var responseArr = new Array();\r\n\r\n    var arrResponseTitle = new Array();\r\n    var arrResponseInternalDueDate = new Array();\r\n    var arrResponseStatus = new Array();\r\n\r\n    var count = 0;\r\n    var resStatus1 = 0;\r\n    var resStatus2 = 0;\r\n\r\n    var arrlength = arr.length;\r\n    while (arrlength--) {\r\n      var oResponse = arr[arrlength];\r\n\r\n      var responseTitle = oResponse.title;\r\n\r\n      var highlight = false;\r\n      var responseStatus = oResponse.resStatus;\r\n      if (\r\n        responseStatus == m_responseStatus1 ||\r\n        responseStatus == m_responseStatus2\r\n      ) {\r\n        count++;\r\n        if (responseStatus == m_responseStatus1) resStatus1++;\r\n        else resStatus2++;\r\n\r\n        highlight = true;\r\n      }\r\n\r\n      var aResponse = {\r\n        title: responseTitle,\r\n        requestSubject: oResponse.request.subject,\r\n        requestStatus: oResponse.request.status,\r\n        internalDueDate: oResponse.request.internalDueDate,\r\n        status: responseStatus,\r\n        docCount: oResponse.responseDocs.length,\r\n        modified: oResponse.modified,\r\n        highlight: highlight,\r\n        visibleRow: ko.observable(true),\r\n      };\r\n\r\n      responseArr.push(aResponse);\r\n\r\n      /*if( bLoadTest )\r\n\t\t\t{\r\n\t\t\t\tfor( var z = 0; z < 99; z++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tresponseArr.push( aResponse );\r\n\t\t\t\t}\t\r\n\t\t\t}*/\r\n    }\r\n\r\n    //if( bLoadTest )\r\n    //\t_myViewModel.debugMode( true );\r\n\r\n    if (responseArr.length > 0) {\r\n      m_statusToFilterOn = \"\";\r\n      if (resStatus1 > 0 && resStatus2 == 0)\r\n        m_statusToFilterOn = m_responseStatus1;\r\n      else if (resStatus2 > 0 && resStatus1 == 0)\r\n        m_statusToFilterOn = m_responseStatus2;\r\n\r\n      _myViewModel.cntPendingReview(count);\r\n      // $(\"#tabs\").tabs(); //.show();\r\n\r\n      ko.utils.arrayPushAll(_myViewModel.arrResponses, responseArr);\r\n\r\n      //do this after push all because this takes some time\r\n      // var output = $(\"#responseTemplate\").render(responseArr);\r\n      // $(\"#\" + fbody).html(output);\r\n    }\r\n\r\n    //aleways calls this even if 0 responses\r\n    _myViewModel.doSort(true);\r\n  }\r\n\r\n  function LoadTabResponseInfoCoverSheets(oResponse) {\r\n    _myViewModel.arrCoverSheets([]);\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var coverSheetLib = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetLibTitleCoverSheets());\r\n    var coverSheetQuery = new SP.CamlQuery();\r\n    coverSheetQuery.set_viewXml(\r\n      '<View Scope=\"RecursiveAll\"><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy><Where><Eq><FieldRef Name=\"ReqNum\"/><Value Type=\"Text\">' +\r\n        oResponse.request.number +\r\n        \"</Value></Eq></Where></Query></View>\"\r\n    );\r\n    const m_subsetCoverSheetItems = coverSheetLib.getItems(coverSheetQuery);\r\n    currCtx.load(\r\n      m_subsetCoverSheetItems,\r\n      \"Include(ID, Title, ReqNum, ActionOffice, FileLeafRef, FileDirRef)\"\r\n    );\r\n\r\n    var data = { oResponse: oResponse };\r\n    function OnSuccess(sender, args) {\r\n      var arrCS = new Array();\r\n\r\n      var listItemEnumerator = m_subsetCoverSheetItems.getEnumerator();\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n\r\n        if (oListItem.get_item(\"ActionOffice\") != null) {\r\n          var arrActionOffice = oListItem.get_item(\"ActionOffice\");\r\n          if (arrActionOffice.length > 0) {\r\n            for (var y = 0; y < arrActionOffice.length; y++) {\r\n              var curActionOffice = arrActionOffice[y].get_lookupValue();\r\n\r\n              if (curActionOffice == this.oResponse.actionOffice) {\r\n                var csFolder = oListItem.get_item(\"FileDirRef\");\r\n                var csTitle = oListItem.get_item(\"FileLeafRef\");\r\n\r\n                var encodedTitle = csTitle.replace(/'/g, \"&#39\");\r\n                arrCS.push({\r\n                  folder: csFolder,\r\n                  title: csTitle,\r\n                  link:\r\n                    \"STSNavigate('../_layouts/download.aspx?SourceUrl=\" +\r\n                    csFolder +\r\n                    \"/\" +\r\n                    encodedTitle +\r\n                    \"')\",\r\n                });\r\n\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      ko.utils.arrayPushAll(_myViewModel.arrCoverSheets(), arrCS);\r\n      _myViewModel.arrCoverSheets.valueHasMutated();\r\n    }\r\n    function OnFailure(sender, args) {}\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, OnSuccess),\r\n      Function.createDelegate(data, OnFailure)\r\n    );\r\n  }\r\n\r\n  function LoadTabResponseInfoResponseDocs(oResponse) {\r\n    _myViewModel.arrResponseDocs(null);\r\n    _myViewModel.cntResponseDocs(0);\r\n    _myViewModel.showUpload(false);\r\n    _myViewModel.showSubmit(false);\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    for (var z = 0; z < oResponse.responseDocs.length; z++) {\r\n      var oResponseDoc = oResponse.responseDocs[z];\r\n\r\n      //this loads on execute\r\n      oResponseDoc[\"docIcon\"] = web.mapToIcon(\r\n        oResponseDoc.fileName,\r\n        \"\",\r\n        SP.Utilities.IconSize.Size16\r\n      ); // m_siteUrl + \"/\" + _spPageContextInfo.layoutsUrl + \"/images/\" + docIcon;\r\n    }\r\n\r\n    function OnSuccess(sender, args) {\r\n      RenderResponses(oResponse);\r\n    }\r\n    function OnFailure(sender, args) {\r\n      const statusId = SP.UI.Status.addStatus(\r\n        \"Request failed: \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n      );\r\n      SP.UI.Status.setStatusPriColor(statusId, \"red\");\r\n    }\r\n    currCtx.executeQueryAsync(OnSuccess, OnFailure);\r\n\r\n    function RenderResponses(oResponse) {\r\n      var rowCount = 0;\r\n      var cntAddedByAO = 0;\r\n\r\n      var arrResponseDocs = new Array();\r\n      for (var z = 0; z < oResponse.responseDocs.length; z++) {\r\n        var oResponseDoc = oResponse.responseDocs[z];\r\n        oResponseDoc.docIcon = oResponseDoc.docIcon.get_value();\r\n        oResponseDoc.styleTag = Audit.Common.Utilities.GetResponseDocStyleTag2(\r\n          oResponseDoc.documentStatus\r\n        );\r\n        oResponseDoc.responseTitle = oResponse.title;\r\n\r\n        if (\r\n          oResponseDoc.documentStatus == \"Open\" &&\r\n          (oResponse.resStatus == m_responseStatus1 ||\r\n            oResponse.resStatus == m_responseStatus2)\r\n        )\r\n          cntAddedByAO++;\r\n\r\n        arrResponseDocs.push(oResponseDoc);\r\n      }\r\n\r\n      if (m_curResponseSelectedIsEditableByAO) {\r\n        _myViewModel.showUpload(true);\r\n        if (cntAddedByAO > 0) _myViewModel.showSubmit(true);\r\n      }\r\n\r\n      var arrResponseSummary = {\r\n        responseTitle: oResponse.title,\r\n        responseDocs: arrResponseDocs,\r\n        responseStatus: oResponse.resStatus,\r\n      };\r\n      _myViewModel.arrResponseDocs(arrResponseSummary);\r\n      _myViewModel.arrResponseDocs.valueHasMutated();\r\n      _myViewModel.cntResponseDocs(oResponse.responseDocs.length);\r\n\r\n      //display warning message\r\n      if (\r\n        oResponse.resStatus == m_responseStatus2 &&\r\n        oResponse.returnReason != null &&\r\n        oResponse.returnReason != \"\"\r\n      ) {\r\n        if (m_curResponseSelectedIsEditableByAO && cntAddedByAO == 0) {\r\n          //notifyId = SP.UI.Notify.addNotification(\"Response Return Reason: \" + oResponse.returnReason, false);\r\n          var waitDialog = SP.UI.ModalDialog.showWaitScreenWithNoClose(\r\n            \"Notice - Response Needs to be Updated\",\r\n            \"<span style=''><span class='ui-icon ui-icon-alert'></span>Response Return Reason: <span style='font-weight:bold; color:red;'>\" +\r\n              oResponse.returnReason +\r\n              \"</span></span>\",\r\n            100,\r\n            500\r\n          );\r\n          setTimeout(function () {\r\n            waitDialog.close();\r\n          }, 5000);\r\n        }\r\n      }\r\n\r\n      if (\r\n        oResponse.resStatus == \"1-Open\" ||\r\n        oResponse.resStatus == \"3-Returned to Action Office\"\r\n      ) {\r\n        if (m_curResponseSelectedIsEditableByAO && cntAddedByAO > 0) {\r\n          const notifyId = SP.UI.Notify.addNotification(\r\n            \"<div style='text-align:left'>Response documents have been added. <br/><br/>Your package <span style='font-weight:bold; color:red'>has not yet been submitted</span>. <br></br>Please review your documents and click on the link <b>SUBMIT this Response Package</b> below</div>\",\r\n            false\r\n          );\r\n\r\n          $(\".btnSubmitPackage\")\r\n            .parent()\r\n            .css({ \"background-color\": \"yellow\", \"font-weight\": \"inherit\" });\r\n          $(\".btnSubmitPackage\").get(0).scrollIntoView();\r\n\r\n          function resetColor() {\r\n            $(\".btnSubmitPackage\")\r\n              .parent()\r\n              .css({ \"background-color\": \"inherit\", \"font-weight\": \"inherit\" });\r\n          }\r\n          setTimeout(function () {\r\n            resetColor();\r\n          }, 2000);\r\n        } else if (m_curResponseSelectedIsEditableByAO && cntAddedByAO == 0) {\r\n          const notifyId = SP.UI.Notify.addNotification(\r\n            \"<div style='text-align:left'>Please review the Response Information and any CoverSheets/Supplemental Documents. <br/><br/>Then, click the link to <span style='font-weight:bold; color:gree'>Upload Response Documents</span> pertaining to this Response</div>\",\r\n            false\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function m_fnFormatEmailBodyToIAFromAO(oRequest, responseTitle) {\r\n    var emailText =\r\n      \"<div>Audit Request Reference: <b>{REQUEST_NUMBER}</b></div>\" +\r\n      \"<div>Audit Request Subject: <b>{REQUEST_SUBJECT}</b></div>\" +\r\n      \"<div>Audit Request Due Date: <b>{REQUEST_DUEDATE}</b></div><br/>\" +\r\n      \"<div>Below is the Response that was submitted: </div>\" +\r\n      \"<div>{RESPONSE_TITLE}</div>\";\r\n\r\n    emailText = emailText.replace(\"{REQUEST_NUMBER}\", oRequest.number);\r\n    emailText = emailText.replace(\"{REQUEST_SUBJECT}\", oRequest.subject);\r\n    emailText = emailText.replace(\r\n      \"{REQUEST_DUEDATE}\",\r\n      oRequest.internalDueDate\r\n    );\r\n\r\n    var responseTitleBody = \"<ul><li>\" + responseTitle + \"</li></ul>\";\r\n    emailText = emailText.replace(\"{RESPONSE_TITLE}\", responseTitleBody);\r\n\r\n    return emailText;\r\n  }\r\n\r\n  function m_fnUploadResponseDoc(requestID, responseID) {\r\n    m_bIsTransactionExecuting = true;\r\n\r\n    //\t\tnotifyId = SP.UI.Notify.addNotification(\"<span style='font-size:11pt'><span class='ui-icon ui-icon-info'></span>Please <span style='font-weight:bold; color:green'>zip</span> the documents you are uploading.</span>\", false);\r\n    var waitDialog = SP.UI.ModalDialog.showWaitScreenWithNoClose(\r\n      \"Loading...\",\r\n      \"<span style='font-size:11pt'><span class='ui-icon ui-icon-info'></span>If you are uploading <span style='font-weight:bold; color:green;text-decoration:underline'>multiple</span> documents, please <span style='font-weight:bold; color:green;text-decoration:underline'>zip </span> them.</span>\",\r\n      100,\r\n      600\r\n    );\r\n\r\n    setTimeout(function () {\r\n      waitDialog.close();\r\n\r\n      var options = SP.UI.$create_DialogOptions();\r\n      options.title = \"Upload Response Document to: \" + responseID;\r\n      options.dialogReturnValueCallback = OnCallbackForm;\r\n\r\n      //this subfolder should have been created when the response was created\r\n      var rootFolder =\r\n        Audit.Common.Utilities.GetSiteUrl() +\r\n        \"/\" +\r\n        Audit.Common.Utilities.GetLibNameResponseDocs() +\r\n        \"/\" +\r\n        responseID;\r\n      options.url =\r\n        Audit.Common.Utilities.GetSiteUrl() +\r\n        \"/_layouts/Upload.aspx?List={\" +\r\n        Audit.Common.Utilities.GetResponseDocLibGUID() +\r\n        \"}&RootFolder=\" +\r\n        rootFolder +\r\n        \"&ReqNum=\" +\r\n        requestID +\r\n        \"&ResID=\" +\r\n        responseID;\r\n      //notifyId = SP.UI.Notify.addNotification(\"Uploading documents to: \" + options.url, false)\r\n      SP.UI.ModalDialog.showModalDialog(options);\r\n    }, 3000);\r\n  }\r\n\r\n  function OnCallbackForm(result, value) {\r\n    if (result === SP.UI.DialogResult.OK) {\r\n      Audit.Common.Utilities.Refresh();\r\n    } else m_bIsTransactionExecuting = false;\r\n  }\r\n\r\n  function m_fnSubmitPackage() {\r\n    var responseToSubmit = $(\"#ddlResponsesOpen\").val();\r\n    if (\r\n      confirm(\r\n        \"Are you sure you would like to submit these response documents? Note: You will NOT be able to make changes or upload any more documents after you submit this package.\"\r\n      )\r\n    ) {\r\n      m_bIsTransactionExecuting = true;\r\n\r\n      const m_waitDialog = SP.UI.ModalDialog.showWaitScreenWithNoClose(\r\n        \"Submitting Response\",\r\n        \"Please wait... Submitting Response\",\r\n        200,\r\n        400\r\n      );\r\n\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var folderPath =\r\n        Audit.Common.Utilities.GetSiteUrl() +\r\n        \"/\" +\r\n        Audit.Common.Utilities.GetLibNameResponseDocs() +\r\n        \"/\" +\r\n        responseToSubmit;\r\n      var responseDocLib = web\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n      var responseDocQuery = new SP.CamlQuery();\r\n      responseDocQuery.set_viewXml(\r\n        \"<View Scope=\\\"RecursiveAll\\\"><Query><Where><And><Eq><FieldRef Name='FileDirRef'/><Value Type='Text'>\" +\r\n          folderPath +\r\n          \"</Value></Eq><Eq><FieldRef Name='DocumentStatus'/><Value Type='Text'>Open</Value></Eq></And></Where></Query></View>\"\r\n      );\r\n      const responseDocOpenItems = responseDocLib.getItems(responseDocQuery);\r\n      currCtx.load(\r\n        responseDocOpenItems,\r\n        \"Include(ID, DocumentStatus, FileDirRef)\"\r\n      );\r\n\r\n      var emailList = web\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetListTitleEmailHistory());\r\n      var emailListQuery = new SP.CamlQuery();\r\n      emailListQuery.set_viewXml(\r\n        '<View><Query><OrderBy><FieldRef Name=\"ID\"/></OrderBy><Where><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">1</Value></Eq></Where></Query></View>'\r\n      );\r\n      const emailListFolderItems = emailList.getItems(emailListQuery);\r\n      currCtx.load(emailListFolderItems, \"Include(ID, Title, DisplayName)\");\r\n\r\n      function OnSuccessLoadedResponseDocs(sender, args) {\r\n        var ctOpenResponseDocs = 0;\r\n        if (responseDocOpenItems != null) {\r\n          var listItemEnumerator = responseDocOpenItems.getEnumerator();\r\n          while (listItemEnumerator.moveNext()) {\r\n            var oListItem = listItemEnumerator.get_current();\r\n            oListItem.set_item(\"DocumentStatus\", \"Submitted\");\r\n            oListItem.update();\r\n            ctOpenResponseDocs++;\r\n          }\r\n        }\r\n\r\n        if (ctOpenResponseDocs == 0) {\r\n          const notifyId = SP.UI.Notify.addNotification(\r\n            \"Please upload a Response document.\",\r\n            false\r\n          );\r\n          m_waitDialog.close();\r\n          return;\r\n        }\r\n\r\n        var oRequest = null;\r\n        try {\r\n          var bigMapItem = m_bigMap[\"response-\" + responseToSubmit];\r\n          var indexOfArrResponses = bigMapItem.arrIndex;\r\n          const oResponse = m_arrResponses[indexOfArrResponses];\r\n          if (oResponse) {\r\n            oRequest = oResponse.request;\r\n\r\n            var responseList = currCtx\r\n              .get_web()\r\n              .get_lists()\r\n              .getByTitle(Audit.Common.Utilities.GetListTitleResponses());\r\n            const responseItem = responseList.getItemById(oResponse.ID);\r\n            responseItem.set_item(\"ResStatus\", \"2-Submitted\");\r\n            responseItem.update();\r\n          }\r\n        } catch (err) {\r\n          alert(err);\r\n          Audit.Common.Utilities.Refresh();\r\n        }\r\n\r\n        if (oRequest == null) {\r\n          m_waitDialog.close();\r\n          return;\r\n        }\r\n\r\n        var emailSubject =\r\n          \"A Response has been Submitted by an Action Office: \" +\r\n          oRequest.number;\r\n        var emailText = m_fnFormatEmailBodyToIAFromAO(\r\n          oRequest,\r\n          responseToSubmit\r\n        );\r\n\r\n        var itemCreateInfo = new SP.ListItemCreationInformation();\r\n        itemCreateInfo.set_folderUrl(\r\n          location.protocol +\r\n            \"//\" +\r\n            location.host +\r\n            Audit.Common.Utilities.GetSiteUrl() +\r\n            \"/Lists/\" +\r\n            Audit.Common.Utilities.GetListNameEmailHistory() +\r\n            \"/\" +\r\n            oRequest.number\r\n        );\r\n        oListItem = emailList.addItem(itemCreateInfo);\r\n        oListItem.set_item(\"Title\", emailSubject);\r\n        oListItem.set_item(\"Body\", emailText);\r\n        oListItem.set_item(\"To\", m_IA_ActionOffice.title);\r\n        oListItem.set_item(\"ReqNum\", oRequest.number);\r\n        oListItem.set_item(\"ResID\", responseToSubmit);\r\n        oListItem.set_item(\"NotificationType\", \"IA Notification\");\r\n        oListItem.update();\r\n\r\n        function OnSuccessUpdateResponse(sender, args) {\r\n          document.body.style.cursor = \"default\";\r\n          m_waitDialog.close();\r\n          Audit.Common.Utilities.Refresh();\r\n        }\r\n        function OnFailureUpdateResponse(sender, args) {\r\n          m_waitDialog.close();\r\n          const statusId = SP.UI.Status.addStatus(\r\n            \"Request failed: \" +\r\n              args.get_message() +\r\n              \"\\n\" +\r\n              args.get_stackTrace()\r\n          );\r\n          SP.UI.Status.setStatusPriColor(statusId, \"red\");\r\n        }\r\n\r\n        currCtx.executeQueryAsync(\r\n          OnSuccessUpdateResponse,\r\n          OnFailureUpdateResponse\r\n        );\r\n      }\r\n\r\n      function OnFailureLoadedResponseDocs(sender, args) {\r\n        m_waitDialog.close();\r\n        const statusId = SP.UI.Status.addStatus(\r\n          \"Request failed: \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n        );\r\n        SP.UI.Status.setStatusPriColor(statusId, \"red\");\r\n      }\r\n\r\n      currCtx.executeQueryAsync(\r\n        OnSuccessLoadedResponseDocs,\r\n        OnFailureLoadedResponseDocs\r\n      );\r\n    }\r\n  }\r\n\r\n  function m_fnMarkForDeletionResponseDoc(itemID) {\r\n    if (\r\n      confirm(\"Are you sure you would like to Delete this Response Document?\")\r\n    ) {\r\n      var currCtx = new SP.ClientContext();\r\n      var responseDocsLib = currCtx\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetLibNameResponseDocs());\r\n\r\n      const oListItem = responseDocsLib.getItemById(itemID);\r\n      oListItem.set_item(\"DocumentStatus\", \"Marked for Deletion\");\r\n      oListItem.update();\r\n\r\n      function OnSuccess(sender, args) {\r\n        Audit.Common.Utilities.Refresh();\r\n      }\r\n      function OnFailure(sender, args) {\r\n        const statusId = SP.UI.Status.addStatus(\r\n          \"Request failed: \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n        );\r\n        SP.UI.Status.setStatusPriColor(statusId, \"red\");\r\n      }\r\n      currCtx.executeQueryAsync(OnSuccess, OnFailure);\r\n    }\r\n  }\r\n\r\n  function BindHandlersOnLoad() {\r\n    BindPrintButton(\r\n      \"#btnPrint1\",\r\n      \"#divStatusReportRespones\",\r\n      \"Action Office Response Status Report\"\r\n    );\r\n    //////////Note: for the export to work, make sure this is added to the html: <iframe id=\"CsvExpFrame\" style=\"display: none\"></iframe>\r\n    BindExportButton(\r\n      \".export1\",\r\n      \"AOResponseStatusReport_\",\r\n      \"tblStatusReportResponses\"\r\n    );\r\n  }\r\n\r\n  function BindPrintButton(btnPrint, divTbl, pageTitle) {\r\n    $(btnPrint).on(\"click\", function () {\r\n      Audit.Common.Utilities.PrintStatusReport(pageTitle, divTbl);\r\n    });\r\n  }\r\n\r\n  function BindExportButton(btnExport, fileNamePrefix, tbl) {\r\n    $(btnExport).on(\"click\", function (event) {\r\n      var curDate = new Date().format(\"yyyyMMdd_hhmmtt\");\r\n      Audit.Common.Utilities.ExportToCsv(fileNamePrefix + curDate, tbl);\r\n    });\r\n  }\r\n\r\n  function GoToResponse(response) {\r\n    //$(\"#tabs\").tabs({ active: 1 });\r\n    _myViewModel.tabs.selectById(_myViewModel.tabOpts.ResponseDetail.id);\r\n\r\n    if (response) {\r\n      response = m_bigMap[\"response-\" + response];\r\n\r\n      var requestStatus = response.request.status;\r\n      var responseStatus = response.resStatus;\r\n      if (\r\n        (responseStatus == m_responseStatus1 ||\r\n          responseStatus == m_responseStatus2) &&\r\n        (requestStatus == \"Open\" || requestStatus == \"ReOpened\")\r\n      )\r\n        _myViewModel.filterResponseInfoTabResponseNameOpen2(response.title);\r\n      else\r\n        _myViewModel.filterResponseInfoTabResponseNameProcessed2(\r\n          response.title\r\n        );\r\n    }\r\n  }\r\n\r\n  var publicMembers = {\r\n    GoToResponse: GoToResponse,\r\n    IsTransactionExecuting: function () {\r\n      return m_bIsTransactionExecuting;\r\n    },\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\nif (document.readyState === \"ready\" || document.readyState === \"complete\") {\r\n  InitReport();\r\n} else {\r\n  document.onreadystatechange = () => {\r\n    if (document.readyState === \"complete\" || document.readyState === \"ready\") {\r\n      ExecuteOrDelayUntilScriptLoaded(function () {\r\n        SP.SOD.executeFunc(\"sp.js\", \"SP.ClientContext\", InitReport);\r\n      }, \"sp.js\");\r\n    }\r\n  };\r\n}\r\n\r\nfunction InitReport() {\r\n  document.getElementById(\"app\").innerHTML = aoDbTemplate;\r\n  Audit.AOReport.Report = new Audit.AOReport.NewReportPage();\r\n  Audit.AOReport.Init();\r\n}\r\n", "import {\r\n  breakRequestPermissions,\r\n  getRequestById,\r\n  getRequestResponseDocs,\r\n  getRequestResponses,\r\n  breakRequestCoversheetPerms,\r\n  getNewResponseDocTitle,\r\n  ensureRequestAuditResponseDocsROFolder,\r\n  ensureRequestROEmailLogItem,\r\n} from \"./index.js\";\r\n\r\nimport {\r\n  AuditResponseDoc,\r\n  AuditResponseStates,\r\n  AuditResponseDocStates,\r\n  AuditResponseDocRO,\r\n} from \"../entities/index.js\";\r\n\r\nimport { appContext } from \"../infrastructure/application_db_context.js\";\r\n\r\nexport async function approveResponseDocsForQA(\r\n  requestId,\r\n  responseId = null,\r\n  responseDocsToApproveIds\r\n) {\r\n  const request = await getRequestById(requestId);\r\n\r\n  const allRequestResponseDocs = await getRequestResponseDocs(request);\r\n\r\n  const allRequestResponses = await getRequestResponses(request);\r\n\r\n  const updatedResponses = allRequestResponseDocs\r\n    .filter((responseDoc) => responseDocsToApproveIds.includes(responseDoc.ID))\r\n    .map((responseDoc) => responseDoc.ResID.Value())\r\n    .reduce((accumulator, responseDocResponse) => {\r\n      if (\r\n        !accumulator.find((response) => response?.ID == responseDocResponse.ID)\r\n      )\r\n        accumulator.push(responseDocResponse);\r\n      return accumulator;\r\n    }, []);\r\n\r\n  await Promise.all(\r\n    responseDocsToApproveIds.map(async (responseDocId) => {\r\n      const responseDoc = allRequestResponseDocs.find(\r\n        (responseDoc) => responseDoc.ID == responseDocId\r\n      );\r\n\r\n      // TODO: this should just be an ensure on our AppDbContext\r\n      const response = allRequestResponses.find(\r\n        (response) => response.ID == responseDoc.ResID.Value().ID\r\n      );\r\n\r\n      if (\r\n        responseDoc.DocumentStatus.Value() != AuditResponseDocStates.Submitted\r\n      ) {\r\n        console.error(\"Document status is not valid for approval\");\r\n        return;\r\n      }\r\n\r\n      responseDoc.DocumentStatus.Value(AuditResponseDocStates.SentToQA);\r\n\r\n      // TODO: Fix naming conflicting with drag and drop upload\r\n\r\n      const newReponseDocName = getNewResponseDocTitle(\r\n        request,\r\n        response,\r\n        responseDoc\r\n      );\r\n\r\n      responseDoc.FileName.Value(newReponseDocName);\r\n\r\n      await appContext.AuditResponseDocs.UpdateEntity(\r\n        responseDoc,\r\n        AuditResponseDoc.Views.UpdateDocStatus\r\n      );\r\n    })\r\n  );\r\n\r\n  // Now see if we can approve any responses for QA\r\n  const responsesToSubmitToQA = updatedResponses.filter((response) => {\r\n    return response.ResStatus.Value() == AuditResponseStates.Submitted;\r\n  });\r\n\r\n  if (responsesToSubmitToQA.length) {\r\n    await Promise.all(\r\n      responsesToSubmitToQA.map(async (response) => {\r\n        response.ResStatus.Value(AuditResponseStates.ApprovedForQA);\r\n        await appContext.AuditResponses.UpdateEntity(response, [\"ResStatus\"]);\r\n      })\r\n    );\r\n\r\n    // Break the request permissions\r\n    await breakRequestPermissions(request, AuditResponseStates.ApprovedForQA);\r\n    await breakRequestCoversheetPerms(request, true);\r\n  }\r\n}\r\n\r\nexport async function approveResponseDocsForRO(\r\n  requestId,\r\n  responseDocsToApproveIds\r\n) {\r\n  const request = await getRequestById(requestId);\r\n\r\n  const requestingOffice = request.RequestingOffice.Value();\r\n\r\n  if (!requestingOffice) return;\r\n\r\n  const allRequestResponseDocs = await getRequestResponseDocs(request);\r\n\r\n  const allRequestResponses = await getRequestResponses(request);\r\n\r\n  const updatedResponses = allRequestResponseDocs\r\n    .filter((responseDoc) => responseDocsToApproveIds.includes(responseDoc.ID))\r\n    .map((responseDoc) => responseDoc.ResID.Value())\r\n    .reduce((accumulator, responseDocResponse) => {\r\n      if (\r\n        !accumulator.find((response) => response?.ID == responseDocResponse.ID)\r\n      )\r\n        accumulator.push(responseDocResponse);\r\n      return accumulator;\r\n    }, []);\r\n\r\n  if (!updatedResponses.length) return;\r\n\r\n  const roResponseDocROFolderPath =\r\n    await ensureRequestAuditResponseDocsROFolder(\r\n      request.Title,\r\n      requestingOffice.ID\r\n    );\r\n\r\n  const roEmailLogItem = await ensureRequestROEmailLogItem(requestingOffice);\r\n\r\n  let cntApprovedResponseDocs = parseInt(roEmailLogItem.ResponseCount);\r\n  if (!cntApprovedResponseDocs) cntApprovedResponseDocs = 0;\r\n  let responseLogBody = \"\";\r\n\r\n  // For each response doc to approve\r\n  await Promise.all(\r\n    responseDocsToApproveIds.map(async (responseDocId) => {\r\n      const responseDoc = allRequestResponseDocs.find(\r\n        (responseDoc) => responseDoc.ID == responseDocId\r\n      );\r\n\r\n      // 1. Check that the status isn't already approved\r\n      if (responseDoc.DocumentStatus.Value() == AuditResponseDocStates.SentToQA)\r\n        return;\r\n\r\n      cntApprovedResponseDocs++;\r\n\r\n      const response = allRequestResponses.find(\r\n        (response) => response.ID == responseDoc.ResID.Value().ID\r\n      );\r\n\r\n      // 2. Get New ResponseDoc title\r\n      const newResponseDocFileName = getNewResponseDocTitle(\r\n        request,\r\n        response,\r\n        responseDoc\r\n      );\r\n\r\n      // 3. Copy File to RO\r\n      const source = responseDoc.FileRef.Value();\r\n      const dest = roResponseDocROFolderPath + \"/\" + newResponseDocFileName;\r\n\r\n      await appContext.utilities.copyFileAsync(source, dest);\r\n\r\n      const newRoFileResults =\r\n        await appContext.AuditResponseDocsRO.FindByColumnValue(\r\n          [{ column: \"FileRef\", value: dest }],\r\n          {},\r\n          { count: 1 }\r\n        );\r\n      const newRoFile = newRoFileResults.results[0] ?? null;\r\n\r\n      if (!newRoFile) return;\r\n\r\n      // 4. Update ResponseDocRo\r\n      newRoFile.markApprovedForRO(request, response);\r\n      await appContext.AuditResponseDocsRO.UpdateEntity(\r\n        newRoFile,\r\n        AuditResponseDocRO.Views.ApprovedForROUpdate\r\n      );\r\n\r\n      // 4. Update ResponseDoc Status\r\n      responseDoc.markApprovedForRO(newResponseDocFileName);\r\n      await appContext.AuditResponseDocs.UpdateEntity(responseDoc, [\r\n        \"DocumentStatus\",\r\n        \"RejectReason\",\r\n        \"FileLeafRef\",\r\n      ]);\r\n\r\n      responseLogBody += `<li><a href=\"${\r\n        window.location.origin + newRoFile.FileRef\r\n      }\" target=\"_blank\">${newResponseDocFileName}</a></li>`;\r\n    })\r\n  );\r\n\r\n  roEmailLogItem.ResponseCount = cntApprovedResponseDocs;\r\n  roEmailLogItem.Responses += responseLogBody;\r\n\r\n  await appContext.AuditROEmailsLog.UpdateEntity(roEmailLogItem, [\r\n    \"Responses\",\r\n    \"ResponseCount\",\r\n  ]);\r\n\r\n  return true;\r\n}\r\n", "import { appContext } from \"../infrastructure/application_db_context.js\";\r\nimport { roleNames } from \"./permission_manager.js\";\r\nimport { getQAGroup, getSiteGroups } from \"./people_manager.js\";\r\nimport { ItemPermissions } from \"../sal/infrastructure/index.js\";\r\nimport { AuditROEmailLog } from \"../entities/audit_ro_email_log.js\";\r\n\r\nexport async function ensureROEmailFolder() {\r\n  const folderResults = await appContext.AuditEmails.FindByColumnValue(\r\n    [{ column: \"Title\", value: \"RONotifications\" }],\r\n    {},\r\n    { count: 1, includeFolders: true },\r\n    [\"ID\", \"Title\"]\r\n  );\r\n\r\n  const folder = folderResults.results[0] ?? null;\r\n\r\n  if (folder) return;\r\n\r\n  const newFolderId = await appContext.AuditEmails.UpsertFolderPath(\r\n    \"RONotifications\"\r\n  );\r\n\r\n  const { owners, members, visitors } = getSiteGroups();\r\n  let qaGroup = await getQAGroup();\r\n\r\n  const newPermissions = new ItemPermissions({\r\n    hasUniqueRoleAssignments: true,\r\n    roles: [],\r\n  });\r\n\r\n  newPermissions.addPrincipalRole(owners, roleNames.FullControl);\r\n  newPermissions.addPrincipalRole(members, roleNames.Contribute);\r\n  newPermissions.addPrincipalRole(visitors, roleNames.RestrictedRead);\r\n  newPermissions.addPrincipalRole(qaGroup, roleNames.RestrictedContribute);\r\n\r\n  await appContext.AuditEmails.SetItemPermissions(\r\n    { ID: newFolderId },\r\n    newPermissions,\r\n    true\r\n  );\r\n}\r\n\r\nexport async function ensureRequestROEmailLogItem(requestingOffice) {\r\n  if (!requestingOffice?.ID) return;\r\n  // const roGroupName = requestingOffice?.UserGroup?.Title;\r\n  // if (!roGroupName) return;\r\n\r\n  const logItemTitle = new Date().format(\"MM/dd/yyyy\");\r\n\r\n  const emailLogResult = await appContext.AuditROEmailsLog.FindByColumnValue(\r\n    [\r\n      { column: \"Title\", value: logItemTitle },\r\n      { column: \"RequestingOfficeId\", value: requestingOffice.ID },\r\n    ],\r\n    {},\r\n    { count: 1, includeFolders: true }\r\n  );\r\n\r\n  const auditRoEmailLogItem = emailLogResult?.results[0] ?? null;\r\n  if (auditRoEmailLogItem) return auditRoEmailLogItem;\r\n\r\n  const newLogItem = new AuditROEmailLog();\r\n\r\n  newLogItem.Title = logItemTitle;\r\n  newLogItem.RequestingOffice = requestingOffice;\r\n\r\n  await appContext.AuditROEmailsLog.AddEntity(newLogItem);\r\n\r\n  return newLogItem;\r\n}\r\n", "import { ORGROLES } from \"../entities/index.js\";\r\nimport { People } from \"../sal/entities/index.js\";\r\nimport { appContext } from \"../infrastructure/application_db_context.js\";\r\nimport { auditOrganizationStore } from \"../infrastructure/store.js\";\r\nimport { ItemPermissions, Role, RoleDef } from \"../sal/infrastructure/index.js\";\r\nimport { getSiteGroups } from \"./people_manager.js\";\r\nimport { addTask, finishTask, taskDefs } from \"./tasks.js\";\r\n\r\nexport const roleNames = {\r\n  FullControl: \"Full Control\",\r\n  Design: \"Design\",\r\n  Edit: \"Edit\",\r\n  Contribute: \"Contribute\",\r\n  Read: \"Read\",\r\n  LimitedAccess: \"Limited Access\",\r\n  RestrictedRead: \"Restricted Read\",\r\n  RestrictedContribute: \"Restricted Contribute\",\r\n  InitialCreate: \"Initial Create\",\r\n};\r\n\r\nexport function ensureAllAppPerms() {\r\n  ensureAllPagePerms();\r\n  ensureAllListPermissions();\r\n}\r\n\r\nfunction ensureAllPagePerms() {\r\n  ensureDBPermissions();\r\n\r\n  // Reset Other Pages\r\n  [\r\n    \"AuditEmailHistory.aspx\",\r\n    \"AuditPermissions.aspx\",\r\n    \"AuditReport_RequestsStatus.aspx\",\r\n    \"AuditResponseDocs.aspx\",\r\n    \"AuditReturnedResponses.aspx\",\r\n    \"AuditUnSubmittedResponseDocuments.aspx\",\r\n    \"AuditUpdateSiteGroups.aspx\",\r\n  ].map((page) => ensurePagePerms(page, []));\r\n}\r\n\r\nexport function ensureDBPermissions() {\r\n  const aos = auditOrganizationStore().filter(\r\n    (ao) => ao.Role != ORGROLES.REQUESTINGOFFICE\r\n  );\r\n  ensurePagePerms(\"AO_DB.aspx\", aos);\r\n\r\n  const ros = auditOrganizationStore().filter(\r\n    (ao) => ao.Role == ORGROLES.REQUESTINGOFFICE\r\n  );\r\n  ensurePagePerms(\"RO_DB.aspx\", ros);\r\n\r\n  const qas = auditOrganizationStore().filter(\r\n    (ao) => ao.Role == ORGROLES.QUALITYASSURANCE\r\n  );\r\n  ensurePagePerms(\"QA_DB.aspx\", qas);\r\n\r\n  const sps = auditOrganizationStore().filter(\r\n    (ao) => ao.Role == ORGROLES.SPECIALPERMISSIONS\r\n  );\r\n  ensurePagePerms(\"SP_DB.aspx\", sps);\r\n\r\n  ensurePagePerms(\"IA_DB.aspx\", []);\r\n}\r\n\r\nasync function ensurePagePerms(pageTitle, orgs) {\r\n  const ensurePageTask = addTask(taskDefs.ensurePagePermissions(pageTitle));\r\n  const pageResults = await appContext.SitePages.FindByColumnValue(\r\n    [{ column: \"FileLeafRef\", value: pageTitle }],\r\n    {},\r\n    { count: 1, includePermissions: true }\r\n  );\r\n\r\n  const page = pageResults.results[0] ?? null;\r\n\r\n  if (!page) {\r\n    console.warn(\r\n      \"Unable to ensure page permissions. Page not found: \" + pageTitle,\r\n      orgs\r\n    );\r\n    finishTask(ensurePageTask);\r\n    return;\r\n  }\r\n\r\n  let reset = false;\r\n  if (!page.HasUniqueRoleAssignments) {\r\n    reset = true;\r\n  }\r\n\r\n  if (!reset) {\r\n    const principalIds = page.RoleAssignments.results.map(\r\n      (role) => role.PrincipalId\r\n    );\r\n\r\n    reset = orgs.find((org) => {\r\n      const orgId = org.UserGroup?.ID;\r\n      return !principalIds.includes(orgId);\r\n    })\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  if (reset) {\r\n    const resetPageTask = addTask(taskDefs.resetPagePermissions(pageTitle));\r\n    const { owners, members, visitors } = getSiteGroups();\r\n\r\n    const baseRoles = [\r\n      new Role({\r\n        principal: owners,\r\n        roleDefs: [new RoleDef({ name: roleNames.FullControl })],\r\n      }),\r\n      new Role({\r\n        principal: members,\r\n        roleDefs: [new RoleDef({ name: roleNames.RestrictedRead })],\r\n      }),\r\n      new Role({\r\n        principal: visitors,\r\n        roleDefs: [new RoleDef({ name: roleNames.RestrictedRead })],\r\n      }),\r\n    ];\r\n\r\n    const newRoles = orgs.map((org) => {\r\n      return new Role({\r\n        principal: org.UserGroup,\r\n        roleDefs: [{ name: roleNames.RestrictedRead }],\r\n      });\r\n    });\r\n\r\n    const newPerms = new ItemPermissions({\r\n      hasUniqueRoleAssignments: true,\r\n      roles: [...newRoles, ...baseRoles],\r\n    });\r\n\r\n    console.warn(\"Resetting Page Perms: \", pageTitle);\r\n    await appContext.SitePages.SetItemPermissions(page, newPerms, true);\r\n    finishTask(resetPageTask);\r\n  }\r\n\r\n  finishTask(ensurePageTask);\r\n}\r\n\r\nfunction getPeopleByOrgRole(orgType) {\r\n  return auditOrganizationStore()\r\n    .filter((ao) => ao.Role == orgType && ao.UserGroup)\r\n    .map((ao) => new People(ao.UserGroup));\r\n}\r\n\r\nfunction ensureAllListPermissions() {\r\n  const { owners, members, visitors } = getSiteGroups();\r\n\r\n  const baseRoles = [\r\n    new Role({\r\n      principal: owners,\r\n      roleDefs: [new RoleDef({ name: roleNames.FullControl })],\r\n    }),\r\n    new Role({\r\n      principal: members,\r\n      roleDefs: [new RoleDef({ name: roleNames.Contribute })],\r\n    }),\r\n    new Role({\r\n      principal: visitors,\r\n      roleDefs: [new RoleDef({ name: roleNames.RestrictedRead })],\r\n    }),\r\n  ];\r\n\r\n  const qaRestrictedContributeRoles = getPeopleByOrgRole(\r\n    ORGROLES.QUALITYASSURANCE\r\n  ).map(\r\n    (principal) =>\r\n      new Role({\r\n        principal,\r\n        roleDefs: [new RoleDef({ name: roleNames.RestrictedContribute })],\r\n      })\r\n  );\r\n\r\n  const qaRestrictedReadRoles = getPeopleByOrgRole(\r\n    ORGROLES.QUALITYASSURANCE\r\n  ).map(\r\n    (principal) =>\r\n      new Role({\r\n        principal,\r\n        roleDefs: [new RoleDef({ name: roleNames.RestrictedRead })],\r\n      })\r\n  );\r\n\r\n  const roRestrictedReadRoles = getPeopleByOrgRole(\r\n    ORGROLES.REQUESTINGOFFICE\r\n  ).map(\r\n    (principal) =>\r\n      new Role({\r\n        principal,\r\n        roleDefs: [new RoleDef({ name: roleNames.RestrictedRead })],\r\n      })\r\n  );\r\n\r\n  const setPerms = [\r\n    {\r\n      entitySet: appContext.AuditBulkRequests,\r\n      permissions: new ItemPermissions({\r\n        hasUniqueRoleAssignments: true,\r\n        roles: baseRoles,\r\n      }),\r\n    },\r\n    {\r\n      entitySet: appContext.AuditBulkResponses,\r\n      permissions: new ItemPermissions({\r\n        hasUniqueRoleAssignments: true,\r\n        roles: baseRoles,\r\n      }),\r\n    },\r\n    {\r\n      entitySet: appContext.AuditResponseDocsRO,\r\n      permissions: new ItemPermissions({\r\n        hasUniqueRoleAssignments: true,\r\n        roles: [...baseRoles, ...qaRestrictedContributeRoles],\r\n      }),\r\n    },\r\n    {\r\n      entitySet: appContext.AuditRequests,\r\n      permissions: new ItemPermissions({\r\n        hasUniqueRoleAssignments: true,\r\n        roles: baseRoles,\r\n      }),\r\n    },\r\n    {\r\n      entitySet: appContext.AuditRequestsInternals,\r\n      permissions: new ItemPermissions({\r\n        hasUniqueRoleAssignments: true,\r\n        roles: [...baseRoles, ...qaRestrictedReadRoles],\r\n      }),\r\n    },\r\n    {\r\n      entitySet: appContext.AuditROEmailsLog,\r\n      permissions: new ItemPermissions({\r\n        hasUniqueRoleAssignments: true,\r\n        roles: [...baseRoles, ...qaRestrictedContributeRoles],\r\n      }),\r\n    },\r\n  ];\r\n\r\n  setPerms.map(async (setPerm) => {\r\n    const ensureListTask = addTask(\r\n      taskDefs.ensureListPermissions(setPerm.entitySet)\r\n    );\r\n    await ensureEntitySetPerms(setPerm);\r\n    finishTask(ensureListTask);\r\n  });\r\n}\r\n\r\nasync function ensureEntitySetPerms({ entitySet, permissions }) {\r\n  const curPerms = await entitySet.GetRootPermissions();\r\n\r\n  if (!curPerms.hasUniqueRoleAssignments) {\r\n    await resetEntitySetPerms(\r\n      entitySet,\r\n      permissions,\r\n      true,\r\n      \"List Inherits Permissions\"\r\n    );\r\n\r\n    return;\r\n  }\r\n\r\n  // Otherwise, verify that all roles match\r\n  const missingPermission = permissions.roles.find((newRole) => {\r\n    const existingRole = curPerms.roles.find(\r\n      (curRole) => curRole.principal.ID == newRole.principal.ID\r\n    );\r\n    // If the principal doesn't have a role assignment\r\n    if (!existingRole) return true;\r\n\r\n    const curRoleDefNames = existingRole.roleDefs.map(\r\n      (roleDef) => roleDef.name\r\n    );\r\n\r\n    // Else, if we find a roleDef that isn't already set\r\n    return newRole.roleDefs.find(\r\n      (roleDef) => !curRoleDefNames.includes(roleDef.name)\r\n    );\r\n  });\r\n\r\n  if (!missingPermission) return;\r\n\r\n  await resetEntitySetPerms(entitySet, permissions, false, {\r\n    \"Missing Permissions\": missingPermission,\r\n  });\r\n}\r\n\r\nasync function resetEntitySetPerms(entitySet, permissions, reset, reason) {\r\n  const resetEntitySetPermsTask = addTask(\r\n    taskDefs.resetListPermissions(entitySet)\r\n  );\r\n  console.warn(\"Resetting EntitySet Permissions: \" + entitySet.ListDef.title, {\r\n    entitySet,\r\n    permissions,\r\n    reason,\r\n  });\r\n  await entitySet.SetRootPermissions(permissions, reset);\r\n  finishTask(resetEntitySetPermsTask);\r\n}\r\n", "const taskStates = {\r\n  pending: \"Pending\",\r\n  aging: \"Aging\",\r\n  completed: \"Completed\",\r\n};\r\n\r\nexport class Task {\r\n  constructor({ msg, blocking }) {\r\n    this.msg = msg;\r\n    this.blocking = blocking;\r\n    this.Status(taskStates.pending);\r\n  }\r\n\r\n  msg;\r\n  blocking;\r\n  Status = ko.observable();\r\n\r\n  timeout = window.setTimeout(() => {\r\n    console.warn(\"this task is aging:\", this);\r\n    this.Status(taskStates.aging);\r\n  }, 5000);\r\n\r\n  markComplete = () => {\r\n    window.clearTimeout(this.timeout);\r\n    this.Status(taskStates.completed);\r\n  };\r\n\r\n  // Should this task block user input?\r\n  IsBlocking = ko.pureComputed(\r\n    () => this.blocking && this.Status() != taskStates.completed\r\n  );\r\n}\r\n\r\nexport class ProgressTask {\r\n  constructor({ msg, blocking }) {\r\n    this.msg = msg;\r\n    this.blocking = blocking;\r\n    this.Status(taskStates.pending);\r\n  }\r\n\r\n  msg;\r\n  blocking;\r\n  Status = ko.observable();\r\n\r\n  updateProgress = ({ percentDone }) => {\r\n    this.Status(`${parseInt(percentDone * 100)}%`);\r\n  };\r\n\r\n  setTimeout = () =>\r\n    window.setTimeout(() => {\r\n      console.warn(\"this task is aging:\", this);\r\n      this.Status(`${this.Status()} (${taskStates.aging})`);\r\n    }, 50000);\r\n\r\n  resetTimeout = () => {\r\n    window.clearTimeout(this.timeout);\r\n    this.timeout = this.setTimeout();\r\n  };\r\n\r\n  timeout = this.setTimeout();\r\n\r\n  markComplete = () => {\r\n    window.clearTimeout(this.timeout);\r\n    this.Status(taskStates.completed);\r\n  };\r\n\r\n  // Should this task block user input?\r\n  IsBlocking = ko.pureComputed(\r\n    () => this.blocking && this.Status() != taskStates.completed\r\n  );\r\n\r\n  static Create(params) {\r\n    return new ProgressTask(params);\r\n  }\r\n}\r\n", "import { ProgressTask, Task } from \"../value_objects/task.js\";\r\nexport const runningTasks = ko.observableArray();\r\n\r\nexport const blockingTasks = ko.pureComputed(() => {\r\n  return runningTasks().filter((task) => task.IsBlocking()) ?? [];\r\n});\r\n\r\nexport class TaskDef {\r\n  constructor(msg, blocking = false, type = null) {\r\n    this.msg = msg;\r\n    this.blocking = blocking;\r\n    this.type = type;\r\n  }\r\n  msg;\r\n  blocking;\r\n  type;\r\n}\r\n\r\nexport const taskDefs = {\r\n  init: { msg: \"Initializing the Application\", blocking: true },\r\n  save: { msg: \"Saving Request\", blocking: true },\r\n  newRequest: { msg: \"Processing New Request\", blocking: true },\r\n  cancelAction: { msg: \"Cancelling Action\", blocking: true },\r\n  view: { msg: \"Viewing Request\", blocking: false },\r\n  refresh: { msg: \"Refreshing Request\", blocking: false },\r\n  permissionsRequest: {\r\n    msg: \"Updating Request Item Permissions\",\r\n    blocking: true,\r\n  },\r\n  permissionsResponse: (responseTitle) => {\r\n    return {\r\n      msg: \"Updating Response Item Permissions: \" + responseTitle,\r\n      blocking: true,\r\n    };\r\n  },\r\n  permissionsResponseFolder: (responseTitle) => {\r\n    return {\r\n      msg: \"Ensuring Response Folder Item Permissions: \" + responseTitle,\r\n      blocking: true,\r\n    };\r\n  },\r\n  ensureResponseDocFolder: (folderName) => {\r\n    return {\r\n      msg: \"Ensuring Response Folder: \" + folderName,\r\n      blocking: true,\r\n    };\r\n  },\r\n  permissionsResponseAndFolder: (responseTitle) => {\r\n    return {\r\n      msg: \"Updating Response and Folder Item Permissions: \" + responseTitle,\r\n      blocking: true,\r\n    };\r\n  },\r\n  permissionsEmailFolder: {\r\n    msg: \"Updating Email Folder Permissions\",\r\n    blocking: true,\r\n  },\r\n  permissionsCoversheet: (coversheetName) => {\r\n    return {\r\n      msg: \"Updating Coversheet Permissions: \" + coversheetName,\r\n      blocking: true,\r\n    };\r\n  },\r\n  ensurePagePermissions: (page) =>\r\n    new TaskDef(\"Ensuring Page Permissions: \" + page),\r\n  resetPagePermissions: (page) =>\r\n    new TaskDef(\"Resetting Page Permissions: \" + page, true),\r\n  ensureListPermissions: (entitySet) =>\r\n    new TaskDef(\"Ensuring List Permissions: \" + entitySet.ListDef.title),\r\n  resetListPermissions: (entitySet) =>\r\n    new TaskDef(\"Resetting List Permissions: \" + entitySet.ListDef.title, true),\r\n  deleteEmailFolder: { msg: \"Deleting Email Folder\", blocking: true },\r\n  newResponse: (responseTitle) => {\r\n    return {\r\n      msg: \"Submitting new Response: \" + responseTitle,\r\n      blocking: true,\r\n    };\r\n  },\r\n  updateResponse: (responseTitle) => {\r\n    return {\r\n      msg: \"Updating Response: \" + responseTitle,\r\n      blocking: true,\r\n    };\r\n  },\r\n  deleteResponse: (responseTitle) => {\r\n    return {\r\n      msg: \"Deleting Response: \" + responseTitle,\r\n      blocking: true,\r\n    };\r\n  },\r\n  closeResponse: (responseTitle) => {\r\n    return {\r\n      msg: \"Closing Response: \" + responseTitle,\r\n      blocking: true,\r\n    };\r\n  },\r\n  uploadResponseDoc: (responseDocTitle) => {\r\n    return {\r\n      msg: \"Uploading Response Document: \" + responseDocTitle,\r\n      blocking: true,\r\n      type: ProgressTask,\r\n    };\r\n  },\r\n  updateResponseDoc: (responseDocTitle) => {\r\n    return {\r\n      msg: \"Updating Response Document: \" + responseDocTitle,\r\n      blocking: true,\r\n    };\r\n  },\r\n  approveResponseDoc: (responseDocTitle) => {\r\n    return {\r\n      msg: \"Approving Response Document: \" + responseDocTitle,\r\n      blocking: true,\r\n    };\r\n  },\r\n  deleteResponseDocFolder: (responseTitle) => {\r\n    return {\r\n      msg: \"Deleting Response Document Folder: \" + responseTitle,\r\n      blocking: true,\r\n    };\r\n  },\r\n  uploadCoversheet: (coversheetName) => {\r\n    return {\r\n      msg: \"Uploading Coversheet: \" + coversheetName,\r\n      blocking: true,\r\n      type: ProgressTask,\r\n    };\r\n  },\r\n  updateCoversheet: (coversheetName) => {\r\n    return {\r\n      msg: \"Updating Coversheet: \" + coversheetName,\r\n      blocking: true,\r\n    };\r\n  },\r\n  deleteCoversheet: (coversheetName) => {\r\n    return {\r\n      msg: \"Deleting Coversheet: \" + coversheetName,\r\n      blocking: true,\r\n    };\r\n  },\r\n  deleteRequestInternalItem: {\r\n    msg: \"Deleting Request Internal Item\",\r\n    blocking: true,\r\n  },\r\n  newComment: { msg: \"Submitting Comment\", blocking: false },\r\n  refreshComments: { msg: \"Refreshing Comments\", blocking: false },\r\n  notifyComment: { msg: \"Sending Comment Email\", blocking: false },\r\n  removeComment: { msg: \"Removing Comment\", blocking: false },\r\n  newAction: { msg: \"Submitting Action\", blocking: false },\r\n  refreshActions: { msg: \"Refreshing Actions\", blocking: false },\r\n  newAttachment: { msg: \"Submitting Attachment\", blocking: false },\r\n  refreshAttachments: { msg: \"Refreshing Attachments\", blocking: false },\r\n  approve: { msg: \"Approving Request\", blocking: true },\r\n  lock: { msg: \"Locking Request\", blocking: true },\r\n  closing: { msg: \"Closing Request\", blocking: true },\r\n};\r\n\r\nexport const addTask = (taskDef) => {\r\n  let newTask;\r\n\r\n  if (taskDef.type) {\r\n    newTask = taskDef.type.Create(taskDef);\r\n  } else {\r\n    newTask = new Task(taskDef);\r\n  }\r\n\r\n  runningTasks.push(newTask);\r\n  return newTask;\r\n};\r\n\r\nexport const finishTask = function (activeTask) {\r\n  if (activeTask) {\r\n    activeTask.markComplete();\r\n    window.setTimeout(() => removeTask(activeTask), 3000);\r\n    // runningTasks.remove(activeTask);\r\n  }\r\n};\r\n\r\nconst removeTask = function (taskToRemove) {\r\n  runningTasks.remove(taskToRemove);\r\n};\r\n", "import { appContext } from \"../infrastructure/application_db_context.js\";\r\nimport {\r\n  getPeopleByUsername,\r\n  getQAGroup,\r\n  getSiteGroups,\r\n  getSpecialPermGroups,\r\n} from \"./people_manager.js\";\r\nimport { roleNames } from \"./permission_manager.js\";\r\nimport { ItemPermissions } from \"../sal/infrastructure/index.js\";\r\nimport {\r\n  AuditResponseStates,\r\n  AuditRequest,\r\n  AuditRequestsInternal,\r\n} from \"../entities/index.js\";\r\nimport { People } from \"../sal/entities/index.js\";\r\nimport { addTask, finishTask, taskDefs } from \"./tasks.js\";\r\nimport { deleteRequestCoversheet } from \"./coversheet_manager.js\";\r\nimport { auditOrganizationStore } from \"../infrastructure/store.js\";\r\n\r\nexport async function getRequestById(id) {\r\n  return await appContext.AuditRequests.FindById(id);\r\n}\r\n\r\nexport async function getRequestByTitle(title) {\r\n  const requestResults = await appContext.AuditRequests.FindByColumnValue(\r\n    [{ column: \"Title\", value: title }],\r\n    {},\r\n    { count: 1 }\r\n  );\r\n\r\n  return requestResults.results[0] ?? null;\r\n}\r\n\r\nexport async function addNewRequest(request) {\r\n  const fields = request.FieldMap;\r\n\r\n  // See if we have a request with this title already\r\n  const existingRequests = await appContext.AuditRequests.FindByColumnValue(\r\n    [{ column: \"Title\", value: fields.Title.Value() }],\r\n    {},\r\n    { count: 1 }\r\n  );\r\n\r\n  // TODO: use addFieldRequirement?\r\n  if (existingRequests.results.length) {\r\n    throw new Error(\"Request with this name already exists!\");\r\n  }\r\n\r\n  request.FieldMap.EmailActionOffice.Value(\r\n    request.FieldMap.ActionOffice.Value()\r\n  );\r\n\r\n  await appContext.AuditRequests.AddEntity(request);\r\n\r\n  // This is handled by the IA_DB callback\r\n  // await onAddNewRequest(request);\r\n}\r\n\r\nexport async function updateRequest(request) {\r\n  await appContext.AuditRequests.UpdateEntity(\r\n    request,\r\n    AuditRequest.Views.IACanUpdate\r\n  );\r\n}\r\n\r\nexport async function deleteRequest(requestId) {\r\n  // Also delete related items:\r\n  // xCoversheets, Emails (Folder), xRequestInternal, xResponseDocs (Folder), xResponses\r\n  const request = await appContext.AuditRequests.FindById(requestId);\r\n  if (!request) {\r\n    alert(\"Could not find request: \", requestId);\r\n  }\r\n  const requestTitle = request.ReqNum.Value();\r\n  const promises = [];\r\n  // Delete Coversheets\r\n  const coversheets = await getRequestCoversheets(request);\r\n\r\n  coversheets.map((coversheet) => {\r\n    promises.push(deleteRequestCoversheet(coversheet));\r\n  });\r\n\r\n  // Delete email folder\r\n  promises.push(\r\n    new Promise(async (resolve) => {\r\n      const deleteItemTask = addTask(taskDefs.deleteEmailFolder);\r\n      await appContext.AuditEmails.RemoveFolderByPath(requestTitle);\r\n      finishTask(deleteItemTask);\r\n      resolve();\r\n    })\r\n  );\r\n\r\n  // Delete responses and responsedocs\r\n  const responses = await getRequestResponses(request);\r\n  responses.map((response) => {\r\n    promises.push(deleteResponseAndFolder(response));\r\n  });\r\n\r\n  // Delete the internal item\r\n  const requestInternalItem = await getRequestInternalItem(requestId);\r\n  if (requestInternalItem) {\r\n    promises.push(\r\n      new Promise(async (resolve) => {\r\n        const deleteItemTask = addTask(taskDefs.deleteRequestInternalItem);\r\n        await appContext.AuditRequestsInternals.RemoveEntityById(\r\n          requestInternalItem.ID\r\n        );\r\n        finishTask(deleteItemTask);\r\n        resolve();\r\n      })\r\n    );\r\n  }\r\n\r\n  await Promise.all(promises);\r\n  // Finally, delete the request\r\n  await appContext.AuditRequests.RemoveEntityById(requestId);\r\n  return true;\r\n}\r\n\r\nexport async function ensureRequestAuditResponseDocsROFolder(\r\n  reqNum,\r\n  requestingOfficeId\r\n) {\r\n  const roFolderResults =\r\n    await appContext.AuditResponseDocsRO.FindByColumnValue(\r\n      [\r\n        { column: \"Title\", value: reqNum },\r\n        { column: \"ContentType\", value: \"Folder\" },\r\n      ],\r\n      {},\r\n      { count: 1, includeFolders: true }\r\n    );\r\n\r\n  const roFolder = roFolderResults.results[0] ?? null;\r\n\r\n  if (roFolder) return roFolder.FileRef;\r\n\r\n  const requestingOffice = auditOrganizationStore().find(\r\n    (ao) => ao.ID == requestingOfficeId\r\n  );\r\n\r\n  const newRoFolderId = await appContext.AuditResponseDocsRO.UpsertFolderPath(\r\n    reqNum\r\n  );\r\n  const { owners, members, visitors } = getSiteGroups();\r\n  const qaGroup = await getQAGroup();\r\n  const newPermissions = new ItemPermissions({\r\n    hasUniqueRoleAssignments: true,\r\n    roles: [],\r\n  });\r\n\r\n  newPermissions.addPrincipalRole(owners, roleNames.FullControl);\r\n  newPermissions.addPrincipalRole(members, roleNames.Contribute);\r\n  newPermissions.addPrincipalRole(visitors, roleNames.RestrictedRead);\r\n  newPermissions.addPrincipalRole(qaGroup, roleNames.RestrictedContribute);\r\n  newPermissions.addPrincipalRole(\r\n    requestingOffice.UserGroup,\r\n    roleNames.RestrictedRead\r\n  );\r\n\r\n  await appContext.AuditResponseDocsRO.SetItemPermissions(\r\n    { ID: newRoFolderId },\r\n    newPermissions,\r\n    true\r\n  );\r\n\r\n  const newFolderEntity = await appContext.AuditResponseDocsRO.FindById(\r\n    newRoFolderId\r\n  );\r\n\r\n  return newFolderEntity.FileRef;\r\n}\r\n\r\n/* Begin Unreferenced Service Rewrites */\r\nexport async function onAddNewRequest(request) {\r\n  await Promise.all([\r\n    ensureRequestPermissions(request),\r\n    ensureAuditEmailFolder(request),\r\n    ensureRequestInternalItem(request),\r\n  ]);\r\n}\r\n\r\nasync function ensureAuditEmailFolder(request) {\r\n  const newFolderId = await appContext.AuditEmails.UpsertFolderPath(\r\n    request.ReqNum.Value()\r\n  );\r\n\r\n  const newItemPermissions = new ItemPermissions({\r\n    hasUniqueRoleAssignments: true,\r\n    roles: [],\r\n  });\r\n\r\n  const { owners, members, visitors } = await getSiteGroups();\r\n  const qaGroup = await getPeopleByUsername(\r\n    Audit.Common.Utilities.GetGroupNameQA()\r\n  );\r\n\r\n  newItemPermissions.addPrincipalRole(owners, roleNames.FullControl);\r\n  newItemPermissions.addPrincipalRole(members, roleNames.RestrictedContribute);\r\n  newItemPermissions.addPrincipalRole(visitors, roleNames.RestrictedRead);\r\n\r\n  newItemPermissions.addPrincipalRole(qaGroup, roleNames.RestrictedContribute);\r\n\r\n  const actionOffices = request.FieldMap.ActionOffice.Value();\r\n\r\n  actionOffices.map((ao) => {\r\n    newItemPermissions.addPrincipalRole(\r\n      ao.UserGroup,\r\n      roleNames.RestrictedContribute\r\n    );\r\n  });\r\n\r\n  const result = await appContext.AuditEmails.SetItemPermissions(\r\n    { ID: newFolderId },\r\n    newItemPermissions,\r\n    true\r\n  );\r\n}\r\n\r\nasync function ensureRequestPermissions(request) {\r\n  const perms = await appContext.AuditRequests.GetItemPermissions(request);\r\n  if (!perms.hasUniqueRoleAssignments) {\r\n    if (window.DEBUG) console.log(\"Request does not have unique permissions\");\r\n    await breakRequestPermissions(request);\r\n  }\r\n}\r\n\r\nasync function ensureRequestInternalItem(request) {\r\n  const requestInternalResult = await getRequestInternalItem(request);\r\n  if (requestInternalResult) return requestInternalResult;\r\n\r\n  const requestInternal = new AuditRequestsInternal();\r\n  requestInternal.ReqNum.Value(request);\r\n  await appContext.AuditRequestsInternals.AddEntity(requestInternal);\r\n  return requestInternal;\r\n}\r\n\r\nexport async function breakRequestPermissions(request, responseStatus) {\r\n  const curPerms = await appContext.AuditRequests.GetItemPermissions(request);\r\n\r\n  const defaultGroups = await getSiteGroups();\r\n\r\n  const qaGroup = await getPeopleByUsername(\r\n    Audit.Common.Utilities.GetGroupNameQA()\r\n  );\r\n\r\n  const qaHasRead = curPerms.principalHasPermissionKind(\r\n    qaGroup,\r\n    SP.PermissionKind.viewListItems\r\n  );\r\n\r\n  const special1Group = await getPeopleByUsername(\r\n    Audit.Common.Utilities.GetGroupNameSpecialPerm1()\r\n  );\r\n  const special2Group = await getPeopleByUsername(\r\n    Audit.Common.Utilities.GetGroupNameSpecialPerm2()\r\n  );\r\n\r\n  const special1HasRead = curPerms.principalHasPermissionKind(\r\n    special1Group,\r\n    SP.PermissionKind.viewListItems\r\n  );\r\n  const special2HasRead = curPerms.principalHasPermissionKind(\r\n    special2Group,\r\n    SP.PermissionKind.viewListItems\r\n  );\r\n\r\n  const newRequestPermissions = new ItemPermissions({\r\n    hasUniqueRoleAssignments: true,\r\n    roles: [],\r\n  });\r\n\r\n  newRequestPermissions.addPrincipalRole(\r\n    defaultGroups.owners,\r\n    roleNames.FullControl\r\n  );\r\n  newRequestPermissions.addPrincipalRole(\r\n    defaultGroups.members,\r\n    roleNames.Contribute\r\n  );\r\n  newRequestPermissions.addPrincipalRole(\r\n    defaultGroups.visitors,\r\n    roleNames.RestrictedRead\r\n  );\r\n\r\n  if (qaHasRead || responseStatus == AuditResponseStates.ApprovedForQA) {\r\n    newRequestPermissions.addPrincipalRole(qaGroup, roleNames.RestrictedRead);\r\n  }\r\n\r\n  if (special1HasRead) {\r\n    newRequestPermissions.addPrincipalRole(\r\n      special1Group,\r\n      roleNames.RestrictedRead\r\n    );\r\n  }\r\n\r\n  if (special2HasRead) {\r\n    newRequestPermissions.addPrincipalRole(\r\n      special2Group,\r\n      roleNames.RestrictedRead\r\n    );\r\n  }\r\n\r\n  const actionOffices = request.FieldMap.ActionOffice.Value();\r\n\r\n  actionOffices.map((ao) =>\r\n    newRequestPermissions.addPrincipalRole(\r\n      new People(ao.UserGroup),\r\n      roleNames.RestrictedRead\r\n    )\r\n  );\r\n\r\n  await appContext.AuditRequests.SetItemPermissions(\r\n    request,\r\n    newRequestPermissions,\r\n    true\r\n  );\r\n}\r\n\r\nexport async function requestHasSpecialPerms(request) {\r\n  const curPerms = await appContext.AuditRequests.GetItemPermissions(request);\r\n  const { specialPermGroup1 } = await getSpecialPermGroups();\r\n\r\n  return curPerms.principalHasPermissionKind(\r\n    specialPermGroup1,\r\n    SP.PermissionKind.viewListItems\r\n  );\r\n}\r\n\r\nexport async function getRequestInternalItem(request) {\r\n  const requestInternalResult =\r\n    await appContext.AuditRequestsInternals.FindByColumnValue(\r\n      [{ column: \"ReqNum\", op: \"eq\", value: request.ID }],\r\n      {},\r\n      {}\r\n    );\r\n\r\n  if (requestInternalResult.results.length) {\r\n    if (requestInternalResult.results.length > 1) {\r\n      //TODO: attempt to purge extra items\r\n      console.error(\r\n        requestInternalResult.results.length + \" internal items!\",\r\n        request\r\n      );\r\n    }\r\n    return requestInternalResult.results[0];\r\n  }\r\n  return;\r\n}\r\n\r\nexport async function getRequestCoversheets(request) {\r\n  const coversheetsResult = await appContext.AuditCoversheets.FindByColumnValue(\r\n    [{ column: \"ReqNum\", value: request.ID }],\r\n    {},\r\n    {}\r\n  );\r\n\r\n  return coversheetsResult.results;\r\n}\r\n\r\nexport async function getRequestResponses(request) {\r\n  const responsesResult = await appContext.AuditResponses.FindByColumnValue(\r\n    [{ column: \"ReqNum\", value: request.ID }],\r\n    {},\r\n    { includePermissions: true }\r\n  );\r\n\r\n  return responsesResult.results;\r\n}\r\n\r\nexport async function getRequestResponseDocs(request) {\r\n  const responsesResult = await appContext.AuditResponseDocs.FindByColumnValue(\r\n    [{ column: \"ReqNum\", value: request.ID }],\r\n    {},\r\n    { includePermissions: true }\r\n  );\r\n\r\n  return responsesResult.results;\r\n}\r\n\r\nexport async function getRequestResponseDocsFolders(responseTitle) {\r\n  const responsesResult = await appContext.AuditResponseDocs.FindByColumnValue(\r\n    [{ column: \"Title\", value: responseTitle }],\r\n    {},\r\n    { includeFolders: true },\r\n    [\"ID\", \"Title\"]\r\n  );\r\n\r\n  return responsesResult.results;\r\n}\r\n\r\n/* TO BE UPDATED */\r\n", "import { appContext } from \"../infrastructure/application_db_context.js\";\r\nimport {\r\n  getSpecialPermGroups,\r\n  getSiteGroups,\r\n  getQAGroup,\r\n  getPeopleByUsername,\r\n} from \"./people_manager.js\";\r\nimport { ItemPermissions } from \"../sal/infrastructure/index.js\";\r\nimport { roleNames } from \"./permission_manager.js\";\r\nimport { People } from \"../sal/entities/index.js\";\r\nimport { AuditCoversheet } from \"../entities/index.js\";\r\nimport { getRequestCoversheets } from \"./audit_request_service.js\";\r\nimport { addTask, finishTask, taskDefs } from \"./tasks.js\";\r\n\r\nexport async function uploadRequestCoversheetFile(\r\n  file,\r\n  request,\r\n  actionOffices = []\r\n) {\r\n  let fileName = file.name;\r\n  const reqNum = request.ReqNum.Value();\r\n  if (!fileName.includes(reqNum)) fileName = reqNum + \"_\" + fileName;\r\n\r\n  const newFileName = getNewFileNameForSensitivity(\r\n    fileName,\r\n    null,\r\n    request.Sensitivity.Value()\r\n  );\r\n\r\n  const uploadCoversheetTask = addTask(taskDefs.uploadCoversheet(newFileName));\r\n  const title = newFileName.substring(0, newFileName.lastIndexOf(\".\"));\r\n\r\n  const fileMetadata = {\r\n    Title: title,\r\n    ReqNumId: request.ID,\r\n    ActionOfficeId: actionOffices.map((ao) => ao.ID),\r\n  };\r\n\r\n  const newCoversheet =\r\n    await appContext.AuditCoversheets.UploadFileToFolderAndUpdateMetadata(\r\n      file,\r\n      newFileName,\r\n      \"\",\r\n      fileMetadata,\r\n      ({ currentBlock, totalBlocks }) =>\r\n        uploadCoversheetTask.updateProgress({\r\n          percentDone: currentBlock / totalBlocks,\r\n        })\r\n    );\r\n\r\n  await breakCoversheetPermissions(newCoversheet);\r\n  finishTask(uploadCoversheetTask);\r\n  return newCoversheet;\r\n}\r\nexport async function deleteRequestCoversheetById(coversheetId) {\r\n  const coversheet = await appContext.AuditCoversheets.FindById(coversheetId);\r\n\r\n  return deleteRequestCoversheet(coversheet);\r\n}\r\nexport async function deleteRequestCoversheet(coversheet) {\r\n  const deleteItemTask = addTask(\r\n    taskDefs.deleteCoversheet(coversheet.FileName.toString())\r\n  );\r\n  await appContext.AuditCoversheets.RemoveEntityById(coversheet.ID);\r\n  finishTask(deleteItemTask);\r\n}\r\n\r\nexport async function updateRequestCoverSheet(coverSheet) {\r\n  const request = coverSheet.ReqNum.Value();\r\n\r\n  if (!request) throw new Error(\"ReqNum not set!\");\r\n  const updateCoversheetTask = addTask(\r\n    taskDefs.updateCoversheet(coverSheet.FileName.Value())\r\n  );\r\n  let fileName = coverSheet.FileName.Value();\r\n\r\n  if (!fileName.includes(request.ReqNum.Value())) {\r\n    fileName = request.ReqNum.Value() + \"_\" + fileName;\r\n    coverSheet.FileName.Value(fileName);\r\n  }\r\n\r\n  await appContext.AuditCoversheets.UpdateEntity(\r\n    coverSheet,\r\n    AuditCoversheet.Views.AOCanUpdate\r\n  );\r\n\r\n  finishTask(updateCoversheetTask);\r\n}\r\n\r\nexport async function breakRequestCoversheetPerms(request, grantQARead) {\r\n  const coversheets = await getRequestCoversheets(request);\r\n\r\n  await Promise.all(\r\n    coversheets.map((coversheet) =>\r\n      breakCoversheetPermissions(coversheet, grantQARead)\r\n    )\r\n  );\r\n}\r\n\r\nfunction getNewFileNameForSensitivity(\r\n  fileName,\r\n  oldSensitivity,\r\n  requestSensitivity\r\n) {\r\n  let newFileName = \"\";\r\n  var curDocFileNameAndExt = fileName;\r\n  var curDocFileName = curDocFileNameAndExt.substring(\r\n    0,\r\n    curDocFileNameAndExt.lastIndexOf(\".\")\r\n  );\r\n  var curDocExt = curDocFileNameAndExt.replace(curDocFileName, \"\");\r\n\r\n  newFileName = curDocFileName;\r\n  if (oldSensitivity != null && oldSensitivity != \"\") {\r\n    if (curDocFileName.endsWith(\"_\" + oldSensitivity)) {\r\n      newFileName = newFileName.replace(\"_\" + oldSensitivity, \"\");\r\n    }\r\n  }\r\n  if (\r\n    requestSensitivity != null &&\r\n    requestSensitivity != \"\" &&\r\n    requestSensitivity != \"None\"\r\n  ) {\r\n    if (!curDocFileName.endsWith(\"_\" + requestSensitivity))\r\n      newFileName = newFileName + \"_\" + requestSensitivity;\r\n  }\r\n\r\n  return newFileName + curDocExt;\r\n}\r\n\r\nasync function breakCoversheetPermissions(coversheet, grantQARead) {\r\n  const breakCoversheetPermsTask = addTask(\r\n    taskDefs.permissionsCoversheet(coversheet.FileName.Value())\r\n  );\r\n  const curPerms = await appContext.AuditCoversheets.GetItemPermissions(\r\n    coversheet\r\n  );\r\n\r\n  const defaultGroups = await getSiteGroups();\r\n\r\n  const qaGroup = await getQAGroup();\r\n\r\n  let qaHasRead = curPerms.principalHasPermissionKind(\r\n    qaGroup,\r\n    SP.PermissionKind.viewListItems\r\n  );\r\n\r\n  const { specialPermGroup1, specialPermGroup2 } = await getSpecialPermGroups();\r\n\r\n  let special1HasRead = curPerms.principalHasPermissionKind(\r\n    specialPermGroup1,\r\n    SP.PermissionKind.viewListItems\r\n  );\r\n  let special2HasRead = curPerms.principalHasPermissionKind(\r\n    specialPermGroup2,\r\n    SP.PermissionKind.viewListItems\r\n  );\r\n\r\n  if (!curPerms.hasUniqueRoleAssignments) {\r\n    special1HasRead = false;\r\n    special2HasRead = false;\r\n    qaHasRead = false;\r\n  }\r\n\r\n  const newPerms = new ItemPermissions({\r\n    hasUniqueRoleAssignments: true,\r\n    roles: [],\r\n  });\r\n\r\n  newPerms.addPrincipalRole(defaultGroups.owners, roleNames.FullControl);\r\n  newPerms.addPrincipalRole(defaultGroups.members, roleNames.Contribute);\r\n  newPerms.addPrincipalRole(defaultGroups.visitors, roleNames.RestrictedRead);\r\n\r\n  if (qaHasRead || grantQARead) {\r\n    newPerms.addPrincipalRole(qaGroup, roleNames.RestrictedRead);\r\n  }\r\n\r\n  if (special1HasRead) {\r\n    newPerms.addPrincipalRole(specialPermGroup1, roleNames.RestrictedRead);\r\n  }\r\n\r\n  if (special2HasRead) {\r\n    newPerms.addPrincipalRole(specialPermGroup2, roleNames.RestrictedRead);\r\n  }\r\n\r\n  const actionOffices = coversheet.ActionOffice.Value();\r\n\r\n  actionOffices.map((ao) =>\r\n    newPerms.addPrincipalRole(\r\n      new People(ao.UserGroup),\r\n      roleNames.RestrictedRead\r\n    )\r\n  );\r\n\r\n  await appContext.AuditCoversheets.SetItemPermissions(\r\n    coversheet,\r\n    newPerms,\r\n    true\r\n  );\r\n  finishTask(breakCoversheetPermsTask);\r\n}\r\n", "import {\r\n  AuditResponse,\r\n  AuditResponseStates,\r\n  AuditResponseDoc,\r\n  AuditResponseDocStates,\r\n} from \"../entities/index.js\";\r\n\r\nimport { appContext } from \"../infrastructure/application_db_context.js\";\r\nimport { showModal } from \"../sal/components/modal/index.js\";\r\nimport { ItemPermissions } from \"../sal/infrastructure/sal.js\";\r\nimport { ValidationError } from \"../sal/primitives/validation_error.js\";\r\nimport { Result } from \"../sal/shared/index.js\";\r\n\r\nimport {\r\n  breakRequestPermissions,\r\n  getRequestById,\r\n  getRequestResponseDocs,\r\n  getRequestResponses,\r\n  requestHasSpecialPerms,\r\n} from \"./audit_request_service.js\";\r\nimport { breakRequestCoversheetPerms } from \"./coversheet_manager.js\";\r\nimport {\r\n  getQAGroup,\r\n  getSiteGroups,\r\n  getSpecialPermGroups,\r\n} from \"./people_manager.js\";\r\nimport { roleNames } from \"./permission_manager.js\";\r\nimport { addTask, finishTask, taskDefs } from \"./tasks.js\";\r\n\r\nexport async function showBulkAddResponseModal(request) {\r\n  const options = {\r\n    title: \"Bulk Add Responses (\" + request.ReqNum.Value() + \")\",\r\n    height: 800,\r\n    url:\r\n      Audit.Common.Utilities.GetSiteUrl() +\r\n      \"/SitePages/AuditBulkAddResponse.aspx?ReqNum=\" +\r\n      request.ReqNum.Value(),\r\n  };\r\n\r\n  await showModal(options);\r\n}\r\n\r\nexport async function addResponse(request, response) {\r\n  const responseTitle = getResponseTitle(request, response);\r\n  const newResponseTask = addTask(taskDefs.newResponse(responseTitle));\r\n  // Update title\r\n\r\n  response.ReqNum.Value(request);\r\n\r\n  response.Title.Value(responseTitle);\r\n\r\n  response.ResStatus.Value(AuditResponseStates.Open);\r\n\r\n  try {\r\n    // Validate title is unique\r\n    const responseResult = await appContext.AuditResponses.FindByColumnValue(\r\n      [\r\n        {\r\n          column: \"Title\",\r\n          value: responseTitle,\r\n        },\r\n      ],\r\n      {},\r\n      { count: 1 }\r\n    );\r\n\r\n    if (responseResult.results.length) {\r\n      throw new Error(`Response with title ${responseTitle} already exists!`);\r\n    }\r\n\r\n    await appContext.AuditResponses.AddEntity(response);\r\n    await onAddNewResponse(request, response);\r\n  } catch (e) {\r\n    console.error(\"Error adding Response: \", e);\r\n\r\n    finishTask(newResponseTask);\r\n    return Result.Failure(e);\r\n  }\r\n\r\n  finishTask(newResponseTask);\r\n  return Result.Success();\r\n}\r\n\r\nexport async function onAddNewResponse(request, response) {\r\n  if (!request) {\r\n    request = response.ReqNum.Value();\r\n    await appContext.AuditRequests.LoadEntity(request);\r\n  }\r\n\r\n  const folderResult = await ensureResponseDocFolder(response);\r\n  if (folderResult.isFailure) {\r\n    return folderResult;\r\n  }\r\n\r\n  const permissionsResult = await ensureResponseDocFolderPermissions(\r\n    request,\r\n    response,\r\n    folderResult.value\r\n  );\r\n}\r\n\r\nexport async function ensureResponseDocFolder(response) {\r\n  const folderName = response.Title.toString();\r\n  const task = addTask(taskDefs.ensureResponseDocFolder(folderName));\r\n\r\n  const results = await appContext.AuditResponseDocs.FindByColumnValue(\r\n    [\r\n      { column: \"Title\", value: folderName },\r\n      { column: \"ContentType\", value: \"Folder\" },\r\n    ],\r\n    {},\r\n    { count: 1, includePermissions: true, includeFolders: true },\r\n    [\"ID\", \"Title\", \"ContentType\"]\r\n  );\r\n\r\n  if (results.results.length) {\r\n    finishTask(task);\r\n    return Result.Success(results.results[0]);\r\n  }\r\n\r\n  // Else, we need to insert it\r\n  const newFolderId = await appContext.AuditResponseDocs.UpsertFolderPath(\r\n    folderName\r\n  );\r\n\r\n  const newFolder = await appContext.AuditResponseDocs.FindById(newFolderId);\r\n\r\n  finishTask(task);\r\n  if (newFolder) {\r\n    return Result.Success(newFolder);\r\n  }\r\n\r\n  return Result.Failure(`Folder not found and couldn't be created`);\r\n}\r\n\r\nexport async function ensureResponseDocFolderPermissions(\r\n  request,\r\n  response,\r\n  folder\r\n) {\r\n  const task = addTask(\r\n    taskDefs.permissionsResponseFolder(response.Title.Value())\r\n  );\r\n  const newItemPermissions = new ItemPermissions({\r\n    hasUniqueRoleAssignments: true,\r\n    roles: [],\r\n  });\r\n\r\n  const { owners, members, visitors } = await getSiteGroups();\r\n\r\n  newItemPermissions.addPrincipalRole(owners, roleNames.FullControl);\r\n  newItemPermissions.addPrincipalRole(members, roleNames.RestrictedContribute);\r\n  newItemPermissions.addPrincipalRole(visitors, roleNames.RestrictedRead);\r\n\r\n  // TODO: Need to ensure response should be shared with QA\r\n  // if (request.isRequest()) {\r\n  //   const qaGroup = await getQAGroup();\r\n  //   newItemPermissions.addPrincipalRole(\r\n  //     qaGroup,\r\n  //     roleNames.RestrictedContribute\r\n  //   );\r\n  // }\r\n\r\n  // TODO: Also Need to Ensure Special Perms based off status\r\n  // if (await requestHasSpecialPerms(request)) {\r\n  //   const { specialPermGroup1, specialPermGroup2 } =\r\n  //     await getSpecialPermGroups();\r\n\r\n  //   newItemPermissions.addPrincipalRole(\r\n  //     specialPermGroup1,\r\n  //     roleNames.RestrictedRead\r\n  //   );\r\n  //   newItemPermissions.addPrincipalRole(\r\n  //     specialPermGroup2,\r\n  //     roleNames.RestrictedRead\r\n  //   );\r\n  // }\r\n\r\n  const actionOffice = response.ActionOffice.Value();\r\n\r\n  newItemPermissions.addPrincipalRole(\r\n    actionOffice.UserGroup,\r\n    roleNames.RestrictedContribute\r\n  );\r\n\r\n  const result = await appContext.AuditResponseDocs.SetItemPermissions(\r\n    { ID: folder.ID },\r\n    newItemPermissions,\r\n    true\r\n  );\r\n\r\n  finishTask(task);\r\n  return result;\r\n}\r\n\r\nexport async function updateResponse(request, response) {\r\n  const updateResponseTask = addTask(\r\n    taskDefs.updateResponse(response.Title.Value())\r\n  );\r\n\r\n  try {\r\n    // FPRA Check\r\n    const actionOfficeTitle =\r\n      response.ActionOffice.Value()?.Title?.toLowerCase();\r\n    if (!actionOfficeTitle.includes(\"fpra\")) {\r\n      if (response.POC.toString() || response.POCCC.toString()) {\r\n        throw new Error(\r\n          \"Only FPRA Responses can have designated POC and POC CC fields.\"\r\n        );\r\n      }\r\n    }\r\n\r\n    // Sensitivity Check\r\n    const currentResponseSensitivity = request.Sensitivity.Value();\r\n    const selectedResponseStatus = response.ResStatus.Value();\r\n\r\n    if (\r\n      selectedResponseStatus == AuditResponseStates.ApprovedForQA &&\r\n      currentResponseSensitivity == \"None\"\r\n    ) {\r\n      throw new Error(\"Request Sensitivity not set; cannot submit to QA.\");\r\n    }\r\n\r\n    const responseTitle = getResponseTitle(request, response);\r\n\r\n    if (response.Title.Value() != responseTitle)\r\n      response.Title.Value(responseTitle);\r\n\r\n    await appContext.AuditResponses.UpdateEntity(\r\n      response,\r\n      AuditResponse.Views.IACanUpdate\r\n    );\r\n  } catch (e) {\r\n    console.error(\"Error Updating Response: \", e);\r\n    alert(e.message);\r\n  } finally {\r\n    finishTask(updateResponseTask);\r\n  }\r\n}\r\n\r\nexport async function deleteResponseAndFolder(response) {\r\n  // Find the Response Folder\r\n  const responseTitle = response.Title.Value();\r\n\r\n  const deleteFolderTask = addTask(\r\n    taskDefs.deleteResponseDocFolder(responseTitle)\r\n  );\r\n  await appContext.AuditResponseDocs.RemoveFolderByPath(responseTitle);\r\n  finishTask(deleteFolderTask);\r\n\r\n  const deleteItemTask = addTask(taskDefs.deleteResponse(responseTitle));\r\n  await appContext.AuditResponses.RemoveEntityById(response.ID);\r\n  finishTask(deleteItemTask);\r\n  return;\r\n}\r\n\r\nexport async function updateResponseDoc(request, response, responseDoc) {\r\n  const updateResponseDocTask = addTask(\r\n    taskDefs.updateResponseDoc(responseDoc.Title.Value())\r\n  );\r\n\r\n  await appContext.AuditResponseDocs.UpdateEntity(\r\n    responseDoc,\r\n    AuditResponseDoc.Views.AOCanUpdate\r\n  );\r\n\r\n  finishTask(updateResponseDocTask);\r\n}\r\n\r\nexport async function getResponsesReadyToClose(requestId) {\r\n  const allRequestResponseDocs = await getRequestResponseDocs(request);\r\n\r\n  const allRequestResponses = await getRequestResponses(request);\r\n\r\n  return allRequestResponses.filter((response) =>\r\n    isResponseReadyToClose(response, allRequestResponseDocs)\r\n  );\r\n}\r\n\r\nasync function isResponseReadyToClose(response, responseDocs) {\r\n  const openResponseDocs = responseDocs.filter(\r\n    (responseDoc) =>\r\n      responseDoc.ResID.ID == response.ID &&\r\n      [AuditResponseDocStates.Open, AuditResponseDocStates.Submitted].includes(\r\n        responseDoc.DocumentStatus.Value()\r\n      )\r\n  );\r\n\r\n  return openResponseDocs.length;\r\n}\r\n\r\nexport async function closeResponseById(responseId) {\r\n  const response = await appContext.AuditResponses.FindById(responseId);\r\n  // TODO: Use Result\r\n  if (!response) return;\r\n  return closeResponse(response);\r\n}\r\n\r\nasync function closeResponse(response) {\r\n  const closeResponseTask = addTask(\r\n    taskDefs.closeResponse(response.Title.Value())\r\n  );\r\n\r\n  response.markClosed();\r\n  await appContext.AuditResponses.UpdateEntity(\r\n    response,\r\n    AuditResponse.Views.IAUpdateClosed\r\n  );\r\n\r\n  finishTask(closeResponseTask);\r\n}\r\n\r\nexport async function uploadResponseDocFile(response, file) {\r\n  const uploadResponseDocTask = addTask(taskDefs.uploadResponseDoc(file.name));\r\n  const fileMetadata = {\r\n    Title: file.name,\r\n    ReqNumId: response.ReqNum.Value().ID,\r\n    ResIDId: response.ID,\r\n  };\r\n\r\n  await appContext.AuditResponseDocs.UploadFileToFolderAndUpdateMetadata(\r\n    file,\r\n    file.name,\r\n    response.Title.Value(),\r\n    fileMetadata,\r\n    ({ currentBlock, totalBlocks }) =>\r\n      uploadResponseDocTask.updateProgress({\r\n        percentDone: currentBlock / totalBlocks,\r\n      })\r\n  );\r\n  finishTask(uploadResponseDocTask);\r\n}\r\n\r\nfunction getResponseTitle(request, response) {\r\n  return `${request.ReqNum.Value()}-${\r\n    response.ActionOffice.Value()?.Title\r\n  }-${response.SampleNumber.Value()}`;\r\n}\r\n\r\n/* Begin Unreferenced Service Rewrites */\r\n\r\nexport function getNewResponseDocTitle(request, response, responseDoc) {\r\n  const oldResponseDocTitle = responseDoc.FileName.Value();\r\n\r\n  const createdDate = responseDoc.Created.Value().format(\"yyyyMMddTHHmmss\");\r\n  const responseName = response.Title.Value();\r\n  const sensitivity = request.Sensitivity.Value();\r\n\r\n  let newResponseDocTitle =\r\n    responseName + \"_\" + createdDate + \"_\" + Math.ceil(Math.random() * 10000);\r\n\r\n  if (sensitivity && sensitivity != \"None\")\r\n    newResponseDocTitle += \"_\" + sensitivity;\r\n\r\n  var docName = oldResponseDocTitle.substring(\r\n    0,\r\n    oldResponseDocTitle.lastIndexOf(\".\")\r\n  );\r\n  var docExt = oldResponseDocTitle.replace(docName, \"\");\r\n  newResponseDocTitle += docExt;\r\n\r\n  // Only use the new filename if it's not already encoded\r\n  if (\r\n    !oldResponseDocTitle.includes(responseName) ||\r\n    !oldResponseDocTitle.includes(createdDate) ||\r\n    (sensitivity && !oldResponseDocTitle.includes(sensitivity))\r\n  )\r\n    return newResponseDocTitle;\r\n\r\n  return oldResponseDocTitle;\r\n}\r\n", "import { directRegisterComponent } from \"../../infrastructure/index.js\";\r\nimport { modalDialogTemplate } from \"./ModalDialogTemplate.js\";\r\n\r\nconst componentName = \"modal-dialog-component\";\r\n\r\nexport const currentDialogs = ko.observableArray();\r\n\r\nexport let toggle;\r\n\r\nexport function showModalDialog(dialogOptions) {\r\n  currentDialogs.push(dialogOptions);\r\n}\r\n\r\nclass ModalDialogModule {\r\n  constructor(dialogOpts) {\r\n    this.dialogOpts = dialogOpts;\r\n    this.title = dialogOpts.title;\r\n    this.dialogReturnValueCallback = dialogOpts.dialogReturnValueCallback;\r\n\r\n    this.form = dialogOpts.form;\r\n\r\n    if (this.form?.onComplete) {\r\n      alert(\"Pass the form onComplete to the modal dialog!\");\r\n      return;\r\n    }\r\n    this.form.onComplete = this.close.bind(this);\r\n\r\n    toggle = this.toggle;\r\n  }\r\n\r\n  toggle = (show = null) => {\r\n    if (show == null) show = !this.dlgElement.hasAttribute(\"open\");\r\n\r\n    show ? this.showModal() : this.hide();\r\n  };\r\n\r\n  showModal = () => {\r\n    this.dlgElement.showModal();\r\n    this.dlgElement.classList.add(\"active\");\r\n  };\r\n\r\n  clickClose = () => {\r\n    this.close(false);\r\n  };\r\n\r\n  hide = () => {\r\n    this.dlgElement.close();\r\n    this.dlgElement.classList.remove(\"active\");\r\n  };\r\n\r\n  close(result) {\r\n    this.dlgElement.close();\r\n    this.dlgElement.classList.remove(\"active\");\r\n    if (this.dialogReturnValueCallback) this.dialogReturnValueCallback(result);\r\n    currentDialogs.remove(this.dialogOpts);\r\n  }\r\n\r\n  _id;\r\n  getUniqueId = () => {\r\n    if (!this._id) {\r\n      this._id = \"field-\" + Math.floor(Math.random() * 10000);\r\n    }\r\n    return this._id;\r\n  };\r\n\r\n  koDescendantsComplete = function (node) {\r\n    this.dlgElement = node.querySelector(\"dialog\");\r\n    dragElement(this.dlgElement);\r\n    resizeDialog(this.dlgElement);\r\n    this.showModal();\r\n  };\r\n}\r\n\r\ndirectRegisterComponent(componentName, {\r\n  template: modalDialogTemplate,\r\n  viewModel: ModalDialogModule,\r\n});\r\n\r\nfunction resizeDialog(elmnt) {\r\n  elmnt.style.width = \"550px\";\r\n  elmnt.style.height = \"\";\r\n  elmnt.style.top = \"125px\";\r\n  elmnt.style.left = (window.GetViewportWidth() - 550) / 2 + \"px\";\r\n}\r\n\r\n// TODO: this should be in a utility class or something\r\nfunction dragElement(elmnt) {\r\n  var pos1 = 0,\r\n    pos2 = 0,\r\n    pos3 = 0,\r\n    pos4 = 0;\r\n\r\n  // elmnt.style.top = elmnt.style.top\r\n\r\n  const dragger = elmnt.querySelector(\".grabber\");\r\n  if (dragger) {\r\n    // if present, the header is where you move the DIV from:\r\n    dragger.onmousedown = dragMouseDown;\r\n  } else {\r\n    // otherwise, move the DIV from anywhere inside the DIV:\r\n    elmnt.onmousedown = dragMouseDown;\r\n  }\r\n\r\n  function dragMouseDown(e) {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // get the mouse cursor position at startup:\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    document.onmouseup = closeDragElement;\r\n    // call a function whenever the cursor moves:\r\n    document.onmousemove = elementDrag;\r\n  }\r\n\r\n  function elementDrag(e) {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // calculate the new cursor position:\r\n    pos1 = pos3 - e.clientX;\r\n    pos2 = pos4 - e.clientY;\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    // set the element's new position:\r\n    elmnt.style.top = elmnt.offsetTop - pos2 + \"px\";\r\n    elmnt.style.left = elmnt.offsetLeft - pos1 + \"px\";\r\n  }\r\n\r\n  function closeDragElement() {\r\n    // stop moving when mouse button is released:\r\n    document.onmouseup = null;\r\n    document.onmousemove = null;\r\n  }\r\n}\r\n", "import { html } from \"../../infrastructure/index.js\";\r\n\r\nexport const modalDialogTemplate = html`\r\n  <dialog\r\n    id=\"\"\r\n    class=\"card bg-dark draggable modal-dialog\"\r\n    data-bind=\"attr: {id: getUniqueId() }\"\r\n  >\r\n    <!-- Can't use 'with: currentDialog' since we need to register our \r\n      javascript event listeners for grabbing and resizing -->\r\n    <div class=\"card-header bg-dark grabber\">\r\n      <h2 class=\"card-title\" data-bind=\"text: title\"></h2>\r\n      <h2 class=\"card-title\">\r\n        <i class=\"fa-solid fa-xmark pointer\" data-bind=\"click: clickClose\"></i>\r\n      </h2>\r\n    </div>\r\n    <div class=\"dimmer\" data-bind=\"css: {'active': form.saving }\">\r\n      <span class=\"loader\"></span>\r\n      <ul class=\"\" data-bind=\"foreach: $root.blockingTasks\">\r\n        <li data-bind=\"text: msg + '...'\"></li>\r\n      </ul>\r\n    </div>\r\n    <div\r\n      class=\"card-body\"\r\n      data-bind=\"component: { name: form.componentName, params: form.params }\"\r\n    ></div>\r\n    <div class=\"card-actions\">\r\n      <button\r\n        style\r\n        type=\"button\"\r\n        class=\"btn btn-danger\"\r\n        data-bind=\"click: clickClose\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </dialog>\r\n`;\r\n", "export * from \"./approvals_service.js\";\r\nexport * from \"./audit_email_service.js\";\r\nexport * from \"./audit_request_service.js\";\r\nexport * from \"./audit_response_service.js\";\r\nexport * from \"./coversheet_manager.js\";\r\nexport * from \"./people_manager.js\";\r\nexport * from \"./permission_manager.js\";\r\nexport * from \"./tasks.js\";\r\n", "import { executeQuery } from \"../sal/infrastructure/index.js\";\r\n\r\nexport async function getAllItems(listTitle, fields = null) {\r\n  let listItemsResults = [];\r\n  let listItems;\r\n\r\n  const currCtx = new SP.ClientContext.get_current();\r\n  const web = currCtx.get_web();\r\n\r\n  const list = web.get_lists().getByTitle(listTitle);\r\n\r\n  const viewFields = viewFieldsStringBuilder(fields);\r\n\r\n  const camlQuery = new SP.CamlQuery();\r\n  camlQuery.set_viewXml(\r\n    `<View Scope=\"RecursiveAll\"><Query></Query><RowLimit>5000</RowLimit>${viewFields}</View>`\r\n  );\r\n\r\n  let position = new SP.ListItemCollectionPosition();\r\n  position.set_pagingInfo(\"Paged=TRUE\");\r\n\r\n  while (position != null) {\r\n    console.log(\"Legacy Helper - getAllItems\", listTitle, position);\r\n    camlQuery.set_listItemCollectionPosition(position);\r\n\r\n    listItems = list.getItems(camlQuery);\r\n\r\n    currCtx.load(listItems);\r\n\r\n    await executeQuery(currCtx).catch((sender, args) => {\r\n      console.warn(sender);\r\n    });\r\n\r\n    const listEnumerator = listItems.getEnumerator();\r\n    while (listEnumerator.moveNext()) {\r\n      listItemsResults.push(listEnumerator.get_current());\r\n    }\r\n\r\n    position = listItems.get_listItemCollectionPosition();\r\n  }\r\n\r\n  return listItemsResults;\r\n}\r\n\r\nfunction viewFieldsStringBuilder(fields) {\r\n  if (!fields) return \"\";\r\n  return `\r\n  <ViewFields>${fields.map(\r\n    (field) => `<FieldRef Name=\"${field}\"></FieldRef>`\r\n  )}</ViewFields>\r\n  `;\r\n}\r\n"],
  "mappings": "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;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA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",
  "names": ["init_entities", "ValidationError", "ValidationError", "html", "html", "editTemplate", "viewTemplate", "html", "editTemplate", "html", "editTemplate", "html", "editTemplate", "viewTemplate", "html", "editTemplate", "html", "data", "editTemplate", "html", "editTemplate", "viewTemplate", "html", "editTemplate", "html", "init_fields", "init_fields", "init_fields", "init_fields", "reject", "entity", "People", "People", "module", "html", "reject", "group", "data", "currCtx", "web", "self", "id", "bindings", "oListItem", "folderArr", "idx", "showModal", "args", "siteGroups", "oRoleDefinition", "oGroup", "init_fields", "People", "init_fields", "init_fields", "init_fields", "init_fields", "init_fields", "init_entities", "init_fields", "request", "init_fields", "ValidationError", "init_fields", "id", "init_fields", "viewer", "html", "init_fields", "People", "init_fields", "init_entities", "request", "appContext", "init_fields", "init_entities", "request", "init_fields", "request", "init_entities", "set", "id", "reject", "init_sal", "init_entities", "init_sal", "id", "oGroup", "currentUser", "onUpdateAOPermsSucceeded", "onUpdateAOPermsFailed", "roleDefBindingCollRestrictedContribute", "data", "html", "id", "init_entities", "init_entities", "init_entities", "init_entities", "init_entities", "html", "Audit", "statusId", "id", "data", "oResponse", "z", "oResponseDoc", "notifyId", "sender", "args", "InitReport"]
}
