{
  "version": 3,
  "sources": ["../../../src/pages/qa_db/QA_DB_Template.js", "../../../src/common/router.js", "../../../src/components/tabs/tabs_module.js", "../../../src/sal/entities/People.js", "../../../src/sal/components/fields/BaseFieldModule.js", "../../../src/sal/components/fields/BlobModule.js", "../../../src/sal/components/fields/CheckboxModule.js", "../../../src/sal/components/fields/DateModule.js", "../../../src/sal/components/fields/LookupModule.js", "../../../src/sal/components/fields/PeopleModule.js", "../../../src/sal/components/fields/SearchSelectModule.js", "../../../src/sal/components/fields/SelectModule.js", "../../../src/sal/components/fields/TextAreaModule.js", "../../../src/sal/components/fields/TextModule.js", "../../../src/sal/infrastructure/register_components.js", "../../../src/sal/infrastructure/sal.js", "../../../src/env.js", "../../../src/sal/infrastructure/knockout_extensions.js", "../../../src/common/utilities.js", "../../../src/pages/qa_db/qa_db.js"],
  "sourcesContent": ["\uFEFFconst html = String.raw;\r\n\r\nexport const qaDbTemplate = html`\r\n  <link\r\n    rel=\"stylesheet\"\r\n    type=\"text/css\"\r\n    href=\"/sites/CGFS/Style Library/apps/audit/lib/jquery-ui-1.13.2/jquery-ui.theme.min.css\"\r\n  />\r\n  <link\r\n    rel=\"stylesheet\"\r\n    type=\"text/css\"\r\n    href=\"/sites/CGFS/Style Library/apps/audit/lib/tablesorter-2.31.3/css/theme.default.min.css\"\r\n  />\r\n\r\n  <iframe id=\"CsvExpFrame\" style=\"display: none\"></iframe>\r\n\r\n  <div\r\n    id=\"divCounter\"\r\n    style=\"display: none\"\r\n    title=\"used to auto refresh the page\"\r\n  >\r\n    1200\r\n  </div>\r\n\r\n  <div class=\"audit\">\r\n    <div id=\"divLoading\" style=\"color: green; padding-bottom: 10px\">\r\n      Please Wait... Loading\r\n      <span\r\n        data-bind=\"visible: arrResponses().length > 0 && debugMode, text: arrResponses().length\"\r\n      ></span>\r\n    </div>\r\n\r\n    <div class=\"audit-body\">\r\n      <div class=\"reports-container\">\r\n        <div id=\"divRefresh\" style=\"display: none\">\r\n          <div>\r\n            <a\r\n              title=\"Refresh this page\"\r\n              href=\"javascript:void(0)\"\r\n              onclick=\"Audit.Common.Utilities.Refresh()\"\r\n              ><span class=\"ui-icon ui-icon-refresh\"></span>Refresh</a\r\n            >\r\n          </div>\r\n          <div style=\"padding-bottom: 10px\">\r\n            <a\r\n              title=\"View User Manual\"\r\n              href=\"javascript:void(0)\"\r\n              onclick=\"Audit.Common.Utilities.ViewUserManuals('QA User Manual')\"\r\n              ><span class=\"ui-icon ui-icon-help\"></span>User Manual</a\r\n            >\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <!-- ko using: tabs -->\r\n          <ul class=\"ui-tabs-nav\" data-bind=\"foreach: tabOpts\">\r\n            <li\r\n              data-bind=\"text: linkText, \r\n        click: $parent.clickTabLink, \r\n        css: {active: $parent.isSelected($data)}\"\r\n            ></li>\r\n          </ul>\r\n          <!-- ko foreach: tabOpts -->\r\n          <div\r\n            data-bind=\"template: {\r\n              name: template.id,\r\n              data: template.data\r\n            },\r\n            visible: $parent.isSelected($data)\"\r\n          ></div>\r\n          <!-- /ko -->\r\n          <!-- /ko -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <script id=\"responseStatusReportTemplate\" type=\"text/html\">\r\n    <div id=\"tabs-0\">\r\n      <div\r\n        id=\"lblStatusReportResponsesMsg\"\r\n        style=\"padding-top: 5px; color: green\"\r\n      >\r\n        <span\r\n          data-bind=\"css: (cntPendingReview() > 0 ? 'ui-icon ui-icon-alert' : 'ui-icon ui-icon-circle-check')\"\r\n        ></span\r\n        >There are <span data-bind=\"text: cntPendingReview\"></span> Responses\r\n        pending your review\r\n      </div>\r\n      <div\r\n        id=\"divButtons\"\r\n        style=\"padding-top: 3px\"\r\n        data-bind=\"visible: arrResponses().length > 0\"\r\n      >\r\n        <a\r\n          id=\"btnPrint1\"\r\n          title=\"Click here to Print\"\r\n          href=\"javascript:void(0)\"\r\n          class=\"hideOnPrint\"\r\n          ><span class=\"ui-icon ui-icon-print\">Print</span></a\r\n        >\r\n        <a class=\"export1 hideOnPrint\" title=\"Export to CSV\" href=\"#\"\r\n          ><span class=\"ui-icon ui-icon-disk\">Export to CSV</span></a\r\n        >\r\n        <a\r\n          id=\"btnViewAll\"\r\n          title=\"View All\"\r\n          href=\"javascript:void(0)\"\r\n          data-bind=\"visible: arrFilteredResponsesCount() < arrResponses().length && doSort, click: ClearFiltersResponseTab\"\r\n          ><span class=\"ui-icon ui-icon-circle-zoomout\"></span>View All\r\n          Responses</a\r\n        >\r\n      </div>\r\n      <div id=\"divStatusReportRespones\">\r\n        <table\r\n          id=\"tblStatusReportResponses\"\r\n          class=\"tablesorter report\"\r\n          data-bind=\"visible: arrResponses().length > 0\"\r\n        >\r\n          <thead>\r\n            <tr\r\n              valign=\"top\"\r\n              class=\"rowFilters\"\r\n              data-bind=\"visible: arrResponses().length > 0\"\r\n            >\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                <select\r\n                  id=\"ddlResponseRequestID\"\r\n                  data-bind=\"options: $root.ddOptionsResponseTabRequestID, value: filterResponseTabRequestID, optionsCaption: '-Select-'\"\r\n                ></select>\r\n              </th>\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\"></th>\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                <select\r\n                  id=\"ddlResponseRequestStatus\"\r\n                  data-bind=\"options: $root.ddOptionsResponseTabRequestStatus, value: filterResponseTabRequestStatus, optionsCaption: '-Select-'\"\r\n                ></select>\r\n              </th>\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                <select\r\n                  id=\"ddlResponseRequestInternalDueDate\"\r\n                  data-bind=\"options: $root.ddOptionsResponseTabRequestInternalDueDate, value: filterResponseTabRequestIntDueDate, optionsCaption: '-Select-'\"\r\n                ></select>\r\n              </th>\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                <select\r\n                  id=\"ddlResponseSampleNum\"\r\n                  data-bind=\"options: $root.ddOptionsResponseTabRequestSample, value: filterResponseTabSampleNum, optionsCaption: '-Select-'\"\r\n                ></select>\r\n              </th>\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                <select\r\n                  id=\"ddlResponseName\"\r\n                  data-bind=\"options: $root.ddOptionsResponseTabResponseTitle, value: filterResponseTabResponseName, optionsCaption: '-Select-'\"\r\n                ></select>\r\n              </th>\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                <select\r\n                  id=\"ddlResponseStatus\"\r\n                  data-bind=\"options: $root.ddOptionsResponseTabResponseStatus, value: filterResponseTabResponseStatus, optionsCaption: '-Select-'\"\r\n                ></select>\r\n              </th>\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\"></th>\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\"></th>\r\n            </tr>\r\n            <tr valign=\"top\">\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\">Request #</th>\r\n              <th class=\"sorter-false\" nowrap=\"nowrap\">Subject</th>\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\">Request Status</th>\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\">Due Date</th>\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\">Sample #</th>\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\">Response Name</th>\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\">Status</th>\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\"># of Documents</th>\r\n              <th class=\"sorter-true\" nowrap=\"nowrap\">Modified</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody id=\"fbody\">\r\n            <!-- ko foreach: arrResponses -->\r\n            <tr\r\n              class=\"sr-response-item\"\r\n              data-bind=\"css: { 'highlighted': highlight},\r\n            visible: $root.filteredResponses().includes($data)\"\r\n            >\r\n              <td\r\n                class=\"sr-response-requestNum\"\r\n                data-bind=\"text: reqNumber\"\r\n              ></td>\r\n              <td\r\n                class=\"sr-response-requestSubject\"\r\n                data-bind=\"text: requestSubject\"\r\n              ></td>\r\n              <td\r\n                class=\"sr-response-requestStatus\"\r\n                data-bind=\"text: requestStatus \"\r\n              ></td>\r\n              <td\r\n                class=\"sr-response-internalDueDate\"\r\n                data-bind=\"text: internalDueDate\"\r\n              ></td>\r\n              <td class=\"sr-response-sample\" data-bind=\"text: sample\"></td>\r\n              <td class=\"sr-response-title\">\r\n                <a\r\n                  href=\"javascript:void(0);\"\r\n                  title=\"Go to Response Details\"\r\n                  data-bind=\"text: title,\r\n                click: () => Audit.QAReport.Report.GoToResponse($data.title)\"\r\n                ></a>\r\n              </td>\r\n              <td class=\"sr-response-status\" data-bind=\"text: status\"></td>\r\n              <td class=\"sr-response-docCount\" data-bind=\"text: docCount\"></td>\r\n              <td class=\"sr-response-modified\" data-bind=\"text: modified\"></td>\r\n            </tr>\r\n            <!-- /ko -->\r\n          </tbody>\r\n          <tfoot class=\"footer\">\r\n            <tr>\r\n              <th colspan=\"9\">\r\n                Displaying\r\n                <span\r\n                  id=\"spanResponsesDisplayedTotal\"\r\n                  style=\"color: green\"\r\n                  data-bind=\"text: arrFilteredResponsesCount()\"\r\n                  >0</span\r\n                >\r\n                out of\r\n                <span\r\n                  id=\"spanResponsesTotal\"\r\n                  style=\"color: green\"\r\n                  data-bind=\"text: arrResponses().length\"\r\n                  >0</span\r\n                >\r\n                Responses\r\n              </th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </script>\r\n\r\n  <script id=\"responseDetailTemplate\" type=\"text/html\">\r\n    <div id=\"tabs-1\">\r\n      <div style=\"padding-bottom: 15px\">\r\n        <table>\r\n          <tr>\r\n            <td><span>Responses Pending Action:</span></td>\r\n            <td>\r\n              <select\r\n                id=\"ddlResponsesOpen\"\r\n                data-bind=\"options: $root.ddOptionsResponseInfoTabResponseNameOpen2, value: filterResponseInfoTabResponseNameOpen2, optionsCaption: '-Select-'\"\r\n              ></select>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td><span>Other Responses:</span></td>\r\n            <td>\r\n              <select\r\n                id=\"ddlResponsesProcessed\"\r\n                data-bind=\"options: $root.ddOptionsResponseInfoTabResponseNameProcessed2, value: filterResponseInfoTabResponseNameProcessed2, optionsCaption: '-Select-'\"\r\n              ></select>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n      <div class=\"response-detail-view\">\r\n        <div\r\n          id=\"divResponseInfo\"\r\n          class=\"audit-form response-info-form\"\r\n          data-bind=\"with: currentResponse\"\r\n        >\r\n          <div class=\"form-header\">\r\n            <h3 class=\"uppercase form-title\">\r\n              AUDIT RESPONSE DETAILS\r\n              <div class=\"fw-semibold\" data-bind=\"text: title\"></div>\r\n            </h3>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <dl>\r\n              <dt>Request #</dt>\r\n              <dd>\r\n                <span id=\"requestInfoNum\" data-bind=\"text: number\"></span>\r\n              </dd>\r\n              <dt>Request Status</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"requestInfoStatus\"\r\n                  data-bind=\"text: request.status, style: { color:   request.status == 'Closed' ? 'red' : 'green' }\"\r\n                ></span>\r\n                <span\r\n                  data-bind=\"visible: request.status == 'Closed', style: { color: 'red'}\"\r\n                  >on\r\n                  <span\r\n                    data-bind=\"text: closedDate, style: { color: 'red'}\"\r\n                  ></span>\r\n                </span>\r\n              </dd>\r\n              <dt>Subject</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"requestInfoSub\"\r\n                  data-bind=\"text: request.subject\"\r\n                ></span>\r\n              </dd>\r\n              <dt>Due Date</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"requestInfoInternalDueDate\"\r\n                  data-bind=\"text: request.internalDueDate\"\r\n                ></span>\r\n              </dd>\r\n              <dt>Sample?</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"requestInfoSample\"\r\n                  data-bind=\"text: request.sample, css: request.sample == true ? 'ui-icon ui-icon-check' : 'ui-icon ui-icon-close'\"\r\n                ></span>\r\n              </dd>\r\n              <dt>Response</dt>\r\n              <dd>\r\n                <span id=\"responseInfoName\" data-bind=\"text: title\"></span>\r\n              </dd>\r\n            </dl>\r\n            <dl>\r\n              <dt>Response Status</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"responseInfoStatus\"\r\n                  data-bind=\"style: { color:  resStatus == '7-Closed' ? 'red' : 'green' }\"\r\n                >\r\n                  <span data-bind=\"text: resStatus\"></span\r\n                  ><span data-bind=\"visible: resStatus == '7-Closed'\">\r\n                    on <span data-bind=\"text: closedDate \"></span> by\r\n                    <span data-bind=\"text: closedBy\"></span>\r\n                  </span>\r\n                </span>\r\n              </dd>\r\n\r\n              <dt>Sample #</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"responseInfoSampleNum\"\r\n                  data-bind=\"text: sample\"\r\n                ></span>\r\n              </dd>\r\n\r\n              <dt>Action Office</dt>\r\n              <dd>\r\n                <span id=\"responseInfoAO\" data-bind=\"text: actionOffice\"></span>\r\n              </dd>\r\n\r\n              <dt>Related Audit</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"requestInfoRelatedAudit\"\r\n                  data-bind=\"text: request.relatedAudit\"\r\n                ></span>\r\n              </dd>\r\n            </dl>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <dl>\r\n              <dt>Action Items</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"requestInfoActionItems\"\r\n                  data-bind=\"html: request.actionItems\"\r\n                ></span>\r\n              </dd>\r\n              <dt>Comments</dt>\r\n              <dd>\r\n                <span\r\n                  id=\"responseInfoComments\"\r\n                  data-bind=\"html: comments\"\r\n                ></span>\r\n              </dd>\r\n            </dl>\r\n          </div>\r\n          <div class=\"form-row\">\r\n            <div class=\"emphasized-section\">\r\n              <div class=\"fw-semibold\">Internal Status Comments</div>\r\n              <!-- ko if: typeof(request.internalStatus) != 'undefined' -->\r\n              <div\r\n                class=\"commentChain\"\r\n                data-bind=\"with: request.internalStatus\"\r\n              >\r\n                <!-- ko if: showHistoryBool -->\r\n                <!-- ko foreach: comments -->\r\n                <div class=\"comment\">\r\n                  <div class=\"text\" data-bind=\"text: text\"></div>\r\n                  <span\r\n                    data-bind=\"text: author + ' @ ' + timestamp.toLocaleString()\"\r\n                  ></span>\r\n                </div>\r\n                <!-- /ko -->\r\n                <!-- /ko -->\r\n                <!-- ko ifnot: showHistoryBool -->\r\n                <div\r\n                  class=\"comment\"\r\n                  data-bind=\"with: comments()[comments().length - 1]\"\r\n                >\r\n                  <div class=\"text\" data-bind=\"text: text\"></div>\r\n                  <span\r\n                    data-bind=\"text: author + ' @ ' + timestamp.toLocaleString()\"\r\n                  ></span>\r\n                </div>\r\n                <!-- /ko -->\r\n                <a\r\n                  title=\"Show hidden comments\"\r\n                  href=\"javascript:void(0)\"\r\n                  data-bind=\"click: toggleShowHistory\"\r\n                >\r\n                  <span class=\"ui-icon ui-icon-comment\"></span>\r\n                  Toggle Comment History (<span\r\n                    data-bind=\"text: comments().length\"\r\n                  ></span>\r\n                  Total)\r\n                </a>\r\n              </div>\r\n              <!-- /ko -->\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div id=\"divCoverSheets\" data-bind=\"visible: currentResponse\">\r\n            <fieldset>\r\n              <legend>Cover Sheets/Supplemental Documents</legend>\r\n\r\n              <div\r\n                id=\"divEmptyCoversheetsMsg\"\r\n                style=\"border: 0px !important; font-style: italic\"\r\n                data-bind=\"visible: arrCoverSheets().length <= 0\"\r\n              >\r\n                There are 0 cover sheets or supplemental documents\r\n              </div>\r\n              <table\r\n                id=\"tblCoverSheets\"\r\n                class=\"tablesorter report\"\r\n                data-bind=\"visible: arrCoverSheets().length > 0\"\r\n              >\r\n                <thead>\r\n                  <tr valign=\"top\">\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Name</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody data-bind=\"foreach: arrCoverSheets\">\r\n                  <tr class=\"coversheet-item\">\r\n                    <td class=\"coversheet-title\" title=\"Click to Download\">\r\n                      <a\r\n                        data-bind=\"downloadLink: '../_layouts/download.aspx?SourceUrl=:folder/:fileName'\"\r\n                        ><span data-bind=\"text: fileName\"></span\r\n                      ></a>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr valign=\"top\">\r\n                    <th nowrap=\"nowrap\">\r\n                      Total:\r\n                      <span\r\n                        id=\"tblCoverSheetsTotal\"\r\n                        data-bind=\"text: arrCoverSheets().length\"\r\n                        >0</span\r\n                      >\r\n                    </th>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n            </fieldset>\r\n          </div>\r\n\r\n          <div>\r\n            <fieldset\r\n              class=\"divCloseResponse\"\r\n              style=\"border-color: GreenYellow\"\r\n              data-bind=\"visible: currentResponse && showCloseResponse\"\r\n            >\r\n              <legend style=\"font-weight: bold; font-size: 10pt\">Action</legend>\r\n              <a\r\n                class=\"btnCloseResponse\"\r\n                href=\"javascript:void(0)\"\r\n                title=\"Click to Close Response\"\r\n                style=\"font-size: 11pt\"\r\n                data-bind=\"click: ClickCloseResponse\"\r\n                ><span class=\"ui-icon ui-icon-gear\"></span>Close Response</a\r\n              >\r\n            </fieldset>\r\n            <fieldset\r\n              class=\"divReturnToCGFS\"\r\n              style=\"border-color: GreenYellow\"\r\n              data-bind=\"visible: currentResponse && showReturnToCGFS\"\r\n            >\r\n              <legend style=\"font-weight: bold; font-size: 10pt\">Action</legend>\r\n              <a\r\n                class=\"btnReturnToCGFS\"\r\n                href=\"javascript:void(0)\"\r\n                title=\"Click to Return to CGFS\"\r\n                data-bind=\"click: ClickReturnToCGFS\"\r\n                ><span class=\"ui-icon ui-icon-gear\"></span>Return to CGFS</a\r\n              >\r\n            </fieldset>\r\n            <fieldset\r\n              class=\"divBulkApprove\"\r\n              data-bind=\"visible: currentResponse && showBulkApprove\"\r\n            >\r\n              <legend>Action</legend>\r\n              <a\r\n                class=\"btnApproveAll\"\r\n                href=\"javascript:void(0)\"\r\n                title=\"Click to Approve Remaining Documents\"\r\n                data-bind=\"click: ClickBulkApprove\"\r\n                ><span class=\"ui-icon ui-icon-circle-check\"></span>Approve All\r\n                Documents</a\r\n              >\r\n            </fieldset>\r\n          </div>\r\n\r\n          <div id=\"divResponseDocs\" data-bind=\"visible: currentResponse\">\r\n            <fieldset>\r\n              <legend>Response Documents</legend>\r\n              <div\r\n                id=\"divEmptyResponseDocsMsg\"\r\n                style=\"border: 0px !important; font-style: italic\"\r\n                data-bind=\"visible: cntResponseDocs() == 0\"\r\n              >\r\n                There are 0 response documents\r\n              </div>\r\n              <table\r\n                id=\"tblResponseDocs\"\r\n                class=\"tablesorter report\"\r\n                data-bind=\"visible: cntResponseDocs() > 0\"\r\n              >\r\n                <thead>\r\n                  <tr valign=\"top\">\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Type</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Name</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Receipt Date</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">File Size</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                      Status\r\n                      <span\r\n                        ><a\r\n                          title=\"View Help\"\r\n                          href=\"javascript:void(0)\"\r\n                          style=\"color: #0072bc\"\r\n                          data-bind=\"click: ClickHelpResponseDocs\"\r\n                          ><span class=\"ui-icon ui-icon-help\"></span></a\r\n                      ></span>\r\n                    </th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Reason</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                      Action\r\n                      <span\r\n                        ><a\r\n                          title=\"View Help\"\r\n                          href=\"javascript:void(0)\"\r\n                          style=\"color: #0072bc\"\r\n                          data-bind=\"click: ClickHelpResponseDocs\"\r\n                          ><span class=\"ui-icon ui-icon-help\"></span></a\r\n                      ></span>\r\n                    </th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Modified</th>\r\n                    <th class=\"sorter-false\" nowrap=\"nowrap\">Modified By</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody data-bind=\"with: arrResponseDocs\">\r\n                  <tr class=\"requestInfo-response-doc\">\r\n                    <td colspan=\"10\">\r\n                      <img\r\n                        style=\"background-color: transparent\"\r\n                        src=\"/_layouts/images/minus.gif\"\r\n                        title=\"Expand/Collapse\"\r\n                        data-bind=\"toggleClick: $data, toggleClass: 'collapsed', containerType: 'doc', classContainer: '.requestInfo-response-doc'\"\r\n                      /><span data-bind=\"text: responseTitle\"></span>\r\n                    </td>\r\n                  </tr>\r\n\r\n                  <!-- ko foreach: responseDocs-->\r\n\r\n                  <tr\r\n                    class=\"requestInfo-response-doc-item\"\r\n                    data-bind=\"style: styleTag\"\r\n                  >\r\n                    <td>\r\n                      <img\r\n                        data-bind=\"attr:{ src: $parent.siteUrl + '/_layouts/images/' + docIcon}\"\r\n                      />\r\n                    </td>\r\n                    <td\r\n                      class=\"requestInfo-response-doc-title\"\r\n                      title=\"Click to Download\"\r\n                    >\r\n                      <a\r\n                        data-bind=\"downloadLink: '../_layouts/download.aspx?SourceUrl=:folder/:fileName'\"\r\n                        ><span data-bind=\"text: fileName\"></span\r\n                      ></a>\r\n                    </td>\r\n                    <td nowrap data-bind=\"text: receiptDate\"></td>\r\n                    <td nowrap data-bind=\"text: fileSize\"></td>\r\n                    <td nowrap data-bind=\"text: documentStatus\"></td>\r\n                    <td data-bind=\"html: rejectReason\"></td>\r\n                    <td nowrap>\r\n                      <span\r\n                        data-bind=\"visible: ($parent.responseStatus == '4-Approved for QA' || $parent.responseStatus == '6-Reposted After Rejection') && documentStatus == 'Sent to QA'\"\r\n                      >\r\n                        <a\r\n                          title=\"Approve this Document\"\r\n                          href=\"javascript:void(0)\"\r\n                          data-bind=\"click: $root.ClickApproveResponseDoc\"\r\n                          ><span class=\"ui-icon ui-icon-circle-check\"\r\n                            >Approve Response Doc</span\r\n                          ></a\r\n                        >\r\n                        <a\r\n                          title=\"Reject this Document\"\r\n                          href=\"javascript:void(0)\"\r\n                          data-bind=\"click: $root.ClickRejectResponseDoc\"\r\n                          ><span class=\"ui-icon ui-icon-circle-close\"\r\n                            >Reject Response Doc</span\r\n                          ></a\r\n                        >\r\n                      </span>\r\n                    </td>\r\n                    <td\r\n                      class=\"requestInfo-response-doc-modified\"\r\n                      data-bind=\"text: modifiedDate\"\r\n                    ></td>\r\n                    <td\r\n                      class=\"requestInfo-response-doc-modifiedBy\"\r\n                      data-bind=\"text: modifiedBy\"\r\n                    ></td>\r\n                  </tr>\r\n\r\n                  <!-- /ko -->\r\n                </tbody>\r\n                <tfoot>\r\n                  <tr valign=\"top\">\r\n                    <th colspan=\"9\" nowrap=\"nowrap\">\r\n                      Total:\r\n                      <span\r\n                        id=\"tblResponseDocsTotal\"\r\n                        data-bind=\"text: cntResponseDocs\"\r\n                        >0</span\r\n                      >\r\n                    </th>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n            </fieldset>\r\n          </div>\r\n\r\n          <div\r\n            class=\"divReturnToCGFS\"\r\n            data-bind=\"visible: currentResponse && showReturnToCGFS\"\r\n          >\r\n            <fieldset style=\"border-color: GreenYellow\">\r\n              <legend style=\"font-weight: bold; font-size: 10pt\">Action</legend>\r\n              <span class=\"ui-icon ui-icon-gear\"></span\r\n              ><a\r\n                class=\"btnReturnToCGFS\"\r\n                href=\"javascript:void(0)\"\r\n                title=\"Click to Return to CGFS\"\r\n                data-bind=\"click: ClickReturnToCGFS\"\r\n                >Return to CGFS</a\r\n              >\r\n            </fieldset>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </script>\r\n\r\n  <div id=\"divTest\"></div>\r\n`;\r\n", "const state = {};\r\n\r\nwindow.history.replaceState({}, \"\", document.location.href);\r\nexport function setUrlParam(param, newVal) {\r\n  // No need to reset the param if it hasn't changed\r\n  if (getUrlParam(param) == newVal) return;\r\n\r\n  const search = window.location.search;\r\n  //var urlParams = new URLSearchParams(queryString);\r\n\r\n  const regex = new RegExp(\"([?;&])\" + param + \"[^&;]*[;&]?\");\r\n  const query = search.replace(regex, \"$1\").replace(/&$/, \"\");\r\n\r\n  const urlParams =\r\n    (query.length > 2 ? query + \"&\" : \"?\") +\r\n    (newVal ? param + \"=\" + newVal : \"\");\r\n\r\n  state[param] = newVal;\r\n  window.history.pushState(state, \"\", urlParams.toString());\r\n}\r\n\r\nexport function getUrlParam(param) {\r\n  const results = new RegExp(\"[?&]\" + param + \"=([^&#]*)\").exec(\r\n    window.location.href\r\n  );\r\n  if (results == null) {\r\n    return null;\r\n  } else {\r\n    return decodeURI(results[1]) || 0;\r\n  }\r\n}\r\n", "import { setUrlParam } from \"../../common/router.js\";\r\n\r\n// const urlParam = \"Tab\";\r\n\r\nexport class TabsModule {\r\n  constructor(tabOpts, urlParam = \"Tab\") {\r\n    this.urlParam = urlParam;\r\n    ko.utils.arrayPushAll(this.tabOpts, tabOpts);\r\n    this.selectedTab.subscribe(this.tabChangeHandler);\r\n    window.addEventListener(\"popstate\", this.popStateHandler);\r\n  }\r\n\r\n  tabOpts = ko.observableArray();\r\n  selectedTab = ko.observable();\r\n\r\n  isSelected = (tab) => {\r\n    return tab.id == this.selectedTab()?.id;\r\n  };\r\n\r\n  clickTabLink = (tab) => {\r\n    this.selectedTab(tab);\r\n    console.log(\"selected: \" + tab.id);\r\n  };\r\n\r\n  selectTab = (tab) => this.selectById(tab.id);\r\n\r\n  selectById = (tabId) => {\r\n    const tabById =\r\n      this.tabOpts().find((tab) => tab.id == tabId) ?? this.getDefaultTab();\r\n    this.selectedTab(tabById);\r\n  };\r\n\r\n  getDefaultTab = () => this.tabOpts()[0];\r\n\r\n  tabChangeHandler = (newTab) => {\r\n    if (newTab) setUrlParam(this.urlParam, newTab.id);\r\n    // window.history.pushState({ tab: { id: newTab.id } }, \"\", newTab.id);\r\n  };\r\n\r\n  popStateHandler = (event) => {\r\n    if (event.state) {\r\n      if (event.state[this.urlParam])\r\n        this.selectById(event.state[this.urlParam]);\r\n    }\r\n  };\r\n}\r\n\r\nexport class Tab {\r\n  constructor(id, linkText, template) {\r\n    this.id = id;\r\n    this.linkText = linkText;\r\n    this.template = template;\r\n  }\r\n}\r\n", "export class People {\r\n  constructor({\r\n    ID,\r\n    Title,\r\n    LoginName = null,\r\n    IsGroup = null,\r\n    IsEnsured = false,\r\n  }) {\r\n    this.ID = ID;\r\n    this.Title = Title;\r\n    this.LookupValue = Title;\r\n    this.LoginName = LoginName != \"\" ? LoginName : null;\r\n    this.IsGroup = IsGroup;\r\n    // Has the user data been fetched? Used for binding handlers.\r\n    this.IsEnsured = IsEnsured;\r\n  }\r\n\r\n  ID = null;\r\n  Title = null;\r\n  LoginName = null;\r\n  LookupValue = null;\r\n\r\n  getKey = () => this.LoginName ?? this.Title;\r\n\r\n  static Create = function (props) {\r\n    if (!props || (!props.ID && !(props.Title || props.LookupValue)))\r\n      return null;\r\n    return new People({\r\n      ...props,\r\n      Title: props.Title ?? props.LookupValue,\r\n    });\r\n  };\r\n}\r\n", "// Hint: use the es6-string-html VS Code module to make template literals easier to read\r\nexport const html = String.raw;\r\n\r\nexport function registerFieldComponents(constructor) {\r\n  ko.components.register(constructor.edit, {\r\n    template: constructor.editTemplate,\r\n    viewModel: constructor,\r\n  });\r\n\r\n  ko.components.register(constructor.view, {\r\n    template: constructor.viewTemplate,\r\n    viewModel: constructor,\r\n  });\r\n}\r\n\r\nexport class BaseFieldModule {\r\n  constructor(params) {\r\n    Object.assign(this, params);\r\n  }\r\n\r\n  _id;\r\n  getUniqueId = () => {\r\n    if (!this._id) {\r\n      this._id = \"field-\" + Math.floor(Math.random() * 10000);\r\n    }\r\n    return this._id;\r\n  };\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return [];\r\n    if (!this.isRequired) return [];\r\n    return this.Value()\r\n      ? []\r\n      : [\r\n          new ValidationError(\r\n            \"text-field\",\r\n            \"required-field\",\r\n            this.displayName + ` is required!`\r\n          ),\r\n        ];\r\n  });\r\n\r\n  ShowErrors = ko.observable(false);\r\n\r\n  ValidationClass = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return;\r\n    return this.Errors().length ? \"is-invalid\" : \"is-valid\";\r\n  });\r\n\r\n  static viewTemplate = html`\r\n    <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n    <div data-bind=\"text: toString()\"></div>\r\n  `;\r\n\r\n  static editTemplate = html`<div>Uh oh!</div>`;\r\n}\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"component: {name: Value()?.components.edit, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString\"></td>\r\n        <!-- /ko -->\r\n        <td>\r\n          <i\r\n            title=\"remove item\"\r\n            class=\"fa-solid fa-trash pointer\"\r\n            data-bind=\"click: $parent.remove.bind(row)\"\r\n          ></i>\r\n        </td>\r\n      </tr>\r\n      <!-- /ko -->\r\n      <tr>\r\n        <!-- ko foreach: NewItem()?.FormFields -->\r\n        <td>\r\n          <div\r\n            data-bind=\"component: {name: components.edit, params: $data}\"\r\n          ></div>\r\n        </td>\r\n        <!-- /ko -->\r\n        <td class=\"align-bottom\">\r\n          <button\r\n            title=\"add and new\"\r\n            type=\"button\"\r\n            data-bind=\"click: submit\"\r\n            class=\"btn btn-success\"\r\n          >\r\n            Add +\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <!-- ko if: Value -->\r\n  <div\r\n    data-bind=\"component: {name: Value().components.view, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString()\"></td>\r\n        <!-- /ko -->\r\n      </tr>\r\n      <!-- /ko -->\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class BlobModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"blob-view\";\r\n  static edit = \"blob-edit\";\r\n  static new = \"blob-edit\";\r\n}\r\n\r\nregisterFieldComponents(BlobModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value\"\r\n      />\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value\"\r\n        disabled\r\n      />\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nexport class CheckboxModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"checkbox-view\";\r\n  static edit = \"checkbox-edit\";\r\n  static new = \"checkbox-edit\";\r\n}\r\n\r\nregisterFieldComponents(CheckboxModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"value: inputBinding, class: ValidationClass, attr: {'type': type}\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class DateModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"date-view\";\r\n  static edit = \"date-edit\";\r\n  static new = \"date-edit\";\r\n}\r\n\r\nregisterFieldComponents(DateModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: isSearch -->\r\n    <div data-bind=\"text: toString()\"></div>\r\n    <input class=\"form-control\" data-bind=\"\" />\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isSearch -->\r\n    <!-- ko if: Options().length -->\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n  selectedOptions: Value,\r\n  optionsText: optionsText,\r\n  class: ValidationClass\"\r\n    ></select>\r\n    <div class=\"fw-light flex justify-between\">\r\n      <p class=\"fst-italic\">Hold ctrl to select multiple</p>\r\n      <button type=\"button\" class=\"btn btn-link h-1\" data-bind=\"click: clear\">\r\n        CLEAR\r\n      </button>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: Options, \r\n    optionsCaption: 'Select...', \r\n    value: Value,\r\n    optionsText: optionsText,\r\n    class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class LookupModule extends BaseFieldModule {\r\n  constructor(field) {\r\n    super(field);\r\n    this.onSearchInput = field.onSearchInput;\r\n    this.multiple = field.multiple ?? false;\r\n  }\r\n\r\n  // selectedOptions = ko.pureComputed({\r\n  //   read: () => {\r\n  //     if (this.multiple) return this.Value();\r\n  //     return ko.unwrap(this.Value) ? [ko.unwrap(this.Value)] : [];\r\n  //   },\r\n  //   write: (val) => {\r\n  //     if (this.multiple) {\r\n  //       this.Value(val);\r\n  //       return;\r\n  //     }\r\n\r\n  //     if (val.length) {\r\n  //       this.Value(val[0]);\r\n  //       return;\r\n  //     }\r\n  //     this.Value(null);\r\n  //   },\r\n  // });\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"lookup-view\";\r\n  static edit = \"lookup-edit\";\r\n  static new = \"lookup-edit\";\r\n}\r\n\r\nregisterFieldComponents(LookupModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold w-100\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko ifnot: spGroupId -->\r\n    <div\r\n      data-bind=\"attr: {id: getUniqueId()}, \r\n      people: Value, \r\n      pickerOptions: pickerOptions,\r\n      class: ValidationClass\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowUserSelect -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: userOpts, \r\n        optionsCaption: 'Select...', \r\n        optionsText: 'Title',\r\n        value: ValueFunc,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: toString -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"text: toString, \r\n      attr: {title: Value()?.LoginName}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <ul data-bind=\"foreach: Value\">\r\n    <li data-bind=\"attr: {title: LoginName}, text: Title\"></li>\r\n  </ul>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: toString -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class PeopleModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  ValueFunc = ko.pureComputed({\r\n    read: () => {\r\n      if (!this.Value()) return;\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      return userOpts.find((opt) => opt.ID == this.Value().ID);\r\n    },\r\n    write: (opt) => {\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      if (!userOpts) return;\r\n      this.Value(opt);\r\n    },\r\n  });\r\n\r\n  ShowUserSelect = ko.pureComputed(() => {\r\n    // We don't care to unwrap this, since we want to know if it's set or an observable.\r\n    const groupName = this.spGroupName;\r\n    if (!groupName) return false;\r\n    const options = ko.unwrap(this.userOpts);\r\n    return options.length;\r\n  });\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"people-view\";\r\n  static edit = \"people-edit\";\r\n  static new = \"people-edit\";\r\n}\r\n\r\nregisterFieldComponents(PeopleModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </label>\r\n  <search-select\r\n    class=\"form-select\"\r\n    data-bind=\"searchSelect: { \r\n      options: Options, \r\n      selectedOptions: Value,\r\n      optionsText: optionsText,\r\n      onSearchInput: onSearchInput\r\n    }\"\r\n  >\r\n  </search-select>\r\n  <div class=\"fw-light flex justify-between\">\r\n    <p class=\"fst-italic\"></p>\r\n    <button type=\"button\" class=\"btn btn-link h-1\" data-bind=\"click: clear\">\r\n      CLEAR\r\n    </button>\r\n  </div>\r\n  <!-- ko if: instructions -->\r\n  <div\r\n    class=\"fw-lighter fst-italic text-secondary\"\r\n    data-bind=\"html: instructions\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SearchSelectModule extends BaseFieldModule {\r\n  constructor(field) {\r\n    super(field);\r\n    this.Options = field.Options;\r\n    this.Value = field.Value;\r\n    this.optionsText =\r\n      field.optionsText ??\r\n      ((val) => {\r\n        return val;\r\n      });\r\n    this.multiple = field.multiple;\r\n    this.OptionsCaption = field.OptionsCaption ?? \"Select...\";\r\n    this.onSearchInput = field.onSearchInput;\r\n  }\r\n\r\n  GetSelectedOptions = ko.pureComputed(() => {\r\n    if (this.multiple) return this.Value();\r\n\r\n    return this.Value() ? [this.Value()] : [];\r\n  });\r\n\r\n  InputGroupFocused = ko.observable();\r\n  setFocus = () => this.InputGroupFocused(true);\r\n\r\n  FilterText = ko.observable();\r\n  FilteredOptions = ko.pureComputed(() =>\r\n    this.Options().filter((option) => {\r\n      if (this.GetSelectedOptions().indexOf(option) >= 0) return false;\r\n      if (this.FilterText())\r\n        return this.optionsText(option)\r\n          .toLowerCase()\r\n          .includes(this.FilterText().toLowerCase());\r\n      return true;\r\n    })\r\n  );\r\n\r\n  addSelection = (option, e) => {\r\n    console.log(\"selected\", option);\r\n    if (e.target.nextElementSibling) {\r\n      //e.stopPropagation();\r\n      e.target.nextElementSibling.focus();\r\n    }\r\n    if (this.multiple) {\r\n      this.Value.push(option);\r\n    } else {\r\n      this.Value(option);\r\n    }\r\n  };\r\n\r\n  removeSelection = (option) =>\r\n    this.multiple ? this.Value.remove(option) : this.Value(null);\r\n\r\n  setInputGroupFocus = () => {\r\n    this.InputGroupFocused(true);\r\n    clearTimeout(this.focusOutTimeout);\r\n  };\r\n\r\n  removeInputGroupFocus = (data, e) => {\r\n    this.focusOutTimeout = window.setTimeout(() => {\r\n      this.InputGroupFocused(false);\r\n    }, 0);\r\n  };\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"search-select-view\";\r\n  static edit = \"search-select-edit\";\r\n  static new = \"search-select-new\";\r\n}\r\n\r\nregisterFieldComponents(SearchSelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        optionsText: optionsText,\r\n        selectedOptions: Value,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <div class=\"fst-italic fw-light\">Hold ctrl to select multiple.</div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        optionsText: optionsText,\r\n        value: Value,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SelectModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"select-view\";\r\n  static edit = \"select-edit\";\r\n  static new = \"select-edit\";\r\n}\r\n\r\nregisterFieldComponents(SelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"component field\">\r\n    <!-- ko if: isRichText -->\r\n    <label class=\"fw-semibold\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span\r\n      >:</label\r\n    >\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <div\r\n      class=\"richtext-field\"\r\n      data-bind=\"childrenComplete: childrenHaveLoaded\"\r\n    >\r\n      <!-- Create the editor container -->\r\n      <div\r\n        class=\"form-control\"\r\n        data-bind=\"attr: {'id': getUniqueId()}, class: ValidationClass\"\r\n        style=\"height: 150px\"\r\n      >\r\n        <div data-bind=\"html: Value\"></div>\r\n      </div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isRichText -->\r\n    <label class=\"fw-semibold\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n      <textarea\r\n        name=\"\"\r\n        id=\"\"\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        class=\"form-control\"\r\n        data-bind=\"textInput: Value, class: ValidationClass, attr: attr\"\r\n      ></textarea>\r\n    </label>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowErrors -->\r\n    <!-- ko foreach: Errors -->\r\n    <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: Value -->\r\n  <!-- ko if: isRichText -->\r\n  <div data-bind=\"html: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: isRichText -->\r\n  <div data-bind=\"text: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: Value -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextAreaModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  childrenHaveLoaded = (nodes) => {\r\n    this.initializeEditor();\r\n  };\r\n\r\n  getToolbarId = () => \"toolbar-\" + this.getUniqueId();\r\n\r\n  initializeEditor() {\r\n    const toolbarOptions = [\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n      [\"link\"],\r\n      [\"blockquote\", \"code-block\"],\r\n\r\n      [{ header: 1 }, { header: 2 }], // custom button values\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n      [{ direction: \"rtl\" }], // text direction\r\n\r\n      [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [{ font: [] }],\r\n      [{ align: [] }],\r\n\r\n      [\"clean\"], // remove formatting button\r\n    ];\r\n\r\n    // debugger;\r\n    var editor = new Quill(\"#\" + this.getUniqueId(), {\r\n      modules: { toolbar: toolbarOptions },\r\n      theme: \"snow\",\r\n    });\r\n\r\n    const Value = this.Value;\r\n\r\n    Value.subscribe((val) => {\r\n      if (val == \"\") {\r\n        editor.setText(\"\");\r\n      }\r\n    });\r\n\r\n    editor.on(\"text-change\", function (delta, oldDelta, source) {\r\n      Value(editor.root.textContent ? editor.root.innerHTML : \"\");\r\n    });\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-area-view\";\r\n  static edit = \"text-area-edit\";\r\n  static new = \"text-area-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextAreaModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"textInput: Value, class: ValidationClass, attr: attr\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-view\";\r\n  static edit = \"text-edit\";\r\n  static new = \"text-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextModule);\r\n", "export const html = String.raw;\r\n\r\nexport function registerComponent({\r\n  name,\r\n  folder,\r\n  module = null,\r\n  moduleFilename = null,\r\n  template: templateFilename,\r\n}) {\r\n  if (ko.components.isRegistered(name)) {\r\n    return;\r\n  }\r\n  if (moduleFilename || module) {\r\n    ko.components.register(name, {\r\n      template: {\r\n        fromPath: `/components/${folder}/${templateFilename}.html`,\r\n      },\r\n      viewModel: module ?? {\r\n        viaLoader: `/components/${folder}/${moduleFilename}.js`,\r\n      },\r\n    });\r\n  } else {\r\n    ko.components.register(name, {\r\n      template: {\r\n        fromPath: `/components/${folder}/${templateFilename}.html`,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport function directRegisterComponent(name, { template, viewModel = null }) {\r\n  ko.components.register(name, {\r\n    template,\r\n    viewModel,\r\n  });\r\n}\r\n\r\nexport function registerFieldComponent({\r\n  name,\r\n  components,\r\n  viewModel = null,\r\n  folder = null,\r\n}) {\r\n  // register both our view and edit\r\n  folder = folder ?? name;\r\n\r\n  Object.keys(components).map((view) => {\r\n    const componentName = components[view];\r\n    if (ko.components.isRegistered(componentName)) {\r\n      return;\r\n    }\r\n\r\n    // See if we already have this element in the dom\r\n    const elementName = `field-` + componentName;\r\n    const fieldViewElement = document.getElementById(elementName);\r\n\r\n    if (!viewModel) {\r\n      debugger;\r\n    }\r\n    ko.components.register(componentName, {\r\n      template: fieldViewElement\r\n        ? {\r\n            element: fieldViewElement,\r\n          }\r\n        : {\r\n            fromPath: `/sal/components/fields/${folder}/${name}${view}.html`,\r\n          },\r\n      viewModel: viewModel ?? {\r\n        viaLoader: `/sal/components/fields/${folder}/${name}Module.js`,\r\n      },\r\n    });\r\n  });\r\n}\r\n", "/*\r\n    SharePoint Acces Layer - sal.js\r\n\r\n    Abstract any functions that rely on reading or setting SP items to here.\r\n\r\n    Create a new \"Connection\" object type that will store information for \r\n    interfacing with a specific list.\r\n\r\n    Author: Peter Backlund \r\n    Contact: backlundpf <@> state.gov\r\n    Created: 2019-02-12\r\n*/\r\n\r\n/*\r\n  TODO:\r\n  - migrate to rest api\r\n  - remove new from \"new SP.ClientContext.get_current()\"\r\n  - standardize currctx\r\n  - remove unused functions\r\n  - Combine functions \r\n*/\r\n\r\nwindow.console = window.console || { log: function () {} };\r\n\r\nwindow.sal = window.sal ?? {};\r\nvar sal = window.sal;\r\n\r\nconst serverRelativeUrl =\r\n  _spPageContextInfo.webServerRelativeUrl == \"/\"\r\n    ? \"\"\r\n    : _spPageContextInfo.webServerRelativeUrl;\r\n\r\nsal.globalConfig = sal.globalConfig || {\r\n  siteGroups: [],\r\n  siteUrl: serverRelativeUrl,\r\n  listServices: serverRelativeUrl + \"/_vti_bin/ListData.svc/\",\r\n  defaultGroups: {},\r\n};\r\nsal.site = sal.site || {};\r\n\r\nwindow.DEBUG = true;\r\n\r\nexport function executeQuery(currCtx) {\r\n  return new Promise((resolve, reject) =>\r\n    currCtx.executeQueryAsync(resolve, (sender, args) => {\r\n      reject({ sender, args });\r\n    })\r\n  );\r\n}\r\n\r\nfunction principalToPeople(oPrincipal, isGroup = null) {\r\n  return {\r\n    ID: oPrincipal.get_id(),\r\n    Title: oPrincipal.get_title(),\r\n    LoginName: oPrincipal.get_loginName(),\r\n    IsEnsured: true,\r\n    IsGroup:\r\n      isGroup != null\r\n        ? isGroup\r\n        : oPrincipal.constructor.getName() == \"SP.Group\",\r\n    oPrincipal,\r\n  };\r\n}\r\n\r\n// Used in authorization\r\nexport function getDefaultGroups() {\r\n  const defaultGroups = sal.globalConfig.defaultGroups;\r\n  const result = {};\r\n  Object.keys(defaultGroups).forEach((key) => {\r\n    result[key] = principalToPeople(defaultGroups[key], true);\r\n  });\r\n  return result;\r\n}\r\n\r\nconst siteGroups = {};\r\n\r\nexport async function getGroupUsers(groupName) {\r\n  if (siteGroups[groupName]?.Users?.constructor == Array) {\r\n    return siteGroups[groupName].Users;\r\n  }\r\n  const url = `/web/sitegroups/GetByName('${groupName}')?$expand=Users`;\r\n\r\n  const groupResult = await fetchSharePointData(url);\r\n\r\n  const group = groupResult.d;\r\n  group.Users = group.Users?.results;\r\n\r\n  siteGroups[groupName] = group;\r\n  return group.Users;\r\n}\r\n\r\n// Used in router\r\nexport const webRoot =\r\n  _spPageContextInfo.webAbsoluteUrl == \"/\"\r\n    ? \"\"\r\n    : _spPageContextInfo.webAbsoluteUrl;\r\n\r\nexport async function InitSal() {\r\n  if (sal.utilities) return;\r\n  console.log(\"Init Sal\");\r\n  var currCtx = SP.ClientContext.get_current();\r\n  var web = currCtx.get_web();\r\n  //sal.site = sal.siteConnection;\r\n\r\n  // Get default groups\r\n  sal.globalConfig.defaultGroups = {\r\n    owners: web.get_associatedOwnerGroup(),\r\n    members: web.get_associatedMemberGroup(),\r\n    visitors: web.get_associatedVisitorGroup(),\r\n  };\r\n  currCtx.load(sal.globalConfig.defaultGroups.owners);\r\n  currCtx.load(sal.globalConfig.defaultGroups.members);\r\n  currCtx.load(sal.globalConfig.defaultGroups.visitors);\r\n\r\n  // Get Current User information\r\n  var user = web.get_currentUser(); //must load this to access info.\r\n  currCtx.load(user);\r\n\r\n  // Get the site groups\r\n  var siteGroupCollection = web.get_siteGroups();\r\n  currCtx.load(siteGroupCollection);\r\n\r\n  // Get the roles upfront so we can validate they're present on the site.\r\n  sal.globalConfig.roles = [];\r\n  var oRoleDefinitions = currCtx.get_web().get_roleDefinitions();\r\n  currCtx.load(oRoleDefinitions);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    currCtx.executeQueryAsync(\r\n      function () {\r\n        sal.globalConfig.currentUser = user;\r\n\r\n        var listItemEnumerator = siteGroupCollection.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItem = listItemEnumerator.get_current();\r\n          sal.globalConfig.siteGroups.push(principalToPeople(oListItem));\r\n        }\r\n\r\n        // Role Definitions\r\n        var oEnumerator = oRoleDefinitions.getEnumerator();\r\n        while (oEnumerator.moveNext()) {\r\n          var oRoleDefinition = oEnumerator.get_current();\r\n          sal.globalConfig.roles.push(oRoleDefinition.get_name());\r\n        }\r\n\r\n        sal.config = new sal.NewAppConfig();\r\n        sal.utilities = new sal.NewUtilities();\r\n        resolve();\r\n      },\r\n      function (sender, args) {\r\n        alert(\"Error initializing SAL\");\r\n        reject();\r\n      }\r\n    );\r\n  });\r\n  // console.log()\r\n}\r\n\r\nsal.NewAppConfig = function () {\r\n  // TODO: We should take in configuration from our current application, roles/groups etc.\r\n  var siteRoles = {};\r\n  siteRoles.roles = {\r\n    FullControl: \"Full Control\",\r\n    Design: \"Design\",\r\n    Edit: \"Edit\",\r\n    Contribute: \"Contribute\",\r\n    RestrictedContribute: \"Restricted Contribute\",\r\n    InitialCreate: \"Initial Create\",\r\n    Read: \"Read\",\r\n    RestrictedRead: \"Restricted Read\",\r\n    LimitedAccess: \"Limited Access\",\r\n  };\r\n  siteRoles.fulfillsRole = function (inputRole, targetRole) {\r\n    // the site roles are already in authoritative order\r\n    const roles = Object.values(siteRoles.roles);\r\n    if (!roles.includes(inputRole) || !roles.includes(targetRole)) return false;\r\n\r\n    return roles.indexOf(inputRole) <= roles.indexOf(targetRole);\r\n  };\r\n\r\n  siteRoles.validate = function () {\r\n    Object.keys(siteRoles.roles).forEach(function (role) {\r\n      var roleName = siteRoles.roles[role];\r\n      if (!sal.globalConfig.roles.includes(roleName)) {\r\n        console.error(roleName + \" is not in the global roles list\");\r\n      } else {\r\n        console.log(roleName);\r\n      }\r\n    });\r\n  };\r\n\r\n  var siteGroups = {\r\n    groups: {\r\n      Owners: \"workorder Owners\",\r\n      Members: \"workorder Members\",\r\n      Visitors: \"workorder Visitors\",\r\n      RestrictedReaders: \"Restricted Readers\",\r\n    },\r\n  };\r\n\r\n  var publicMembers = {\r\n    siteRoles,\r\n    siteGroups,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\n// Used in Authorization\r\nexport async function getUserPropsAsync(userId = _spPageContextInfo.userId) {\r\n  // We need to make two api calls, one to user info list, and one to web\r\n  // const userInfoUrl = `/Web/lists/getbytitle('User%20Information%20List')/Items(${userId})`;\r\n  const userPropsUrl = `/sp.userprofiles.peoplemanager/getmyproperties`;\r\n  // const userGroupUrl = `/Web/GetUserById(${userId})/Groups`;\r\n\r\n  // Get more user info:\r\n  const userInfoUrl = `/Web/GetUserById(${userId})/?$expand=Groups`;\r\n\r\n  const userInfo = (await fetchSharePointData(userInfoUrl)).d;\r\n\r\n  // TODO: See if we can just select the properties we need\r\n  // const userPropsUrl = `/sp.userprofiles.peoplemanager/getpropertiesfor(@v)?@v='${encodeURIComponent(\r\n  //   userInfo.LoginName\r\n  // )}'`;\r\n\r\n  const userProps = (await fetchSharePointData(userPropsUrl))?.d\r\n    .UserProfileProperties.results;\r\n\r\n  function findPropValue(props, key) {\r\n    return props.find((prop) => prop.Key == key)?.Value;\r\n  }\r\n\r\n  return {\r\n    ID: userId,\r\n    Title: userInfo.Title,\r\n    LoginName: userInfo.LoginName,\r\n    WorkPhone: findPropValue(userProps, \"WorkPhone\"),\r\n    EMail: findPropValue(userProps, \"WorkEmail\"), // TODO: Do we still need this spelling?\r\n    IsEnsured: true,\r\n    IsGroup: false,\r\n    Groups: userInfo.Groups?.results?.map((group) => {\r\n      return {\r\n        ...group,\r\n        ID: group.Id,\r\n        IsGroup: true,\r\n        IsEnsured: true,\r\n      };\r\n    }),\r\n  };\r\n}\r\n\r\n// TODO: DEPRECATED remove after verification\r\nasync function getUserPropsAsyncDeprecated() {\r\n  // TODO: We aren't getting the phone number, need to query userprofile service\r\n  return new Promise((resolve, reject) => {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oUser = web.get_currentUser();\r\n    var oGroups = oUser.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      const user = {\r\n        ID: oUser.get_id(),\r\n        Title: oUser.get_title(),\r\n        LoginName: oUser.get_loginName(),\r\n        IsEnsured: true,\r\n        IsGroup: false,\r\n        Groups: [],\r\n      };\r\n\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        user.Groups.push(principalToPeople(oGroup));\r\n      }\r\n      resolve(user);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    currCtx.load(oUser);\r\n    currCtx.load(oGroups);\r\n    const data = { oUser, oGroups, resolve, reject };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  });\r\n}\r\n\r\nsal.NewUtilities = function () {\r\n  // TODO: Split this up into UserManager, GroupManager, etc\r\n  function createSiteGroup(groupName, permissions, callback) {\r\n    /* groupName: the name of the new SP Group\r\n     *  permissions: an array of permissions to assign to the group\r\n     * groupOwner: the name of the owner group\r\n     */\r\n    callback = callback === undefined ? null : callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var groupCreationInfo = new SP.GroupCreationInformation();\r\n    groupCreationInfo.set_title(groupName);\r\n    this.oGroup = oWebsite.get_siteGroups().add(groupCreationInfo);\r\n    oGroup.set_owner(oWebsite.get_associatedOwnerGroup());\r\n\r\n    oGroup.update();\r\n    var collRoleDefinitionBinding =\r\n      SP.RoleDefinitionBindingCollection.newObject(clientContext);\r\n\r\n    this.oRoleDefinitions = [];\r\n\r\n    permissions.forEach(function (perm) {\r\n      var oRoleDefinition = oWebsite.get_roleDefinitions().getByName(perm);\r\n      this.oRoleDefinitions.push(oRoleDefinition);\r\n      collRoleDefinitionBinding.add(oRoleDefinition);\r\n    });\r\n\r\n    var collRollAssignment = oWebsite.get_roleAssignments();\r\n    collRollAssignment.add(oGroup, collRoleDefinitionBinding);\r\n\r\n    function onCreateGroupSucceeded() {\r\n      var roleInfo =\r\n        oGroup.get_title() +\r\n        \" created and assigned to \" +\r\n        oRoleDefinitions.forEach(function (rd) {\r\n          rd + \", \";\r\n        });\r\n      if (callback) {\r\n        callback(oGroup.get_id());\r\n      }\r\n      console.log(roleInfo);\r\n    }\r\n\r\n    function onCreateGroupFailed(sender, args) {\r\n      alert(\r\n        groupnName +\r\n          \" - Create group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    clientContext.load(oGroup, \"Title\");\r\n\r\n    var data = {\r\n      groupName: groupName,\r\n      oGroup: oGroup,\r\n      oRoleDefinition: oRoleDefinition,\r\n      callback: callback,\r\n    };\r\n\r\n    clientContext.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateGroupSucceeded),\r\n      Function.createDelegate(data, onCreateGroupFailed)\r\n    );\r\n  }\r\n\r\n  function getUserGroups(user, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var everyone = web.ensureUser(user);\r\n    var oGroups = everyone.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      var groups = new Array();\r\n      var groupsInfo = new String();\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        var group = principalToPeople(oGroup);\r\n\r\n        groupsInfo +=\r\n          \"\\n\" +\r\n          \"Group ID: \" +\r\n          oGroup.get_id() +\r\n          \", \" +\r\n          \"Title : \" +\r\n          oGroup.get_title();\r\n        groups.push(group);\r\n      }\r\n      console.log(groupsInfo.toString());\r\n      callback(groups);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    currCtx.load(everyone);\r\n    currCtx.load(oGroups);\r\n    data = { everyone: everyone, oGroups: oGroups, callback: callback };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  }\r\n\r\n  function getUsersWithGroup(oGroup, callback) {\r\n    var context = new SP.ClientContext.get_current();\r\n\r\n    var oUsers = oGroup.get_users();\r\n\r\n    function onGetUserSuccess() {\r\n      var userObjs = [];\r\n      var userEnumerator = oUsers.getEnumerator();\r\n      while (userEnumerator.moveNext()) {\r\n        var oUser = userEnumerator.get_current();\r\n        var userObj = principalToPeople(oUser);\r\n        userObjs.push(userObj);\r\n      }\r\n      callback(userObjs);\r\n    }\r\n\r\n    function onGetUserFailed(sender, args) {}\r\n\r\n    var data = { oUsers: oUsers, callback: callback };\r\n    context.load(oUsers);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onGetUserSuccess),\r\n      Function.createDelegate(data, onGetUserFailed)\r\n    );\r\n  }\r\n\r\n  function copyFiles(sourceLib, destLib, callback, onError) {\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourceLib);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        console.log(\"Got the source folder right here!\");\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destLib + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \") + args.get_message();\r\n            onError;\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.log(\"Sorry, something messed up: \" + args.get_message());\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n\r\n  var publicMembers = {\r\n    copyFiles: copyFiles,\r\n    copyFilesAsync,\r\n    createSiteGroup: createSiteGroup,\r\n    getUserGroups: getUserGroups,\r\n    getUsersWithGroup: getUsersWithGroup,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\nexport async function copyFileAsync(sourceFilePath, destFilePath) {\r\n  const uri = `/web/getfilebyserverrelativeurl('${sourceFilePath}')/copyto('${destFilePath}')`;\r\n\r\n  const result = await fetchSharePointData(uri, \"POST\");\r\n\r\n  return result;\r\n}\r\n\r\n// Used in Authorization\r\nasync function getCurrentUserPropertiesAsync() {\r\n  var headers = {\r\n    \"Content-Type\": \"application/json;odata=verbose\",\r\n    \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n  };\r\n  try {\r\n    var response = await fetch(\r\n      _spPageContextInfo.webAbsoluteUrl +\r\n        \"/_api/SP.UserProfiles.PeopleManager/GetMyProperties\",\r\n      {\r\n        method: \"GET\",\r\n        headers,\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(response.status);\r\n    }\r\n\r\n    const data = await response.json();\r\n    sal.globalConfig.currentUserProfile = data.d;\r\n    const requestorPhone = data.d.UserProfileProperties.results.find(function (\r\n      prop\r\n    ) {\r\n      return prop.Key == \"WorkPhone\";\r\n    }).Value;\r\n  } catch (error) {\r\n    console.error(\"Unable to fetch User Properties:\", error);\r\n  }\r\n}\r\n\r\n// Used in Knockout people custom binding\r\nexport async function ensureUserByKeyAsync(userName) {\r\n  return new Promise((resolve, reject) => {\r\n    var group = sal.globalConfig.siteGroups.find(function (group) {\r\n      return group.LoginName == userName;\r\n    });\r\n\r\n    if (group) {\r\n      resolve(group);\r\n      return;\r\n    }\r\n\r\n    var context = new SP.ClientContext.get_current();\r\n    var oUser = context.get_web().ensureUser(userName);\r\n\r\n    function onEnsureUserSucceeded(sender, args) {\r\n      const user = principalToPeople(oUser);\r\n      resolve(user);\r\n    }\r\n\r\n    function onEnsureUserFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to ensure user :\" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    const data = { oUser, resolve, reject };\r\n\r\n    context.load(oUser);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onEnsureUserSucceeded),\r\n      Function.createDelegate(data, onEnsureUserFailed)\r\n    );\r\n  });\r\n}\r\n\r\nfunction getSPSiteGroupByName(groupName) {\r\n  var userGroup = null;\r\n  if (this.globalConfig.siteGroups != null) {\r\n    userGroup = this.globalConfig.siteGroups.find(function (group) {\r\n      return group.Title == groupName;\r\n    });\r\n  }\r\n  return userGroup;\r\n}\r\n\r\nexport class ItemPermissions {\r\n  constructor({ hasUniqueRoleAssignments, roles }) {\r\n    this.hasUniqueRoleAssignments = hasUniqueRoleAssignments;\r\n    this.roles = roles;\r\n  }\r\n\r\n  hasUniqueRoleAssignments;\r\n  roles = [];\r\n\r\n  addPrincipalRole(principal, roleName) {\r\n    const newRoleDef = new RoleDef({ name: roleName });\r\n    const principalRole = this.getPrincipalRole(principal);\r\n\r\n    if (principalRole) {\r\n      principalRole.addRoleDef(newRoleDef);\r\n      return;\r\n    }\r\n\r\n    const newRole = new Role({ principal });\r\n    newRole.addRoleDef(newRoleDef);\r\n    this.roles.push(newRole);\r\n  }\r\n\r\n  getPrincipalRole(principal) {\r\n    return this.roles.find((role) => role.principal.ID == principal.ID);\r\n  }\r\n\r\n  principalHasPermissionKind(principal, permission) {\r\n    const role = this.getPrincipalRole(principal);\r\n    return role?.roleDefs.find((roleDef) =>\r\n      roleDef.basePermissions?.has(permission)\r\n    )\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  getValuePairs() {\r\n    // For backwards compatibility\r\n    return this.roles.flatMap((role) =>\r\n      role.roleDefs.map((roleDef) => [role.principal.Title, roleDef.name])\r\n    );\r\n  }\r\n\r\n  static fromRestResult(result) {\r\n    const roles = result.RoleAssignments.results.map(\r\n      Role.fromRestRoleAssignment\r\n    );\r\n\r\n    return new ItemPermissions({\r\n      hasUniqueRoleAssignments: result.HasUniqueRoleAssignments,\r\n      roles,\r\n    });\r\n  }\r\n}\r\n\r\nexport class Role {\r\n  constructor({ principal, roleDefs = [] }) {\r\n    this.principal = principal;\r\n    this.roleDefs = roleDefs;\r\n  }\r\n\r\n  principal; // People Entity\r\n  roleDefs = [];\r\n\r\n  addRoleDef(roleDef) {\r\n    this.roleDefs.push(roleDef);\r\n  }\r\n\r\n  static fromRestRoleAssignment(role) {\r\n    return new Role({\r\n      principal: { ...role.Member, ID: role.Member.Id },\r\n      roleDefs: role.RoleDefinitionBindings.results.map(\r\n        RoleDef.fromRestRoleDef\r\n      ),\r\n    });\r\n  }\r\n  static fromJsomRole(role) {\r\n    const newRole = new Role({\r\n      principal: principalToPeople(role.get_member()),\r\n    });\r\n\r\n    var roleDefs = role.get_roleDefinitionBindings();\r\n    if (roleDefs != null) {\r\n      var roleDefsEnumerator = roleDefs.getEnumerator();\r\n      while (roleDefsEnumerator.moveNext()) {\r\n        var roleDef = roleDefsEnumerator.get_current();\r\n        newRole.roleDefs.push(RoleDef.fromJsomRoleDef(roleDef));\r\n      }\r\n    }\r\n    return newRole;\r\n  }\r\n}\r\n\r\nexport class RoleDef {\r\n  constructor({ name, basePermissions = null }) {\r\n    this.name = name;\r\n    this.basePermissions = basePermissions;\r\n  }\r\n  name;\r\n  basePermissions;\r\n\r\n  static fromRestRoleDef(roleDef) {\r\n    const newRoleDef = new RoleDef({\r\n      name: roleDef.Name,\r\n      basePermissions: roleDef.BasePermissions,\r\n    });\r\n    Object.assign(newRoleDef, roleDef);\r\n    return newRoleDef;\r\n  }\r\n\r\n  static fromJsomRoleDef(roleDef) {\r\n    const newRoleDef = new RoleDef({ name: roleDef.get_name() });\r\n    newRoleDef.basePermissions = roleDef.get_basePermissions();\r\n\r\n    return newRoleDef;\r\n  }\r\n}\r\n\r\nexport function SPList(listDef) {\r\n  /*\r\n      Expecting a list definition object in the following format:\r\n        var assignmentListDef = {\r\n        name: \"Assignment\",\r\n        title: \"Assignment\"\r\n      };\r\n    */\r\n\r\n  /*****************************************************************\r\n                                Globals       \r\n    ******************************************************************/\r\n\r\n  var self = this;\r\n\r\n  self.config = {\r\n    def: listDef,\r\n  };\r\n\r\n  /*****************************************************************\r\n                                Common Private Methods       \r\n    ******************************************************************/\r\n  async function init() {\r\n    if (!self.config.fieldSchema) {\r\n      const listEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')?$expand=Fields`;\r\n      const list = await fetchSharePointData(listEndpoint);\r\n      // const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      //const fields = await fetchData(apiEndpoint);\r\n      self.config.guid = list.d.Id;\r\n      self.config.fieldSchema = list.d.Fields.results;\r\n    }\r\n  }\r\n\r\n  init();\r\n\r\n  /*****************************************************************\r\n                                Common Public Methods       \r\n    ******************************************************************/\r\n\r\n  async function setListPermissionsAsync(itemPermissions, reset) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    // await executeQuery(currCtx).catch((sender, args) => {\r\n    //   console.warn(\"Unable to get list: \", sender);\r\n    //   return;\r\n    // });\r\n\r\n    return setResourcePermissionsAsync(oList, itemPermissions, reset);\r\n  }\r\n\r\n  function setListPermissions(valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n\r\n    var users = new Array();\r\n    var resolvedGroups = new Array();\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup) {\r\n        resolvedGroups.push([resolvedGroup, vp[1]]);\r\n      } else {\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindItemSucceeded() {\r\n      console.log(\"Successfully found item\");\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      if (reset) {\r\n        oList.resetRoleInheritance();\r\n        oList.breakRoleInheritance(false, false);\r\n        oList\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        oList.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { oList: oList, callback: callback };\r\n\r\n      function onSetListPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        callback(oList);\r\n      }\r\n\r\n      function onSetListPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on List: \" +\r\n            this.oList.get_title() +\r\n            args.get_message() +\r\n            \"\\n\",\r\n          args.get_stackTrace()\r\n        );\r\n      }\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetListPermissionsSuccess),\r\n        Function.createDelegate(data, onSetListPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindItemFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to find List: \" + this.oList.get_title + args.get_message(),\r\n        args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      oList: oList,\r\n      users: users,\r\n      resolvedGroups: resolvedGroups,\r\n      callback: callback,\r\n    };\r\n    //let data = { title: oListItem.get_item(\"Title\"), oListItem: oListItem };\r\n\r\n    currCtx.load(oList);\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindItemSucceeded),\r\n      Function.createDelegate(data, onFindItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                                createListItem      \r\n    ******************************************************************/\r\n  function mapObjectToListItem(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    if (!Array.isArray(val)) {\r\n      return mapItemToListItem(val);\r\n    }\r\n    return val\r\n      .map((item) => {\r\n        return mapItemToListItem(item);\r\n      })\r\n      .join(\";#\");\r\n  }\r\n\r\n  function mapItemToListItem(item) {\r\n    if (item.ID) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return `${item.ID};#${item.LookupValue ?? \"\"}`;\r\n    }\r\n    if (item.LookupValue) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return item.LookupValue;\r\n    }\r\n    if (item.constructor.getName() == \"Date\") {\r\n      return item.toISOString();\r\n    }\r\n    return item;\r\n  }\r\n\r\n  function createListItemAsync(entity, folderPath = null) {\r\n    return new Promise((resolve, reject) => {\r\n      //self.updateConfig();\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n      if (folderPath) {\r\n        var folderUrl =\r\n          sal.globalConfig.siteUrl +\r\n          \"/Lists/\" +\r\n          self.config.def.name +\r\n          \"/\" +\r\n          folderPath;\r\n        itemCreateInfo.set_folderUrl(folderUrl);\r\n      }\r\n\r\n      const oListItem = oList.addItem(itemCreateInfo);\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onCreateListItemSucceeded() {\r\n        resolve(oListItem.get_id());\r\n      }\r\n\r\n      function onCreateListItemFailed(sender, args) {\r\n        console.error(\"Create Item Failed - List: \" + self.config.def.name);\r\n        console.error(\"ValuePairs\", entity);\r\n        console.error(sender, args);\r\n        reject(sender);\r\n      }\r\n\r\n      const data = { entity, oListItem, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onCreateListItemSucceeded),\r\n        Function.createDelegate(data, onCreateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                                getListItems      \r\n    ******************************************************************/\r\n  function mapListItemToObject(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    let out = {};\r\n    switch (val.constructor.getName()) {\r\n      case \"SP.FieldUserValue\":\r\n        out.LoginName = val.get_email();\r\n      case \"SP.FieldLookupValue\":\r\n        out.ID = val.get_lookupId();\r\n        out.LookupValue = val.get_lookupValue();\r\n        out.Title = val.get_lookupValue();\r\n        break;\r\n      default:\r\n        out = val;\r\n    }\r\n    return out;\r\n  }\r\n\r\n  function getListItems(caml, fields, callback) {\r\n    /*\r\n        Obtain all list items that match the querystring passed by caml.\r\n        */\r\n    var camlQuery = new SP.CamlQuery.createAllItemsQuery();\r\n\r\n    camlQuery.set_viewXml(caml);\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var collListItem = oList.getItems(camlQuery);\r\n\r\n    function onGetListItemsSucceeded() {\r\n      var self = this;\r\n      var listItemEnumerator = self.collListItem.getEnumerator();\r\n\r\n      const foundObjects = [];\r\n\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n        var listObj = {};\r\n        fields.forEach((field) => {\r\n          var colVal = oListItem.get_item(field);\r\n          //console.log(`SAL: Setting ${field} to`, colVal);\r\n          listObj[field] = Array.isArray(colVal)\r\n            ? colVal.map((val) => mapListItemToObject(val))\r\n            : mapListItemToObject(colVal);\r\n        });\r\n        //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n        // listObj.oListItem = oListItem;\r\n        foundObjects.push(listObj);\r\n      }\r\n      //this.setState({ focusedItems })\r\n      //console.log(\"calling callback get list\");\r\n      callback(foundObjects);\r\n    }\r\n\r\n    function onGetListItemsFailed(sender, args) {\r\n      console.log(\"unsuccessful read\", sender);\r\n\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      collListItem: collListItem,\r\n      callback: callback,\r\n      fields,\r\n      camlQuery,\r\n    };\r\n\r\n    currCtx.load(collListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemsSucceeded),\r\n      Function.createDelegate(data, onGetListItemsFailed)\r\n    );\r\n  }\r\n\r\n  function getListItemsAsync({ fields = null, caml = null }) {\r\n    if (!caml) {\r\n      var caml =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">0</Value>' +\r\n        \"</Eq></Where></Query></View>\";\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      getListItems(caml, fields, resolve);\r\n    });\r\n  }\r\n\r\n  function findByIdAsync(id, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        findById(id, fields, resolve);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  async function getById(id, fields) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n\r\n    const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/items(${id})?$Select=${queryFields}&$expand=${expandFields}`;\r\n\r\n    const result = await fetchSharePointData(apiEndpoint);\r\n    return result.d;\r\n  }\r\n\r\n  async function getListFields() {\r\n    if (!self.config.fieldSchema) {\r\n      const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      const fields = await fetchSharePointData(apiEndpoint);\r\n      self.config.fieldSchema = fields.d.results;\r\n    }\r\n    return self.config.fieldSchema;\r\n  }\r\n\r\n  async function getQueryFields(fields) {\r\n    const queryFields = [];\r\n    const expandFields = [];\r\n\r\n    const listFields = await getListFields();\r\n    fields.map((f) => {\r\n      // TODO: Figure out why FileRef is pretending to be a lookup\r\n      if (f == \"FileRef\") {\r\n        queryFields.push(f);\r\n        return;\r\n      }\r\n\r\n      if (f.includes(\"/\")) {\r\n        queryFields.push(f);\r\n        expandFields.push(f.split(\"/\")[0]);\r\n        return;\r\n      }\r\n      const fieldSchema = listFields.find((lf) => lf.StaticName == f);\r\n      if (!fieldSchema) {\r\n        alert(`Field '${f}' not found on list ${self.config.def.name}`);\r\n        return;\r\n      }\r\n\r\n      const idString = f + \"/ID\";\r\n      let titleString = f + \"/Title\";\r\n      switch (fieldSchema.TypeAsString) {\r\n        case \"LookupMulti\":\r\n        case \"Lookup\":\r\n          titleString = f + \"/\" + fieldSchema.LookupField;\r\n        case \"User\":\r\n          queryFields.push(idString);\r\n          queryFields.push(titleString);\r\n          expandFields.push(f);\r\n          // expandFields.push(titleString);\r\n          break;\r\n        case \"Choice\":\r\n        default:\r\n          queryFields.push(f);\r\n      }\r\n    });\r\n    return [queryFields, expandFields];\r\n  }\r\n\r\n  // { column, value, type = \"LookupValue\" }\r\n  async function findByColumnValueAsync(\r\n    columnFilters,\r\n    { orderByColumn = null, sortAsc },\r\n    { count = null, includePermissions = false, includeFolders = false },\r\n    fields\r\n  ) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n    if (includePermissions) {\r\n      queryFields.push(\"RoleAssignments\");\r\n      queryFields.push(\"HasUniqueRoleAssignments\");\r\n      expandFields.push(\"RoleAssignments\");\r\n    }\r\n    const orderBy = orderByColumn\r\n      ? `$orderby=${orderByColumn} ${sortAsc ? \"asc\" : \"desc\"}`\r\n      : \"\";\r\n    // TODO: fieldfilter should use 'lookupcolumnId' e.g. ServiceTypeId eq 1\r\n    const colFilterArr = [];\r\n    columnFilters.forEach((colFilter) =>\r\n      colFilterArr.push(\r\n        `${colFilter.column} ${colFilter.op ?? \"eq\"} '${colFilter.value}'`\r\n      )\r\n    );\r\n    if (!includeFolders) colFilterArr.push(`FSObjType eq '0'`);\r\n\r\n    const filter = \"$filter=(\" + colFilterArr.join(`) and (`) + \")\";\r\n\r\n    //const fsObjTypeFilter = `FSObjType eq '0'`;\r\n    // const fieldFilter = `${column} eq '${value}'`;\r\n    // const filter2 = !includeFolders\r\n    //   ? `$filter=(${fieldFilter}) and (${fsObjTypeFilter})`\r\n    //   : `$filter=${fieldFilter}`;\r\n\r\n    const include = \"$select=\" + queryFields;\r\n    const expand = `$expand=` + expandFields;\r\n    const page = count ? `$top=${count}` : \"\";\r\n\r\n    const apiEndpoint =\r\n      `/web/lists/GetByTitle('${self.config.def.title}')/items?` +\r\n      `${include}&${expand}&${orderBy}&${filter}&${page}`;\r\n\r\n    const result = await fetchSharePointData(apiEndpoint);\r\n    const cursor = {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n\r\n    // if (window.DEBUG) console.log(cursor);\r\n    return cursor;\r\n  }\r\n\r\n  async function loadNextPage(cursor) {\r\n    const result = await fetchSharePointData(cursor._next);\r\n    return {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n  }\r\n\r\n  function findById(id, fields, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n    var oListItem = oList.getItemById(id);\r\n\r\n    function onGetListItemSucceeded() {\r\n      const listObj = {};\r\n      fields.forEach((field) => {\r\n        var colVal = oListItem.get_item(field);\r\n        //console.log(`SAL: Setting ${field} to`, colVal);\r\n        listObj[field] = Array.isArray(colVal)\r\n          ? colVal.map((val) => mapListItemToObject(val))\r\n          : mapListItemToObject(colVal);\r\n      });\r\n      callback(listObj);\r\n    }\r\n\r\n    function onGetListItemFailed(sender, args) {\r\n      console.error(\"SAL: findById - List: \" + self.config.def.name);\r\n      console.error(\"Fields\", this);\r\n      console.error(sender, args);\r\n    }\r\n\r\n    var data = {\r\n      oListItem,\r\n      callback,\r\n      fields,\r\n    };\r\n    currCtx.load(oListItem);\r\n    // currCtx.load(oListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemSucceeded),\r\n      Function.createDelegate(data, onGetListItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                            updateListItem      \r\n    ******************************************************************/\r\n\r\n  function updateListItemAsync(entity) {\r\n    if (!entity?.ID) {\r\n      return false;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const oListItem = oList.getItemById(entity.ID);\r\n\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onUpdateListItemsSucceeded() {\r\n        //alert('Item updated!');\r\n        console.log(\"Successfully updated \" + this.oListItem.get_item(\"Title\"));\r\n        resolve();\r\n      }\r\n\r\n      function onUpdateListItemFailed(sender, args) {\r\n        console.error(\"Update Failed - List: \" + self.config.def.name);\r\n        console.error(\"Item Id\", this.oListItem.get_id() ?? \"N/A\");\r\n        console.error(entity);\r\n        console.error(sender, args);\r\n        reject(args);\r\n      }\r\n\r\n      const data = { oListItem, entity, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onUpdateListItemsSucceeded),\r\n        Function.createDelegate(data, onUpdateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            deleteListItem      \r\n    ******************************************************************/\r\n  function deleteListItem(id, callback) {\r\n    //[[\"ColName\", \"Value\"], [\"Col2\", \"Value2\"]]\r\n    //self.callbackDeleteListItem = callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var data = { callback: callback };\r\n    const oListItem = oList.getItemById(id);\r\n    oListItem.deleteObject();\r\n\r\n    function onDeleteListItemsSucceeded(sender, args) {\r\n      //alert('Item updated!');\r\n      callback();\r\n    }\r\n\r\n    function onDeleteListItemsFailed(sender, args) {\r\n      console.error(\r\n        \"sal.SPList.deleteListItem: Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onDeleteListItemsSucceeded),\r\n      Function.createDelegate(data, onDeleteListItemsFailed)\r\n    );\r\n  }\r\n\r\n  async function deleteListItemAsync(id) {\r\n    const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/items(${id})`;\r\n    return await fetchSharePointData(apiEndpoint, \"DELETE\", {\r\n      \"If-Match\": \"*\",\r\n    });\r\n    // return new Promise((resolve, reject) => deleteListItem(id, resolve));\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Permissions  \r\n    ******************************************************************/\r\n  /**\r\n   * Documentation - setItemPermissions\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {ItemPermissions} itemPermissions an instance of ItemPermissions\r\n   */\r\n  async function setItemPermissionsAsync(id, itemPermissions, reset) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n\r\n    const oListItem = await getoListItemByIdAsync(id);\r\n\r\n    return setResourcePermissionsAsync(oListItem, itemPermissions, reset);\r\n  }\r\n\r\n  async function setResourcePermissionsAsync(\r\n    oListItem,\r\n    itemPermissions,\r\n    reset\r\n  ) {\r\n    if (reset) {\r\n      oListItem.resetRoleInheritance();\r\n      oListItem.breakRoleInheritance(false, false);\r\n    }\r\n\r\n    // const result = await new Promise((resolve, reject) => {\r\n    //   currCtx.executeQueryAsync(\r\n    //     () => {\r\n    //       resolve();\r\n    //     },\r\n    //     (sender, args) => {\r\n    //       console.error(\r\n    //         \"Failed to break permissions on item: \" +\r\n    //           this.oListItem.get_lookupValue() +\r\n    //           args.get_message(),\r\n    //         args\r\n    //       );\r\n    //       reject();\r\n    //     }\r\n    //   );\r\n    // });\r\n\r\n    for (const role of itemPermissions.roles) {\r\n      const ensuredPrincipalResult = await ensureUserByKeyAsync(\r\n        role.principal.Title\r\n      );\r\n      if (!ensuredPrincipalResult) return;\r\n\r\n      const currCtx2 = new SP.ClientContext.get_current();\r\n      const web = currCtx2.get_web();\r\n\r\n      const oPrincipal = ensuredPrincipalResult.oPrincipal;\r\n\r\n      currCtx2.load(oPrincipal);\r\n\r\n      role.roleDefs.map((roleDef) => {\r\n        const roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx2);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(roleDef.name)\r\n        );\r\n        oListItem.get_roleAssignments().add(oPrincipal, roleDefBindingColl);\r\n      });\r\n\r\n      const data = {};\r\n      await executeQuery(currCtx2).catch(({ sender, args }) => {\r\n        console.error(\r\n          `Failed to set role permissions on item id ${id} for principal ${role.principal.Title} ` +\r\n            args.get_message(),\r\n          args\r\n        );\r\n      });\r\n    }\r\n\r\n    if (reset) {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n\r\n      oListItem\r\n        .get_roleAssignments()\r\n        .getByPrincipal(sal.globalConfig.currentUser)\r\n        .deleteObject();\r\n\r\n      await executeQuery(currCtx).catch(({ sender, args }) => {\r\n        console.error(\r\n          `Failed to remove role permissions on item id ${id} for Current User ` +\r\n            args.get_message(),\r\n          args\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  function getoListItemByIdAsync(id) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const oListItem = oList.getItemById(id);\r\n      currCtx.executeQueryAsync(\r\n        () => {\r\n          resolve(oListItem);\r\n        },\r\n        (sender, args) => {\r\n          console.error(\r\n            \"Failed to find item: \" + id + args.get_message(),\r\n            args\r\n          );\r\n          reject();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Documentation - getItemPermissionsAsync\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {Function} callback The callback function to execute after\r\n   *  obtaining permissions\r\n   */\r\n  function getItemPermissionsAsync(id) {\r\n    return new Promise((resolve, reject) => {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var oList = web.get_lists().getByTitle(self.config.def.title);\r\n      var camlQuery = new SP.CamlQuery();\r\n      camlQuery.set_viewXml(\r\n        '<View><Query><Where><Eq><FieldRef Name=\"ID\"/><Value Type=\"Text\">' +\r\n          id +\r\n          \"</Value></Eq></Where></Query></View>\"\r\n      );\r\n\r\n      var oListItems = oList.getItems(camlQuery);\r\n\r\n      currCtx.load(\r\n        oListItems,\r\n        \"Include(ID, HasUniqueRoleAssignments, RoleAssignments, RoleAssignments.Include(Member, RoleDefinitionBindings))\"\r\n      );\r\n\r\n      function onQuerySuccess() {\r\n        var listItemEnumerator = oListItems.getEnumerator();\r\n\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItem = listItemEnumerator.get_current();\r\n          var itemPermissions = new ItemPermissions({\r\n            hasUniqueRoleAssignments: oListItem.get_hasUniqueRoleAssignments(),\r\n            roles: [],\r\n          });\r\n\r\n          var roleEnumerator = oListItem.get_roleAssignments().getEnumerator();\r\n          // enumerate the roles\r\n          while (roleEnumerator.moveNext()) {\r\n            var roleColl = roleEnumerator.get_current();\r\n            const role = Role.fromJsomRole(roleColl);\r\n            // var principal = roleColl.get_member();\r\n\r\n            // const roleDef = {\r\n            //   principal: principalToPeople(principal),\r\n            //   permissions: [],\r\n            // };\r\n\r\n            // const roleDefBindingCollEnumerator = roleColl\r\n            //   .get_roleDefinitionBindings()\r\n            //   .getEnumerator();\r\n            // while (roleDefBindingCollEnumerator.moveNext()) {\r\n            //   const role = roleDefBindingCollEnumerator.get_current();\r\n            //   roleDef.permissions.push(role.get_name());\r\n            // }\r\n            itemPermissions.roles.push(role);\r\n          }\r\n          resolve(itemPermissions);\r\n          break;\r\n        }\r\n      }\r\n\r\n      function onQueryFailed(sender, args) {\r\n        reject(args.get_message());\r\n      }\r\n\r\n      const data = {\r\n        oListItems,\r\n        resolve,\r\n        reject,\r\n      };\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onQuerySuccess),\r\n        Function.createDelegate(data, onQueryFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getListPermissions() {\r\n    const url =\r\n      `/web/lists/getByTitle('${self.config.def.name}')` +\r\n      `?$select=HasUniqueRoleAssignments,RoleAssignments` +\r\n      `&$expand=RoleAssignments/Member,RoleAssignments/RoleDefinitionBindings`;\r\n\r\n    const headers = {\r\n      \"Cache-Control\": \"no-cache\",\r\n    };\r\n    const result = await fetchSharePointData(url, \"GET\", headers);\r\n\r\n    if (!result) return;\r\n\r\n    return ItemPermissions.fromRestResult(result.d);\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Folders          \r\n    ******************************************************************/\r\n\r\n  function getServerRelativeFolderPath(relFolderPath) {\r\n    let builtPath = sal.globalConfig.siteUrl;\r\n\r\n    builtPath += self.config.def.isLib\r\n      ? \"/\" + self.config.def.name\r\n      : \"/Lists/\" + self.config.def.name;\r\n\r\n    if (relFolderPath) {\r\n      builtPath += \"/\" + relFolderPath;\r\n    }\r\n\r\n    return builtPath;\r\n  }\r\n\r\n  function upsertFolderPathAsync(folderPath) {\r\n    if (self.config.def.isLib) {\r\n      return new Promise((resolve, reject) =>\r\n        upsertLibFolderByPath(folderPath, resolve)\r\n      );\r\n    }\r\n    return new Promise((resolve, reject) =>\r\n      upsertListFolderByPath(folderPath, resolve)\r\n    );\r\n  }\r\n\r\n  async function setFolderReadonlyAsync(folderPath) {\r\n    try {\r\n      const currentPerms = await getFolderPermissionsAsync(folderPath);\r\n\r\n      const targetPerms = currentPerms.map((user) => {\r\n        return [user.LoginName, sal.config.siteRoles.roles.RestrictedRead];\r\n      });\r\n      await setFolderPermissionsAsync(folderPath, targetPerms, true);\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n    return;\r\n  }\r\n\r\n  async function ensureFolderPermissionsAsync(relFolderPath, targetPerms) {\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const apiEndpoint =\r\n      sal.globalConfig.siteUrl +\r\n      `/_api/web/GetFolderByServerRelativeUrl('${serverRelFolderPath}')/` +\r\n      \"ListItemAllFields/RoleAssignments?$expand=Member,Member/Users,RoleDefinitionBindings\";\r\n\r\n    const response = await fetch(apiEndpoint, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json; odata=verbose\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      if (response.status == 404) {\r\n        return;\r\n      }\r\n      console.error(response);\r\n    }\r\n    const result = await response.json();\r\n    const permissionResults = result?.d?.results;\r\n    if (!permissionResults) {\r\n      console.warn(\"No results found\", result);\r\n      return;\r\n    }\r\n\r\n    const missingPerms = targetPerms.filter((targetPermPair) => {\r\n      const targetLoginName = targetPermPair[0];\r\n      const targetPerm = targetPermPair[1];\r\n      // find an existing matching permissiont\r\n      const permExists = permissionResults.find((curPerm) => {\r\n        // If the target user isn't the member\r\n        if (curPerm.Member.LoginName != targetLoginName) {\r\n          // Or the member is a group that the target user isn't in\r\n          if (\r\n            !curPerm.Member.Users?.results.find(\r\n              (curUser) => curUser.LoginName == targetLoginName\r\n            )\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // The target principal has permissions assigned, let see if they include the target permission\r\n        if (\r\n          curPerm.RoleDefinitionBindings.results?.find((curBinding) =>\r\n            sal.config.siteRoles.fulfillsRole(curBinding.Name, targetPerm)\r\n          )\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        // Finally, the target principal is assigned, but don't have the appropriate permissions\r\n        return false;\r\n      });\r\n\r\n      return !permExists;\r\n    });\r\n\r\n    console.log(\"Adding missing permissions\", missingPerms);\r\n    if (missingPerms.length)\r\n      await setFolderPermissionsAsync(relFolderPath, missingPerms, false);\r\n\r\n    return;\r\n  }\r\n  /*****************************************************************\r\n                            List Folders          \r\n    ******************************************************************/\r\n  function getFolderContentsAsync(relFolderPath, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      // TODO: everything is the same as getListItems except for the caml query\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n      camlQuery.set_folderServerRelativeUrl(serverRelFolderPath);\r\n      const allItems = oList.getItems(camlQuery);\r\n\r\n      currCtx.load(allItems, `Include(${fields.join(\", \")})`);\r\n\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const foundObjects = [];\r\n          var listItemEnumerator = allItems.getEnumerator();\r\n          while (listItemEnumerator.moveNext()) {\r\n            var oListItem = listItemEnumerator.get_current();\r\n            var listObj = {};\r\n            fields.forEach((field) => {\r\n              var colVal = oListItem.get_item(field);\r\n              //console.log(`SAL: Setting ${field} to`, colVal);\r\n              listObj[field] = Array.isArray(colVal)\r\n                ? colVal.map((val) => mapListItemToObject(val))\r\n                : mapListItemToObject(colVal);\r\n            });\r\n            //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n            listObj.oListItem = oListItem;\r\n            foundObjects.push(listObj);\r\n          }\r\n          resolve(foundObjects);\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load list folder contents:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderPermissionsAsync(relFolderPath) {\r\n    return new Promise(async (resolve, reject) => {\r\n      const oListItem = await getFolderItemByPath(relFolderPath);\r\n      if (!oListItem) {\r\n        reject(\"Folder item does not exist\");\r\n        return;\r\n      }\r\n      const roles = oListItem.get_roleAssignments();\r\n\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      currCtx.load(oListItem);\r\n      currCtx.load(roles);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const currCtx = new SP.ClientContext.get_current();\r\n          console.log(oListItem);\r\n          const principals = [];\r\n          const bindings = [];\r\n          const roleEnumerator = roles.getEnumerator();\r\n          // enumerate the roles\r\n          while (roleEnumerator.moveNext()) {\r\n            const role = roleEnumerator.get_current();\r\n            const principal = role.get_member();\r\n            const bindings = role.get_roleDefinitionBindings();\r\n            // get the principal\r\n            currCtx.load(bindings);\r\n            currCtx.load(principal);\r\n            principals.push({ principal: principal, bindings: bindings });\r\n          }\r\n          currCtx.executeQueryAsync(\r\n            // success\r\n            function (sender, args) {\r\n              // alert the title\r\n              //alert(principal.get_title());\r\n\r\n              const logins = principals.map(function ({ principal, bindings }) {\r\n                const principalRoles = [];\r\n                const bindingEnumerator = bindings.getEnumerator();\r\n                while (bindingEnumerator.moveNext()) {\r\n                  const binding = bindingEnumerator.get_current();\r\n                  principalRoles.push(binding.get_name());\r\n                }\r\n                return {\r\n                  ID: principal.get_id(),\r\n                  Title: principal.get_title(),\r\n                  LoginName: principal.get_loginName(),\r\n                  Roles: principalRoles,\r\n                };\r\n              });\r\n              resolve(logins);\r\n            },\r\n            // failure\r\n            function (sender, args) {\r\n              console.warn(\"Unable load folder principals permissions:\");\r\n              console.error(sender);\r\n              console.error(args);\r\n              reject(args);\r\n            }\r\n          );\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load folder permissions:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderItemByPath(relFolderPath) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      var camlq =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><And><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">1</Value>' +\r\n        \"</Eq><Eq>\" +\r\n        '<FieldRef Name=\"FileRef\"/><Value Type=\"Text\">' +\r\n        serverRelFolderPath +\r\n        \"</Value>\" +\r\n        \"</Eq></And></Where></Query><RowLimit>1</RowLimit></View>\";\r\n\r\n      camlQuery.set_viewXml(camlq);\r\n\r\n      const allFolders = oList.getItems(camlQuery);\r\n\r\n      async function onFindItemSucceeded() {\r\n        const foundObjects = [];\r\n        var listItemEnumerator = allFolders.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          // Should be only one item\r\n          const oListItem = listItemEnumerator.get_current();\r\n          foundObjects.push(oListItem);\r\n        }\r\n\r\n        if (!foundObjects) {\r\n          console.warn(\"folder not found\");\r\n          resolve(foundObjects);\r\n        }\r\n\r\n        if (foundObjects.length > 1) {\r\n          console.warn(\"Multiple folders found!\");\r\n          resolve(foundObjects);\r\n        }\r\n        const oListItem = foundObjects[0];\r\n        resolve(oListItem);\r\n      }\r\n\r\n      function onFindItemFailed(sender, args) {\r\n        console.warn(\"Unable load list folder contents:\");\r\n        console.error(sender);\r\n        console.error(args);\r\n        reject(args);\r\n      }\r\n      const data = {\r\n        allFolders,\r\n        resolve,\r\n        reject,\r\n      };\r\n      currCtx.load(allFolders);\r\n\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onFindItemSucceeded),\r\n        Function.createDelegate(data, onFindItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Document Libraries Folders\r\n    ******************************************************************/\r\n\r\n  /*****************************************************************\r\n                        Folder Creation          \r\n    ******************************************************************/\r\n\r\n  function upsertListFolderByPath(folderPath, callback) {\r\n    var folderArr = folderPath.split(\"/\");\r\n    var idx = 0;\r\n\r\n    var upsertListFolderInner = function (parentPath, folderArr, idx, success) {\r\n      var folderName = folderArr[idx];\r\n      idx++;\r\n      var curPath = folderArr.slice(0, idx).join(\"/\");\r\n      ensureListFolder(\r\n        curPath,\r\n        function (iFolder) {\r\n          if (idx >= folderArr.length) {\r\n            //We've reached the innermost folder and found it exists\r\n            success(iFolder.get_id());\r\n          } else {\r\n            upsertListFolderInner(curPath, folderArr, idx, success);\r\n          }\r\n        },\r\n        function () {\r\n          self.createListFolder(\r\n            folderName,\r\n            function (folderId) {\r\n              if (idx >= folderArr.length) {\r\n                //We've reached the innermost folder and found it exists\r\n                success(folderId);\r\n              } else {\r\n                upsertListFolderInner(curPath, folderArr, idx, success);\r\n              }\r\n            },\r\n            parentPath\r\n          );\r\n        }\r\n      );\r\n    };\r\n    upsertListFolderInner(\"\", folderArr, idx, callback);\r\n  }\r\n\r\n  /**\r\n   * CreateListFolder\r\n   * Creates a folder at the specified path\r\n   * @param {String} folderName\r\n   * @param {Function} callback\r\n   * @param {String} path\r\n   */\r\n  self.createListFolder = function (folderName, callback, path) {\r\n    path = path === undefined ? \"\" : path;\r\n\r\n    // Used for lists, duh\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n    let folderUrl = \"\";\r\n    const itemCreateInfo = new SP.ListItemCreationInformation();\r\n    itemCreateInfo.set_underlyingObjectType(SP.FileSystemObjectType.folder);\r\n    itemCreateInfo.set_leafName(folderName);\r\n    if (path) {\r\n      folderUrl =\r\n        sal.globalConfig.siteUrl +\r\n        \"/Lists/\" +\r\n        self.config.def.name +\r\n        \"/\" +\r\n        path;\r\n      itemCreateInfo.set_folderUrl(folderUrl);\r\n    }\r\n\r\n    const newItem = oList.addItem(itemCreateInfo);\r\n    newItem.set_item(\"Title\", folderName);\r\n\r\n    newItem.update();\r\n\r\n    function onCreateFolderSucceeded(sender, args) {\r\n      callback(this.newItem.get_id());\r\n    }\r\n\r\n    function onCreateFolderFailed(sender, args) {\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n\" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    const data = {\r\n      folderName: folderName,\r\n      callback: callback,\r\n      newItem: newItem,\r\n    };\r\n\r\n    currCtx.load(newItem);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateFolderSucceeded),\r\n      Function.createDelegate(data, onCreateFolderFailed)\r\n    );\r\n  };\r\n\r\n  function ensureListFolder(path, onExists, onNonExists) {\r\n    var folderUrl =\r\n      sal.globalConfig.siteUrl + \"/Lists/\" + self.config.def.name + \"/\" + path;\r\n\r\n    var ctx = SP.ClientContext.get_current();\r\n\r\n    // Could also call getFileByServerRelativeUrl() here. Doesn't matter.\r\n    // The way this works is identical for files and folders.\r\n    var folder = ctx.get_web().getFolderByServerRelativeUrl(folderUrl);\r\n    folder.get_listItemAllFields();\r\n    var data = {\r\n      folder: folder,\r\n      path: path,\r\n      onExists: onExists,\r\n      onNonExists: onNonExists,\r\n    };\r\n    ctx.load(folder, \"Exists\", \"Name\");\r\n\r\n    function onQueryFolderSucceeded() {\r\n      if (folder.get_exists()) {\r\n        // Folder exists and isn't hidden from us. Print its name.\r\n        console.log(\r\n          \"Folder \" + folder.get_name() + \" exists in \" + self.config.def.name\r\n        );\r\n        var currCtx = new SP.ClientContext.get_current();\r\n\r\n        var folderItem = folder.get_listItemAllFields();\r\n        function onQueryFolderItemSuccess() {\r\n          onExists(folderItem);\r\n        }\r\n        function onQueryFolderItemFailure(sender, args) {\r\n          console.error(\"Failed to find folder at \" + path, args);\r\n        }\r\n        data = { folderItem: folderItem, path: path, onExists: onExists };\r\n        currCtx.load(folderItem);\r\n        currCtx.executeQueryAsync(\r\n          Function.createDelegate(data, onQueryFolderItemSuccess),\r\n          Function.createDelegate(data, onQueryFolderItemFailure)\r\n        );\r\n      } else {\r\n        console.warn(\"Folder exists but is hidden (security-trimmed) for us.\");\r\n      }\r\n    }\r\n\r\n    function onQueryFolderFailed(sender, args) {\r\n      if (args.get_errorTypeName() === \"System.IO.FileNotFoundException\") {\r\n        // Folder doesn't exist at all.\r\n        console.log(\r\n          \"SAL.SPList.ensureListFolder: \\\r\n          Folder \" +\r\n            path +\r\n            \" does not exist in \" +\r\n            self.config.def.name\r\n        );\r\n        onNonExists();\r\n      } else {\r\n        // An unexpected error occurred.\r\n        console.error(\"Error: \" + args.get_message());\r\n      }\r\n    }\r\n    ctx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryFolderSucceeded),\r\n      Function.createDelegate(data, onQueryFolderFailed)\r\n    );\r\n  }\r\n\r\n  function upsertLibFolderByPath(folderUrl, success) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    // TODO: Check if the folder exists before adding it\r\n\r\n    var createFolderInternal = function (parentFolder, folderUrl, success) {\r\n      var ctx = parentFolder.get_context();\r\n      var folderNames = folderUrl.split(\"/\");\r\n      var folderName = folderNames[0];\r\n      var curFolder = parentFolder.get_folders().add(folderName);\r\n      ctx.load(curFolder);\r\n      ctx.executeQueryAsync(\r\n        function () {\r\n          if (folderNames.length > 1) {\r\n            var subFolderUrl = folderNames\r\n              .slice(1, folderNames.length)\r\n              .join(\"/\");\r\n            createFolderInternal(curFolder, subFolderUrl, success);\r\n          } else {\r\n            success(curFolder);\r\n          }\r\n        },\r\n        function (sender, args) {\r\n          console.error(\"error creating new folder\");\r\n          console.error(sender);\r\n          console.error(error);\r\n        }\r\n      );\r\n    };\r\n    createFolderInternal(oList.get_rootFolder(), folderUrl, success);\r\n  }\r\n\r\n  function setFolderPermissionsAsync(folderPath, valuePairs, reset) {\r\n    return new Promise((resolve, reject) => {\r\n      setFolderPermissions(folderPath, valuePairs, resolve, reset);\r\n    });\r\n  }\r\n\r\n  function setFolderPermissions(relFolderPath, valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n    // TODO: Validate that the users exist\r\n    var users = [];\r\n    var resolvedGroups = [];\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const folder = web.getFolderByServerRelativeUrl(serverRelFolderPath);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup?.oGroup) {\r\n        resolvedGroups.push([resolvedGroup.oGroup, vp[1]]);\r\n      } else {\r\n        //This doesn't appear to be a group, let's see if we can find a user\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindFolderSuccess() {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var folderItem = this.folder.get_listItemAllFields();\r\n      if (reset) {\r\n        folderItem.resetRoleInheritance();\r\n        folderItem.breakRoleInheritance(false, false);\r\n        folderItem\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        folderItem.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { folderItem: folderItem, callback: callback };\r\n\r\n      function onSetFolderPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        this.callback(folderItem);\r\n      }\r\n\r\n      function onSetFolderPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on item: \" +\r\n            this.folderItem.get_lookupValue() +\r\n            args.get_message() +\r\n            \"\\n\" +\r\n            args.get_stackTrace(),\r\n          false\r\n        );\r\n      }\r\n\r\n      currCtx.load(folderItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetFolderPermissionsSuccess),\r\n        Function.createDelegate(data, onSetFolderPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindFolderFailure(sender, args) {\r\n      console.error(\r\n        \"Something went wrong setting perms on library folder\",\r\n        args\r\n      );\r\n    }\r\n\r\n    var data = {\r\n      folder: folder,\r\n      users: users,\r\n      callback: callback,\r\n      resolvedGroups: resolvedGroups,\r\n      valuePairs: valuePairs,\r\n      reset: reset,\r\n    };\r\n\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.load(folder);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindFolderSuccess),\r\n      Function.createDelegate(data, onFindFolderFailure)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                                  \r\n  ******************************************************************/\r\n\r\n  function showModal(formName, title, args, callback) {\r\n    var id = \"\";\r\n    if (args.id) {\r\n      id = args.id;\r\n    }\r\n    const options = SP.UI.$create_DialogOptions();\r\n\r\n    var listPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    var rootFolder = \"\";\r\n\r\n    if (args.rootFolder) {\r\n      rootFolder = sal.globalConfig.siteUrl + listPath + args.rootFolder;\r\n    }\r\n\r\n    // WARNING: this looks similar to listPath but is different\r\n    var formsPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/forms/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    Object.assign(options, {\r\n      title: title,\r\n      dialogReturnValueCallback: callback,\r\n      args: JSON.stringify(args),\r\n      height: 800,\r\n      url:\r\n        sal.globalConfig.siteUrl +\r\n        formsPath +\r\n        formName +\r\n        \"?ID=\" +\r\n        id +\r\n        \"&Source=\" +\r\n        location.pathname +\r\n        \"&RootFolder=\" +\r\n        rootFolder,\r\n    });\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n\r\n    // SP.SOD.execute(\r\n    //   \"sp.ui.dialog.js\",\r\n    //   \"SP.UI.ModalDialog.showModalDialog\",\r\n    //   options\r\n    // );\r\n  }\r\n\r\n  function showCheckinModal(fileRef, callback) {\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"Check in Document\";\r\n    options.height = \"600\";\r\n    options.dialogReturnValueCallback = callback;\r\n\r\n    options.url =\r\n      sal.globalConfig.siteUrl +\r\n      \"/_layouts/checkin.aspx?List={\" +\r\n      self.config.guid +\r\n      \"}&FileName=\" +\r\n      fileRef;\r\n\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function checkinWithComment(fileRef, comment) {\r\n    const url = `/web/GetFileByServerRelativeUrl('${fileRef}')/CheckIn(comment='${comment}',checkintype=0)`;\r\n    return fetchSharePointData(url, \"POST\");\r\n  }\r\n\r\n  function showVersionHistoryModal(itemId) {\r\n    return new Promise((resolve) => {\r\n      var options = SP.UI.$create_DialogOptions();\r\n      options.title = \"Version History\";\r\n      options.height = \"600\";\r\n      options.dialogReturnValueCallback = resolve;\r\n\r\n      options.url = getVersionHistoryUrl(itemId);\r\n\r\n      SP.UI.ModalDialog.showModalDialog(options);\r\n    });\r\n  }\r\n\r\n  function getVersionHistoryUrl(itemId) {\r\n    return (\r\n      sal.globalConfig.siteUrl +\r\n      \"/_layouts/15/versions.aspx?List={\" +\r\n      self.config.guid +\r\n      \"}&ID=\" +\r\n      itemId\r\n    );\r\n  }\r\n\r\n  function uploadNewDocumentAsync(folderPath, title, args) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          //folder = folder != '/' ? folder : '';\r\n\r\n          var siteString =\r\n            sal.globalConfig.siteUrl == \"/\" ? \"\" : sal.globalConfig.siteUrl;\r\n\r\n          const options = SP.UI.$create_DialogOptions();\r\n          Object.assign(options, {\r\n            title: title,\r\n            dialogReturnValueCallback: resolve,\r\n            args: JSON.stringify(args),\r\n            url:\r\n              siteString +\r\n              \"/_layouts/Upload.aspx?List=\" +\r\n              oList.get_id().toString() +\r\n              \"&RootFolder=\" +\r\n              siteString +\r\n              \"/\" +\r\n              self.config.def.name +\r\n              \"/\" +\r\n              encodeURI(folderPath) +\r\n              \"&Source=\" +\r\n              location.pathname +\r\n              \"&args=\" +\r\n              encodeURI(JSON.stringify(args)),\r\n          });\r\n          //console.log(\"Options url: \" + options.url);\r\n          SP.UI.ModalDialog.showModalDialog(options);\r\n          // SP.SOD.execute(\r\n          //   \"sp.ui.dialog.js\",\r\n          //   \"SP.UI.ModalDialog.showModalDialog\",\r\n          //   options\r\n          // );\r\n        },\r\n        function (sender, args) {\r\n          console.error(\"Error showing file modal: \");\r\n          console.error(sender);\r\n          console.error(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  const UPLOADCHUNKSIZE = 10485760; // PnPJs\r\n  // const UPLOADCHUNKSIZE = 262144000; // SPO\r\n\r\n  const uploadchunkActionTypes = {\r\n    start: \"startupload\",\r\n    continue: \"continueupload\",\r\n    finish: \"finishupload\",\r\n  };\r\n\r\n  async function uploadFileRestChunking(\r\n    file,\r\n    relFolderPath,\r\n    fileName,\r\n    progress\r\n  ) {\r\n    /* https://sharepoint.stackexchange.com/questions/287334/upload-files-250mb-via-sharepoint-rest-api\r\nhttps://learn.microsoft.com/en-us/previous-versions/office/developer/sharepoint-rest-reference/dn450841(v=office.15)\r\n    */\r\n    const blob = file;\r\n    const chunkSize = UPLOADCHUNKSIZE;\r\n    const fileSize = file.size;\r\n\r\n    const totalBlocks =\r\n      parseInt((fileSize / chunkSize).toString(), 10) +\r\n      (fileSize % chunkSize === 0 ? 1 : 0);\r\n\r\n    const fileRef = relFolderPath + \"/\" + fileName;\r\n\r\n    const jobGuid = getGUID();\r\n    // const jobGuid = crypto.randomUUID\r\n    //   ? crypto.randomUUID()\r\n    //   : \"74493426-fb10-4e47-bc82-120954b81a60\";\r\n\r\n    let currentPointer;\r\n    progress({ currentBlock: 0, totalBlocks });\r\n    currentPointer = await startUpload(\r\n      jobGuid,\r\n      file.slice(0, chunkSize),\r\n      fileRef,\r\n      relFolderPath\r\n    );\r\n\r\n    for (i = 2; i < totalBlocks; i++) {\r\n      progress({ currentBlock: i, totalBlocks });\r\n      currentPointer = await continueUpload(\r\n        jobGuid,\r\n        file.slice(currentPointer, currentPointer + chunkSize),\r\n        currentPointer,\r\n        fileRef\r\n      );\r\n    }\r\n\r\n    progress({ currentBlock: totalBlocks - 1, totalBlocks });\r\n    const result = await finishUpload(\r\n      jobGuid,\r\n      file.slice(currentPointer),\r\n      currentPointer,\r\n      fileRef\r\n    );\r\n\r\n    progress({ currentBlock: totalBlocks, totalBlocks });\r\n\r\n    return result;\r\n  }\r\n\r\n  async function startUpload(uploadId, chunk, fileRef, relFolderPath) {\r\n    const url =\r\n      `/web/getFolderByServerRelativeUrl(@folder)/files/getByUrlOrAddStub(@file)/StartUpload(guid'${uploadId}')?` +\r\n      `&@folder='${relFolderPath}'&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.StartUpload);\r\n  }\r\n\r\n  async function continueUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/ContinueUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.ContinueUpload);\r\n  }\r\n\r\n  async function finishUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/FinishUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  async function uploadFileRest(file, relFolderPath, fileName) {\r\n    return await fetch(\r\n      _spPageContextInfo.webServerRelativeUrl +\r\n        `/_api/web/GetFolderByServerRelativeUrl('${relFolderPath}')/Files/add(url='${fileName}',overwrite=true)`,\r\n      {\r\n        method: \"POST\",\r\n        credentials: \"same-origin\",\r\n        body: file,\r\n        headers: {\r\n          Accept: \"application/json; odata=verbose\",\r\n          \"Content-Type\": \"application/json;odata=nometadata\",\r\n          \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Uploading File\", response);\r\n        return;\r\n      }\r\n\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  async function uploadFileToFolderAndUpdateMetadata(\r\n    file,\r\n    fileName,\r\n    relFolderPath,\r\n    payload,\r\n    progress = null\r\n  ) {\r\n    if (!progress) {\r\n      progress = () => {};\r\n    }\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n    let result = null;\r\n    if (file.size > UPLOADCHUNKSIZE) {\r\n      const job = () =>\r\n        uploadFileRestChunking(file, serverRelFolderPath, fileName, progress);\r\n      result = await uploadQueue.addJob(job);\r\n    } else {\r\n      progress({ currentBlock: 0, totalBlocks: 1 });\r\n      result = await uploadFileRest(file, serverRelFolderPath, fileName);\r\n      progress({ currentBlock: 1, totalBlocks: 1 });\r\n    }\r\n\r\n    await updateUploadedFileMetadata(result.d, payload);\r\n\r\n    // check in\r\n    await checkinWithComment(serverRelFolderPath + \"/\" + fileName, \"\");\r\n\r\n    let itemUri = result.d.ListItemAllFields.__deferred.uri + \"?$select=ID\";\r\n\r\n    const listItem = await fetchSharePointData(itemUri);\r\n    return listItem.d.ID;\r\n  }\r\n\r\n  async function updateUploadedFileMetadata(fileResult, payload) {\r\n    var result = await fetch(fileResult.ListItemAllFields.__deferred.uri, {\r\n      method: \"POST\",\r\n      credentials: \"same-origin\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        Accept: \"application/json; odata=nometadata\",\r\n        \"Content-Type\": \"application/json;odata=nometadata\",\r\n        \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        \"X-HTTP-Method\": \"MERGE\",\r\n        \"If-Match\": \"*\",\r\n      },\r\n    }).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Updating File\", response);\r\n        return;\r\n      }\r\n\r\n      return response;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function copyFiles(sourceFolderPath, destFolderPath, callback, onError) {\r\n    const sourcePath = getServerRelativeFolderPath(sourceFolderPath);\r\n    const destPath = getServerRelativeFolderPath(destFolderPath);\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourcePath);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destPath + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \") + args.get_message();\r\n            onError;\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.error(\"Unable to copy files: \", args.get_message());\r\n        console.error(sender);\r\n        console.error(args);\r\n        reject(args);\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    // TODO: this should stay as a static utility instead of list specific\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n\r\n  // Ensure List/Library exists on the site\r\n  async function ensureList() {\r\n    // Query List Title\r\n    const listInfo = await fetchSharePointData(\r\n      `/web/lists/GetByTitle('${self.config.def.title}')`\r\n    );\r\n  }\r\n\r\n  const publicMembers = {\r\n    findByIdAsync,\r\n    getById,\r\n    findByColumnValueAsync,\r\n    loadNextPage,\r\n    getListItemsAsync,\r\n    createListItemAsync,\r\n    updateListItemAsync,\r\n    deleteListItemAsync,\r\n    setItemPermissionsAsync,\r\n    getItemPermissionsAsync,\r\n    getListPermissions,\r\n    setListPermissionsAsync,\r\n    getFolderContentsAsync,\r\n    upsertFolderPathAsync,\r\n    getServerRelativeFolderPath,\r\n    setFolderReadonlyAsync,\r\n    setFolderPermissionsAsync,\r\n    ensureFolderPermissionsAsync,\r\n    uploadFileToFolderAndUpdateMetadata,\r\n    uploadNewDocumentAsync,\r\n    copyFilesAsync,\r\n    showModal,\r\n    showCheckinModal,\r\n    showVersionHistoryModal,\r\n    getVersionHistoryUrl,\r\n  };\r\n\r\n  return publicMembers;\r\n}\r\n\r\nasync function fetchSharePointData(\r\n  uri,\r\n  method = \"GET\",\r\n  headers = {},\r\n  opts = {}\r\n) {\r\n  const siteEndpoint = uri.startsWith(\"http\")\r\n    ? uri\r\n    : sal.globalConfig.siteUrl + \"/_api\" + uri;\r\n  const response = await fetch(siteEndpoint, {\r\n    method,\r\n    headers: {\r\n      Accept: \"application/json; odata=verbose\",\r\n      \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n      ...headers,\r\n    },\r\n    ...opts,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    if (response.status == 404) {\r\n      return;\r\n    }\r\n    console.error(response);\r\n  }\r\n  try {\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (e) {\r\n    return;\r\n  }\r\n}\r\n\r\nwindow.fetchSharePointData = fetchSharePointData;\r\n\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* eslint-disable no-bitwise */\r\nfunction getGUID() {\r\n  if (crypto.randomUUID) return crypto.randomUUID();\r\n\r\n  let d = Date.now();\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    const r = (d + Math.random() * 16) % 16 | 0;\r\n    d = Math.floor(d / 16);\r\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n  });\r\n}\r\n\r\nclass UploadQueue {\r\n  constructor() {}\r\n\r\n  jobs = [];\r\n  _queue = [];\r\n\r\n  enqueue(job) {\r\n    this._queue.push(job);\r\n  }\r\n\r\n  async dequeue() {\r\n    this._queue.shift();\r\n  }\r\n\r\n  async doWork() {\r\n    const job = await this.dequeue();\r\n  }\r\n\r\n  addJob(job) {\r\n    return new Promise((resolve) => {\r\n      this.enqueue(job);\r\n    });\r\n  }\r\n}\r\n\r\nclass JobProcessor {\r\n  constructor(maxConcurrency) {\r\n    this.maxConcurrency = maxConcurrency;\r\n    this.runningJobs = 0;\r\n    this.queue = [];\r\n  }\r\n\r\n  addJob(asyncFunction) {\r\n    return new Promise((resolve, reject) => {\r\n      const job = async () => {\r\n        try {\r\n          const result = await asyncFunction();\r\n          resolve(result);\r\n        } catch (error) {\r\n          reject(error);\r\n        } finally {\r\n          this.runningJobs--;\r\n          this.processQueue();\r\n        }\r\n      };\r\n\r\n      this.queue.push(job);\r\n      this.processQueue();\r\n    });\r\n  }\r\n\r\n  processQueue() {\r\n    while (this.runningJobs < this.maxConcurrency && this.queue.length > 0) {\r\n      const job = this.queue.shift();\r\n      this.runningJobs++;\r\n      job();\r\n    }\r\n  }\r\n}\r\n\r\nconst uploadQueue = new JobProcessor(5);\r\n", "export const assetsPath = \"/sites/CGFS/Style Library/apps/audit/src\";\r\n", "import { People } from \"../entities/index.js\";\r\nimport { ensureUserByKeyAsync } from \"./index.js\";\r\nimport { assetsPath } from \"../../env.js\";\r\n\r\nko.subscribable.fn.subscribeChanged = function (callback) {\r\n  var oldValue;\r\n  this.subscribe(\r\n    function (_oldValue) {\r\n      oldValue = _oldValue;\r\n    },\r\n    this,\r\n    \"beforeChange\"\r\n  );\r\n\r\n  this.subscribe(function (newValue) {\r\n    callback(newValue, oldValue);\r\n  });\r\n};\r\n\r\nko.observableArray.fn.subscribeAdded = function (callback) {\r\n  this.subscribe(\r\n    function (arrayChanges) {\r\n      const addedValues = arrayChanges\r\n        .filter((value) => value.status == \"added\")\r\n        .map((value) => value.value);\r\n      callback(addedValues);\r\n    },\r\n    this,\r\n    \"arrayChange\"\r\n  );\r\n};\r\n\r\nko.bindingHandlers.searchSelect = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {\r\n    const { options, selectedOptions, optionsText, onSearchInput } =\r\n      valueAccessor();\r\n\r\n    function populateOpts() {\r\n      const optionItems = ko.unwrap(options);\r\n\r\n      const optionElements = optionItems.map((option) => {\r\n        const optionElement = document.createElement(\"option\");\r\n        ko.selectExtensions.writeValue(optionElement, ko.unwrap(option));\r\n        // optionElement.value = option;\r\n        optionElement.innerText = optionsText(option);\r\n\r\n        if (\r\n          ko\r\n            .unwrap(selectedOptions)\r\n            ?.find((selectedOption) => selectedOption.ID == option.ID)\r\n        ) {\r\n          optionElement.setAttribute(\"selected\", \"\");\r\n        }\r\n        return optionElement;\r\n      });\r\n\r\n      element.append(...optionElements);\r\n    }\r\n\r\n    populateOpts();\r\n\r\n    if (ko.isObservable(options)) {\r\n      options.subscribe(() => populateOpts(), this);\r\n    }\r\n\r\n    ko.utils.registerEventHandler(element, \"change\", (e) => {\r\n      selectedOptions(\r\n        element.selectedOptions.map((opt) => ko.selectExtensions.readValue(opt))\r\n      );\r\n    });\r\n\r\n    if (onSearchInput) {\r\n      ko.utils.registerEventHandler(element, \"input\", (e) => {\r\n        onSearchInput(e.originalEvent.target.searchInputElement.value);\r\n      });\r\n    }\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const { selectedOptions } = valueAccessor();\r\n    const selectedUnwrapped = ko.unwrap(selectedOptions);\r\n\r\n    for (var i = 0; i < element.options.length; i++) {\r\n      const o = element.options[i];\r\n      o.toggleAttribute(\r\n        \"selected\",\r\n        selectedUnwrapped.includes(ko.selectExtensions.readValue(o))\r\n      );\r\n    }\r\n\r\n    // element.selectedOptions = ko.unwrap(selectedOptions);\r\n  },\r\n};\r\n\r\nko.bindingHandlers.people = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {\r\n    var schema = {};\r\n    schema[\"PrincipalAccountType\"] = \"User\";\r\n    schema[\"SearchPrincipalSource\"] = 15;\r\n    schema[\"ShowUserPresence\"] = true;\r\n    schema[\"ResolvePrincipalSource\"] = 15;\r\n    schema[\"AllowEmailAddresses\"] = true;\r\n    schema[\"AllowMultipleValues\"] = false;\r\n    schema[\"MaximumEntitySuggestions\"] = 50;\r\n    //schema[\"Width\"] = \"280px\";\r\n    schema[\"OnUserResolvedClientScript\"] = async function (elemId, userKeys) {\r\n      //  get reference of People Picker Control\r\n      var pickerControl = SPClientPeoplePicker.SPClientPeoplePickerDict[elemId];\r\n      var observable = valueAccessor();\r\n      var userJSObject = pickerControl.GetControlValueAsJSObject()[0];\r\n      if (!userJSObject) {\r\n        observable(null);\r\n        return;\r\n      }\r\n\r\n      if (userJSObject.IsResolved) {\r\n        if (userJSObject.Key == observable()?.LoginName) return;\r\n        var user = await ensureUserByKeyAsync(userJSObject.Key);\r\n        var person = new People(user);\r\n        observable(person);\r\n      }\r\n    };\r\n\r\n    // TODO: Minor - accept schema settings as options\r\n    //var mergedOptions = Object.assign(schema, obs.schemaOpts);\r\n\r\n    //  Initialize the Control, MS enforces to pass the Element ID hence we need to provide\r\n    //  ID to our element, no other options\r\n    SPClientPeoplePicker_InitStandaloneControlWrapper(element.id, null, schema);\r\n    // const helpDiv = document.createElement(\"div\");\r\n    // helpDiv.innerHTML = \"Search surname first e.g. Smith, John\";\r\n    // helpDiv.classList.add(\"fst-italic\", \"fw-lighter\");\r\n    // element.appendChild(helpDiv);\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    var pickerControl =\r\n      SPClientPeoplePicker.SPClientPeoplePickerDict[element.id + \"_TopSpan\"];\r\n    var userValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n    if (!userValue) {\r\n      // Clear the form\r\n      pickerControl?.DeleteProcessedUser();\r\n      return;\r\n    }\r\n\r\n    if (\r\n      userValue &&\r\n      !pickerControl\r\n        .GetAllUserInfo()\r\n        .find((pickerUser) => pickerUser.DisplayText == userValue.LookupValue)\r\n    ) {\r\n      pickerControl.AddUserKeys(\r\n        userValue.LoginName ?? userValue.LookupValue ?? userValue.Title\r\n      );\r\n    }\r\n  },\r\n};\r\n\r\nko.bindingHandlers.dateField = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {},\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {},\r\n};\r\n\r\nko.bindingHandlers.downloadLink = {\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    var path = valueAccessor();\r\n    var replaced = path.replace(/:([A-Za-z_]+)/g, function (_, token) {\r\n      return ko.unwrap(viewModel[token]);\r\n    });\r\n    element.href = replaced;\r\n  },\r\n};\r\n\r\nko.bindingHandlers.files = {\r\n  init: function (element, valueAccessor) {\r\n    function addFiles(fileList) {\r\n      var value = valueAccessor();\r\n      if (!fileList.length) {\r\n        value.removeAll();\r\n        return;\r\n      }\r\n\r\n      const existingFiles = ko.unwrap(value);\r\n      const newFileList = [];\r\n      for (let file of fileList) {\r\n        if (!existingFiles.find((exFile) => exFile.name == file.name))\r\n          newFileList.push(file);\r\n      }\r\n      ko.utils.arrayPushAll(value, newFileList);\r\n      return;\r\n    }\r\n\r\n    ko.utils.registerEventHandler(element, \"change\", function () {\r\n      addFiles(element.files);\r\n    });\r\n\r\n    const label = element.closest(\"label\");\r\n    if (!label) return;\r\n\r\n    ko.utils.registerEventHandler(label, \"dragover\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragenter\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.add(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragleave\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.remove(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"drop\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let dt = event.originalEvent.dataTransfer;\r\n      let files = dt.files;\r\n      addFiles(files);\r\n    });\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const value = valueAccessor();\r\n    if (!value().length && element.files.length) {\r\n      // clear all files\r\n      element.value = null;\r\n      return;\r\n    }\r\n\r\n    return;\r\n  },\r\n};\r\n\r\nko.bindingHandlers.toggleClick = {\r\n  init: function (element, valueAccessor, allBindings) {\r\n    var value = valueAccessor();\r\n\r\n    ko.utils.registerEventHandler(element, \"click\", function () {\r\n      var classToToggle = allBindings.get(\"toggleClass\");\r\n      var classContainer = allBindings.get(\"classContainer\");\r\n      var containerType = allBindings.get(\"containerType\");\r\n\r\n      if (containerType && containerType == \"sibling\") {\r\n        $(element)\r\n          .nextUntil(classContainer)\r\n          .each(function () {\r\n            $(this).toggleClass(classToToggle);\r\n          });\r\n      } else if (containerType && containerType == \"doc\") {\r\n        var curIcon = $(element).attr(\"src\");\r\n        if (curIcon == \"/_layouts/images/minus.gif\")\r\n          $(element).attr(\"src\", \"/_layouts/images/plus.gif\");\r\n        else $(element).attr(\"src\", \"/_layouts/images/minus.gif\");\r\n\r\n        if ($(element).parent() && $(element).parent().parent()) {\r\n          $(element)\r\n            .parent()\r\n            .parent()\r\n            .nextUntil(classContainer)\r\n            .each(function () {\r\n              $(this).toggleClass(classToToggle);\r\n            });\r\n        }\r\n      } else if (containerType && containerType == \"any\") {\r\n        if ($(\".\" + classToToggle).is(\":visible\"))\r\n          $(\".\" + classToToggle).hide();\r\n        else $(\".\" + classToToggle).show();\r\n      } else $(element).find(classContainer).toggleClass(classToToggle);\r\n    });\r\n  },\r\n};\r\n\r\nko.bindingHandlers.toggles = {\r\n  init: function (element, valueAccessor) {\r\n    var value = valueAccessor();\r\n\r\n    ko.utils.registerEventHandler(element, \"click\", function () {\r\n      value(!value());\r\n    });\r\n  },\r\n};\r\n\r\nconst fromPathTemplateLoader = {\r\n  loadTemplate: function (name, templateConfig, callback) {\r\n    if (templateConfig.fromPath) {\r\n      // TODO: Minor - fix error catching and fallback flow\r\n      fetch(assetsPath + templateConfig.fromPath)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\r\n              `Error Fetching HTML Template - ${response.statusText}`\r\n            );\r\n          }\r\n          return response.text();\r\n        })\r\n        .catch((error) => {\r\n          if (!templateConfig.fallback) return;\r\n          console.warn(\r\n            \"Primary template not found, attempting fallback\",\r\n            templateConfig\r\n          );\r\n          fetch(assetsPath + templateConfig.fallback)\r\n            .then((response) => {\r\n              if (!response.ok) {\r\n                throw new Error(\r\n                  `Error Fetching fallback HTML Template - ${response.statusText}`\r\n                );\r\n              }\r\n              return response.text();\r\n            })\r\n            .then((text) =>\r\n              ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            );\r\n        })\r\n        .then((text) =>\r\n          text\r\n            ? ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            : null\r\n        );\r\n    } else {\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathTemplateLoader);\r\n\r\nconst fromPathViewModelLoader = {\r\n  loadViewModel: function (name, viewModelConfig, callback) {\r\n    if (viewModelConfig.viaLoader) {\r\n      // console.log(\"loading module\", name);\r\n      const module = import(assetsPath + viewModelConfig.viaLoader).then(\r\n        (module) => {\r\n          // console.log(\"imported module\", name);\r\n          const viewModelConstructor = module.default;\r\n          // We need a createViewModel function, not a plain constructor.\r\n          // We can use the default loader to convert to the\r\n          // required format.\r\n          ko.components.defaultLoader.loadViewModel(\r\n            name,\r\n            viewModelConstructor,\r\n            callback\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      // Unrecognized config format. Let another loader handle it.\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathViewModelLoader);\r\n", "\uFEFFwindow.Audit = window.Audit || {};\r\nAudit.Common = Audit.Common || {};\r\n\r\nfunction InitReport() {\r\n  Audit.Common.Utilities = new Audit.Common.NewUtilities();\r\n  Audit.Common.Init();\r\n}\r\n\r\nAudit.Common.Init = function () {};\r\n\r\nAudit.Common.NewUtilities = function () {\r\n  var m_siteUrl = _spPageContextInfo.webServerRelativeUrl; //IE11 in sp 2013 does not recognize L_Menu_BaseUrl\r\n\r\n  var m_listTitleRequests = \"AuditRequests\";\r\n  var m_listNameRequests = \"AuditRequests\";\r\n\r\n  var m_listTitleRequestsInternal = \"AuditRequestsInternal\";\r\n  var m_listNameRequestsInternal = \"AuditRequestsInternal\";\r\n\r\n  var m_listTitleResponses = \"AuditResponses\";\r\n  var m_listNameResponses = \"AuditResponses\";\r\n\r\n  var m_libTitleRequestDocs = \"AuditRequestDocs\";\r\n  var m_libNameRequestDocs = \"AuditRequestDocs\";\r\n\r\n  var m_libTitleCoverSheet = \"AuditCoverSheets\";\r\n  var m_libNameCoverSheet = \"AuditCoverSheets\";\r\n\r\n  var m_libTitleResponseDocs = \"AuditResponseDocs\";\r\n  var m_libNameResponseDocs = \"AuditResponseDocs\";\r\n\r\n  var m_libTitleResponseDocsEA = \"AuditResponseDocsEA\";\r\n  var m_libNameResponseDocsEA = \"AuditResponseDocsEA\";\r\n\r\n  var m_listTitleActionOffices = \"AuditOrganizations\";\r\n  var m_listNameActionOffices = \"AuditOrganizations\";\r\n\r\n  var m_listTitleEmailHistory = \"AuditEmails\";\r\n  var m_listNameEmailHistory = \"AuditEmails\";\r\n\r\n  var m_listTitleBulkResponses = \"AuditBulkResponses\";\r\n  var m_listNameBulkResponses = \"AuditBulkResponses\";\r\n\r\n  var m_listTitleBulkPermissions = \"AuditBulkPermissions\";\r\n  var m_listNameBulkPermissions = \"AuditBulkPermissions\";\r\n\r\n  var m_groupNameSpecialPermName1 = \"CGFS Special Access1\";\r\n  var m_groupNameSpecialPermName2 = \"CGFS Special Access2\";\r\n  var m_groupNameQA = \"Quality Assurance\";\r\n  var m_groupNameEA = \"External Auditors\";\r\n\r\n  var m_libResponseDocsLibraryGUID = null;\r\n\r\n  var m_arrSiteGroups = null;\r\n  var m_arrAOs = null;\r\n  /**\r\n   * Reloads the page, trys to preserve current path\r\n   * @param {bool} hard flag to remove all url params\r\n   * @returns\r\n   */\r\n  function m_fnRefresh(hard = false) {\r\n    if (hard) {\r\n      location.href = location.pathname;\r\n      return;\r\n    }\r\n    var curPath = location.pathname;\r\n\r\n    if ($(\"#tabs\").html() != null && $(\"#tabs\").html() != \"\") {\r\n      var tabIndex = 0;\r\n      try {\r\n        tabIndex = $(\"#tabs\").tabs(\"option\", \"active\");\r\n      } catch (ex) {}\r\n\r\n      curPath += \"?Tab=\" + tabIndex;\r\n\r\n      if (tabIndex == 0 && $(\"#ddlResponseName\").val() != \"\") {\r\n        curPath += \"&ResNum=\" + $(\"#ddlResponseName\").val();\r\n      } else if (tabIndex == 1) {\r\n        var responseNumOpen = $(\"#ddlResponsesOpen\").val();\r\n        var responseNumProcessed = $(\"#ddlResponsesProcessed\").val();\r\n\r\n        if (responseNumOpen != null && responseNumOpen != \"\")\r\n          curPath += \"&ResNum=\" + responseNumOpen;\r\n        else if (responseNumProcessed != null && responseNumProcessed != \"\")\r\n          curPath += \"&ResNum=\" + responseNumProcessed;\r\n      }\r\n\r\n      location.href = curPath;\r\n    } else {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  function m_fnOnLoadDisplayTimeStamp() {\r\n    var curDate = new Date();\r\n    $(\"#divLoading\").text(\"Loaded at \" + curDate.format(\"MM/dd/yyyy hh:mm tt\"));\r\n  }\r\n\r\n  function m_fnOnLoadDisplayTabAndResponse() {\r\n    var paramTabIndex = GetUrlKeyValue(\"Tab\");\r\n    if (paramTabIndex != null && paramTabIndex != \"\") {\r\n      $(\"#tabs\").tabs(\"option\", \"active\", paramTabIndex);\r\n    }\r\n\r\n    var bFiltered = false;\r\n\r\n    var paramResponseNum = GetUrlKeyValue(\"ResNum\");\r\n    if (paramResponseNum != null && paramResponseNum != \"\") {\r\n      if (paramTabIndex == 0) {\r\n        if (\r\n          $(\"#ddlResponseName option[value='\" + paramResponseNum + \"']\")\r\n            .length > 0\r\n        ) {\r\n          $(\"#ddlResponseName\").val(paramResponseNum).change();\r\n          bFiltered = true;\r\n        }\r\n      } else {\r\n        if (\r\n          $(\"#ddlResponsesOpen option[value='\" + paramResponseNum + \"']\")\r\n            .length > 0\r\n        ) {\r\n          $(\"#ddlResponsesOpen\").val(paramResponseNum).change();\r\n        } else if (\r\n          $(\"#ddlResponsesProcessed option[value='\" + paramResponseNum + \"']\")\r\n            .length > 0\r\n        ) {\r\n          $(\"#ddlResponsesProcessed\").val(paramResponseNum).change();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!bFiltered) {\r\n      $(\".sr-response-item\").show(); //hiding rows by default\r\n    }\r\n  }\r\n\r\n  function m_fnOnLoadFilterResponses(responseStatus1, responseStatus2) {\r\n    var count = 0;\r\n    var cntOpen = 0;\r\n    var cntReOpened = 0;\r\n    var resStatus1 = 0;\r\n    var resStatus2 = 0;\r\n\r\n    var eacher = $(\".sr-response-item\");\r\n\r\n    eacher.each(function () {\r\n      var reqStatus = $.trim($(this).find(\".sr-response-requestStatus\").text());\r\n      var resStatus = $.trim($(this).find(\".sr-response-status\").text());\r\n\r\n      if (\r\n        (resStatus == responseStatus1 || resStatus == responseStatus2) &&\r\n        (reqStatus == \"Open\" || reqStatus == \"ReOpened\")\r\n      ) {\r\n        $(this).addClass(\"highlighted\");\r\n        count++;\r\n\r\n        if (resStatus == responseStatus1) resStatus1++;\r\n        else if (resStatus == responseStatus2) resStatus2++;\r\n\r\n        if (reqStatus == \"Open\") cntOpen++;\r\n        else if (reqStatus == \"ReOpened\") cntReOpened++;\r\n      }\r\n    });\r\n\r\n    if (count > 0) {\r\n      $(\"#lblStatusReportResponsesMsg\").html(\r\n        \"<span class='ui-icon ui-icon-alert'></span>There are \" +\r\n          count +\r\n          \" Responses pending your review\"\r\n      );\r\n\r\n      if (resStatus1 > 0 && resStatus2 == 0)\r\n        $(\"#ddlResponseStatus\").val(responseStatus1).change();\r\n      else if (resStatus2 > 0 && resStatus1 == 0)\r\n        $(\"#ddlResponseStatus\").val(responseStatus2).change();\r\n    } else\r\n      $(\"#lblStatusReportResponsesMsg\").html(\r\n        \"<span class='ui-icon ui-icon-circle-check'></span>There are 0 Responses pending your review\"\r\n      );\r\n  }\r\n\r\n  function m_fnLoadSiteGroups(itemColl) {\r\n    m_arrSiteGroups = new Array();\r\n\r\n    var listItemEnumerator = itemColl.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var oListItem = listItemEnumerator.get_current();\r\n\r\n      var id = oListItem.get_id();\r\n      var loginName = oListItem.get_loginName();\r\n      var title = oListItem.get_title();\r\n\r\n      var groupObject = new Object();\r\n      groupObject[\"ID\"] = id;\r\n      groupObject[\"loginName\"] = loginName;\r\n      groupObject[\"title\"] = title;\r\n      groupObject[\"group\"] = oListItem;\r\n\r\n      m_arrSiteGroups.push(groupObject);\r\n    }\r\n  }\r\n\r\n  function m_fnGetSPSiteGroup(groupName) {\r\n    var userGroup = null;\r\n    if (m_arrSiteGroups != null) {\r\n      for (var x = 0; x < m_arrSiteGroups.length; x++) {\r\n        if (m_arrSiteGroups[x].title == groupName) {\r\n          userGroup = m_arrSiteGroups[x].group;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return userGroup;\r\n  }\r\n\r\n  function m_fnLoadActionOffices(itemColl) {\r\n    m_arrAOs = new Array();\r\n\r\n    var listItemEnumerator = itemColl.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var oListItem = listItemEnumerator.get_current();\r\n\r\n      var id = oListItem.get_item(\"ID\");\r\n      var title = oListItem.get_item(\"Title\");\r\n      var userGroup = oListItem.get_item(\"UserGroup\");\r\n      if (userGroup != null) {\r\n        userGroup = userGroup.get_lookupValue();\r\n      } else userGroup = \"\";\r\n\r\n      var aoObject = new Object();\r\n      aoObject[\"ID\"] = id;\r\n      aoObject[\"title\"] = title;\r\n      aoObject[\"userGroup\"] = userGroup;\r\n\r\n      m_arrAOs.push(aoObject);\r\n    }\r\n  }\r\n\r\n  function m_fnGetAOSPGroupName(groupName) {\r\n    //finds the group name corresponding to the lookup field selected\r\n    var userGroup = null;\r\n    if (m_arrAOs != null) {\r\n      for (var x = 0; x < m_arrAOs.length; x++) {\r\n        var oGroup = m_arrAOs[x];\r\n        if (oGroup.title == groupName) {\r\n          userGroup = oGroup.userGroup;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return userGroup;\r\n  }\r\n\r\n  function m_fnCheckSPItemHasGroupPermission(item, groupName, permissionLevel) {\r\n    if (\r\n      item == null ||\r\n      groupName == \"\" ||\r\n      groupName == null ||\r\n      permissionLevel == null\r\n    )\r\n      return false;\r\n\r\n    var match = false;\r\n    var roleAssignments = item.get_roleAssignments();\r\n    if (roleAssignments == null) {\r\n      alert(\"Error retrieving role assignments\");\r\n      return false;\r\n    }\r\n\r\n    var rolesEnumerator = roleAssignments.getEnumerator();\r\n    while (rolesEnumerator.moveNext()) {\r\n      var role = rolesEnumerator.get_current();\r\n      if (role != null) {\r\n        var roleMember = role.get_member();\r\n        if (roleMember.isPropertyAvailable(\"Title\")) {\r\n          var memberTitleName = roleMember.get_title();\r\n\r\n          var roleDefs = role.get_roleDefinitionBindings();\r\n          if (roleDefs != null) {\r\n            var roleDefsEnumerator = roleDefs.getEnumerator();\r\n            while (roleDefsEnumerator.moveNext()) {\r\n              var rd = roleDefsEnumerator.get_current();\r\n              var rdName = rd.get_name();\r\n\r\n              if (\r\n                memberTitleName == groupName &&\r\n                rd.get_basePermissions().has(permissionLevel)\r\n              ) {\r\n                match = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return match;\r\n  }\r\n\r\n  function m_fnGoToResponse(responseTitle, isIA) {\r\n    if (!isIA) {\r\n      var bFound = false;\r\n      $(\"#ddlResponsesOpen > option\").each(function () {\r\n        if ($(this).text() == responseTitle) {\r\n          bFound = true;\r\n          notifyId = SP.UI.Notify.addNotification(\r\n            \"Displaying Response (\" + responseTitle + \")\",\r\n            false\r\n          );\r\n          $(\"#ddlResponsesOpen\").val(responseTitle).change();\r\n\r\n          return false;\r\n        }\r\n      });\r\n      if (!bFound) {\r\n        $(\"#ddlResponsesProcessed > option\").each(function () {\r\n          if ($(this).text() == responseTitle) {\r\n            bFound = true;\r\n            notifyId = SP.UI.Notify.addNotification(\r\n              \"Displaying Response (\" + responseTitle + \")\",\r\n              false\r\n            );\r\n            $(\"#ddlResponsesProcessed\").val(responseTitle).change();\r\n\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n\r\n      $(\"#tabs\").tabs({ active: 1 });\r\n    }\r\n  }\r\n\r\n  function m_fnGetResponseDocStyleTag2(documentStatus) {\r\n    var styleTag = {};\r\n    if (documentStatus == \"Archived\")\r\n      styleTag = { \"background-color\": \"Gainsboro\" };\r\n    else if (documentStatus == \"Approved\")\r\n      styleTag = { \"background-color\": \"PaleGreen\" };\r\n    else if (documentStatus == \"Rejected\")\r\n      styleTag = { \"background-color\": \"LightSalmon\" };\r\n    else if (documentStatus == \"Sent to QA\")\r\n      styleTag = { \"background-color\": \"LightCyan\" };\r\n    else if (documentStatus == \"Submitted\")\r\n      styleTag = { \"background-color\": \"LemonChiffon\" };\r\n    else if (documentStatus == \"Marked for Deletion\")\r\n      styleTag = {\r\n        \"background-color\": \"Gainsboro\",\r\n        \"font-style\": \"italic\",\r\n      };\r\n    return styleTag;\r\n    //\t\t\tstyleTag = \" style='background-color:Gainsboro; font-style:italic' title='Marked for Deletion by the Action Office' \";\r\n  }\r\n\r\n  function m_fnGetResponseDocStyleTag(documentStatus) {\r\n    var styleTag = \"\";\r\n\r\n    if (documentStatus == \"Archived\")\r\n      styleTag = \" style='background-color:Gainsboro;' \";\r\n    else if (documentStatus == \"Approved\")\r\n      styleTag = \" style='background-color:PaleGreen;' \";\r\n    else if (documentStatus == \"Rejected\")\r\n      styleTag = \" style='background-color:LightSalmon;' \";\r\n    else if (documentStatus == \"Sent to QA\")\r\n      styleTag = \" style='background-color:LightCyan;' \";\r\n    else if (documentStatus == \"Submitted\")\r\n      styleTag = \" style='background-color:LemonChiffon;' \";\r\n    else if (documentStatus == \"Marked for Deletion\")\r\n      styleTag =\r\n        \" style='background-color:Gainsboro; font-style:italic' title='Marked for Deletion by the Action Office' \";\r\n\r\n    return styleTag;\r\n  }\r\n\r\n  function m_fnCheckIfEmailFolderExists(items, requestNumber) {\r\n    //Check if folder exists in email library\r\n    var bFolderExists = false;\r\n    var listItemEnumerator = items.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var folderItem = listItemEnumerator.get_current();\r\n      var itemName = folderItem.get_displayName();\r\n      if (itemName == requestNumber) {\r\n        var bFolderExists = true;\r\n        break;\r\n      }\r\n    }\r\n    return bFolderExists;\r\n  }\r\n\r\n  var m_cntAddToEmailFolder = 0;\r\n  var m_cntAddedToEmailFolder = 0;\r\n\r\n  function m_fnCreateEmailFolder(list, requestNumber, requestItem, OnComplete) {\r\n    m_cntAddToEmailFolder = 0;\r\n    m_cntAddedToEmailFolder = 0;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var itemCreateInfo = new SP.ListItemCreationInformation();\r\n    itemCreateInfo.set_underlyingObjectType(SP.FileSystemObjectType.folder);\r\n    itemCreateInfo.set_leafName(requestNumber);\r\n    oNewEmailFolder = list.addItem(itemCreateInfo);\r\n    oNewEmailFolder.set_item(\"Title\", requestNumber);\r\n    oNewEmailFolder.update();\r\n\r\n    this.currentUser = web.get_currentUser();\r\n    this.ownerGroup = web.get_associatedOwnerGroup();\r\n    this.memberGroup = web.get_associatedMemberGroup();\r\n    this.visitorGroup = web.get_associatedVisitorGroup();\r\n\r\n    oNewEmailFolder.resetRoleInheritance();\r\n    oNewEmailFolder.breakRoleInheritance(false, false);\r\n\r\n    var roleDefBindingCollAdmin =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollAdmin.add(\r\n      web.get_roleDefinitions().getByType(SP.RoleType.administrator)\r\n    );\r\n\r\n    var roleDefBindingCollContribute =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollContribute.add(\r\n      web.get_roleDefinitions().getByType(SP.RoleType.contributor)\r\n    );\r\n\r\n    var roleDefBindingCollRestrictedRead =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollRestrictedRead.add(\r\n      web.get_roleDefinitions().getByName(\"Restricted Read\")\r\n    );\r\n\r\n    var roleDefBindingCollRestrictedContribute =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollRestrictedContribute.add(\r\n      web.get_roleDefinitions().getByName(\"Restricted Contribute\")\r\n    );\r\n\r\n    //add associated site groups\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .add(ownerGroup, roleDefBindingCollAdmin);\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .add(memberGroup, roleDefBindingCollContribute);\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .add(visitorGroup, roleDefBindingCollRestrictedRead);\r\n\r\n    var spGroupQA = Audit.Common.Utilities.GetSPSiteGroup(\r\n      Audit.Common.Utilities.GetGroupNameQA()\r\n    );\r\n    if (spGroupQA != null)\r\n      oNewEmailFolder\r\n        .get_roleAssignments()\r\n        .add(spGroupQA, roleDefBindingCollRestrictedContribute);\r\n\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .getByPrincipal(currentUser)\r\n      .deleteObject();\r\n\r\n    //Need to break up adding AOs because it exceeds the resource limit (request uses too many resources)\r\n    function onUpdatePermsSucceeded() {\r\n      if (this.requestItem) {\r\n        //this will be null when sending from permissions page\r\n        //add action offices\r\n        var arrActionOffice = this.requestItem.get_item(\"ActionOffice\");\r\n        if (arrActionOffice == null || arrActionOffice.length == 0) {\r\n          if (this.OnComplete) this.OnComplete(true);\r\n          return;\r\n        }\r\n\r\n        for (var x = 0; x < arrActionOffice.length; x++) {\r\n          var actionOfficeName = arrActionOffice[x].get_lookupValue();\r\n\r\n          var actionOfficeGroupName =\r\n            Audit.Common.Utilities.GetAOSPGroupName(actionOfficeName);\r\n          var actionOfficeGroup = Audit.Common.Utilities.GetSPSiteGroup(\r\n            actionOfficeGroupName\r\n          );\r\n\r\n          if (actionOfficeGroup != null) {\r\n            m_cntAddToEmailFolder++;\r\n\r\n            var currCtx2 = new SP.ClientContext.get_current();\r\n            var web2 = currCtx2.get_web();\r\n\r\n            var roleDefBindingCollRestrictedContribute =\r\n              SP.RoleDefinitionBindingCollection.newObject(currCtx2);\r\n            roleDefBindingCollRestrictedContribute.add(\r\n              web2.get_roleDefinitions().getByName(\"Restricted Contribute\")\r\n            );\r\n\r\n            this.oNewEmailFolder\r\n              .get_roleAssignments()\r\n              .add(actionOfficeGroup, roleDefBindingCollRestrictedContribute);\r\n\r\n            function onUpdateAOPermsSucceeded() {\r\n              m_cntAddedToEmailFolder++;\r\n              if (m_cntAddedToEmailFolder == m_cntAddToEmailFolder) {\r\n                if (this.OnComplete) this.OnComplete(true);\r\n              }\r\n            }\r\n            function onUpdateAOPermsFailed(sender, args) {\r\n              m_cntAddedToEmailFolder++;\r\n              if (m_cntAddedToEmailFolder == m_cntAddToEmailFolder) {\r\n                if (this.OnComplete) this.OnComplete(true);\r\n              }\r\n            }\r\n            var data = { OnComplete: this.OnComplete };\r\n            currCtx2.executeQueryAsync(\r\n              Function.createDelegate(data, onUpdateAOPermsSucceeded),\r\n              Function.createDelegate(data, onUpdateAOPermsFailed)\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        if (this.OnComplete) this.OnComplete(true);\r\n      }\r\n    }\r\n\r\n    function onUpdatePermsFailed(sender, args) {\r\n      statusId = SP.UI.Status.addStatus(\r\n        \"Request failed: \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    var data = {\r\n      /*item: oListItem, */ requestItem: requestItem,\r\n      oNewEmailFolder: oNewEmailFolder,\r\n      OnComplete: OnComplete,\r\n    };\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onUpdatePermsSucceeded),\r\n      Function.createDelegate(data, onUpdatePermsFailed)\r\n    );\r\n  }\r\n\r\n  function m_fnSortResponseTitleNoCase(a, b) {\r\n    var aTitle = a;\r\n    var bTitle = b;\r\n    let newA, newB;\r\n\r\n    if (aTitle == null) aTitle = \"\";\r\n    if (bTitle == null) bTitle = \"\";\r\n\r\n    var aIndex = aTitle.lastIndexOf(\"-\");\r\n    if (aIndex >= 0) {\r\n      var subA = aTitle.substring(0, aIndex + 1);\r\n      var lastA = aTitle.replace(subA, \"\");\r\n      var intA = parseInt(lastA, 10);\r\n      var newIntA = Audit.Common.Utilities.PadDigits(intA, 5);\r\n      newA = subA + newIntA;\r\n    } else newA = aTitle;\r\n\r\n    var bIndex = bTitle.lastIndexOf(\"-\");\r\n    if (bIndex >= 0) {\r\n      var subB = bTitle.substring(0, bIndex + 1);\r\n      var lastB = bTitle.replace(subB, \"\");\r\n      var intB = parseInt(lastB, 10);\r\n      var newIntB = Audit.Common.Utilities.PadDigits(intB, 5);\r\n      newB = subB + newIntB;\r\n    } else newB = bTitle;\r\n\r\n    return newA.toLowerCase().localeCompare(newB.toLowerCase());\r\n  }\r\n\r\n  function m_fnSortResponseObjectNoCase(a, b) {\r\n    var aTitle = a.title;\r\n    var bTitle = b.title;\r\n    var newA;\r\n    var newB;\r\n    if (aTitle == null) aTitle = \"\";\r\n    if (bTitle == null) bTitle = \"\";\r\n\r\n    var aIndex = aTitle.lastIndexOf(\"-\");\r\n    if (aIndex >= 0) {\r\n      var subA = aTitle.substring(0, aIndex + 1);\r\n      var lastA = aTitle.replace(subA, \"\");\r\n      var intA = parseInt(lastA, 10);\r\n      var newIntA = Audit.Common.Utilities.PadDigits(intA, 5);\r\n      newA = subA + newIntA;\r\n    } else newA = aTitle;\r\n\r\n    var bIndex = bTitle.lastIndexOf(\"-\");\r\n    if (bIndex >= 0) {\r\n      var subB = bTitle.substring(0, bIndex + 1);\r\n      var lastB = bTitle.replace(subB, \"\");\r\n      var intB = parseInt(lastB, 10);\r\n      var newIntB = Audit.Common.Utilities.PadDigits(intB, 5);\r\n      newB = subB + newIntB;\r\n    } else newB = bTitle;\r\n\r\n    return newA.toLowerCase().localeCompare(newB.toLowerCase());\r\n  }\r\n\r\n  function m_fnSortNoCase(a, b) {\r\n    return a.toLowerCase().localeCompare(b.toLowerCase());\r\n  }\r\n\r\n  function m_fnSortDate(a, b) {\r\n    if (a == \"\") return -1;\r\n    if (b == \"\") return 1;\r\n    return new Date(a).getTime() - new Date(b).getTime();\r\n  }\r\n\r\n  //Adds the values in the arr array to the drop down with the specified id\r\n  function m_fnAddOptions(arr, ddlID, dateSort, responseSort) {\r\n    if (arr == null) return;\r\n    if (responseSort) arr.sort(m_fnSortResponseTitleNoCase);\r\n    else if (!dateSort) arr.sort(m_fnSortNoCase);\r\n    else arr.sort(m_fnSortDate);\r\n\r\n    var rOptions = new Array(),\r\n      j = -1;\r\n    rOptions[++j] = \"<option value=''>-Select-</option>\";\r\n\r\n    var arrLength = arr.length;\r\n\r\n    /*\tvar fragment = document.createDocumentFragment();\r\n\t\t\tvar choice = document.createElement('option');\r\n\t\t\tchoice.value = \"\";\r\n\t\t\tchoice.innerHTML = \"-Select-\";\r\n\t\t\tfragment.appendChild(choice);\r\n\t\t*/\r\n    for (var x = 0; x < arrLength; x++) {\r\n      var option = $.trim(arr[x]);\r\n\r\n      rOptions[++j] = \"<option value='\" + option + \"'>\" + option + \"</option>\";\r\n\r\n      /*\t\r\n\t\t\tvar choice = document.createElement('option');\r\n\t        choice.value = option;\r\n\t        choice.innerHTML = option;\r\n\t        fragment.appendChild(choice);*/\r\n    }\r\n\r\n    //ddlID = ddlID.replace(\"#\", \"\");\r\n    //document.getElementById(ddlID).innerHTML = rOptions.join('');\r\n\r\n    var thisDDL = $(ddlID);\r\n    thisDDL.empty().append(rOptions.join(\"\"));\r\n    /*var thisDDL = $(ddlID);\r\n\t\tthisDDL.empty().html( fragment );*/\r\n  }\r\n\r\n  function m_fnExistsInArr(arr, val) {\r\n    if (arr == null) return false;\r\n\r\n    var arrLength = arr.length;\r\n    for (var x = 0; x < arrLength; x++) {\r\n      if (arr[x] == val) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function m_fnGetTrueFalseIcon(val) {\r\n    if (val == true)\r\n      return \"<span class='ui-icon ui-icon-check'>\" + val + \"</span>\";\r\n    else return \"<span class='ui-icon ui-icon-close'>\" + val + \"</span>\";\r\n  }\r\n\r\n  function m_fnGetFriendlyDisplayName(oListItem, fieldName) {\r\n    var user = oListItem.get_item(fieldName);\r\n    if (user == null) return \"\";\r\n    else return user.get_lookupValue();\r\n  }\r\n\r\n  function m_fnPadDigits(n, totalDigits) {\r\n    n = n.toString();\r\n    var pd = \"\";\r\n    if (totalDigits > n.length) {\r\n      for (let i = 0; i < totalDigits - n.length; i++) {\r\n        pd += \"0\";\r\n      }\r\n    }\r\n    return pd + n.toString();\r\n  }\r\n\r\n  function m_fnPreciseRound(num, decimals) {\r\n    var sign = num >= 0 ? 1 : -1;\r\n    return (\r\n      Math.round(num * Math.pow(10, decimals) + sign * 0.001) /\r\n      Math.pow(10, decimals)\r\n    ).toFixed(decimals);\r\n  }\r\n\r\n  function m_fnGetFriendlyFileSize(fileSize) {\r\n    if (fileSize == null || fileSize == \"\") return \"\";\r\n\r\n    if (fileSize > 1048576) {\r\n      fileSize =\r\n        Audit.Common.Utilities.PreciseRound(fileSize / 1048576, 2) + \" MB\";\r\n    } else if (fileSize > 1024) {\r\n      fileSize =\r\n        Audit.Common.Utilities.PreciseRound(fileSize / 1024, 2) + \" KB\";\r\n    } else {\r\n      fileSize += \" B\";\r\n    }\r\n    return fileSize;\r\n  }\r\n\r\n  function m_fnISODateString(d) {\r\n    function pad(n) {\r\n      return n < 10 ? \"0\" + n : n;\r\n    }\r\n\r\n    return (\r\n      d.getUTCFullYear() +\r\n      \"-\" +\r\n      pad(d.getUTCMonth() + 1) +\r\n      \"-\" +\r\n      pad(d.getUTCDate()) +\r\n      \"T\" +\r\n      pad(d.getUTCHours()) +\r\n      \":\" +\r\n      pad(d.getUTCMinutes()) +\r\n      \":\" +\r\n      pad(d.getUTCSeconds()) +\r\n      \"Z\"\r\n    );\r\n  }\r\n\r\n  function m_fnBindHandlerResponseDoc() {\r\n    $(\".requestInfo-response-doc img\").click(function (event) {\r\n      event.preventDefault();\r\n      var curIcon = $(this).attr(\"src\");\r\n      if (curIcon == \"/_layouts/images/minus.gif\")\r\n        $(this).attr(\"src\", \"/_layouts/images/plus.gif\");\r\n      else $(this).attr(\"src\", \"/_layouts/images/minus.gif\");\r\n\r\n      //$(this).nextUntil('tr.Grouping').slideToggle(200);\r\n      $(this)\r\n        .parent()\r\n        .parent()\r\n        .nextUntil(\"tr.requestInfo-response-doc\")\r\n        .each(function () {\r\n          $(this).toggleClass(\"collapsed\");\r\n        });\r\n    });\r\n  }\r\n\r\n  /************\r\n\tNotice - for some reason, when the list item opens in a dialog or not in the dialog, it renders differently causing the values to get back data differently\r\n\t********/\r\n  /*\r\n\tfunction m_fnGetLookupFieldText( fieldName )\r\n\t{\r\n\t\tvar field = $( \"select[title='\" + fieldName  + \"']\" );\r\n\t\t\r\n\t\tif( field == null || field.html() == null ) //more than 20 items in the lookup\r\n\t\t{\r\n\t\t\tfield = $( \"input[title='\" + fieldName  + \"']\" );\r\n\t\t\treturn field.val();\r\n\t\t}\r\n\t\telse return $(\"select[title='\" + fieldName  + \"'] option:selected\").text();\r\n\t}\r\n\r\n\t*/\r\n\r\n  function m_fnGetLookupFormField(fieldTitle) {\r\n    if ($(\"select[title='\" + fieldTitle + \"']\").html() !== null) {\r\n      return $(\"select[title='\" + fieldTitle + \"']\");\r\n    } else {\r\n      return $(\"input[title='\" + fieldTitle + \"']\");\r\n    }\r\n  }\r\n\r\n  function m_fnGetLookupDisplayText(fieldTitle) {\r\n    //Set default value for lookups with less that 20 items\r\n    if ($(\"select[title='\" + fieldTitle + \"']\").html() !== null) {\r\n      return $(\"select[title='\" + fieldTitle + \"'] option:selected\").text();\r\n    } else {\r\n      return $(\"input[title='\" + fieldTitle + \"']\").val();\r\n    }\r\n  }\r\n\r\n  function m_fnSetLookupFromFieldNameByText(fieldName, text) {\r\n    try {\r\n      if (text == undefined) return;\r\n      var theSelect = m_fnGetTagFromIdentifierAndTitle(\"select\", \"\", fieldName);\r\n\r\n      if (theSelect == null) {\r\n        var theInput = m_fnGetTagFromIdentifierAndTitle(\"input\", \"\", fieldName);\r\n        //builtin\r\n        ShowDropdown(theInput.id);\r\n        var opt = document.getElementById(theInput.opt);\r\n        m_fnSetSelectedOptionByText(opt, text);\r\n        //builtin\r\n        OptLoseFocus(opt);\r\n      } else {\r\n        m_fnSetSelectedOptionByText(theSelect, text);\r\n      }\r\n    } catch (ex) {}\r\n  }\r\n\r\n  function m_fnSetSelectedOptionByText(select, text) {\r\n    var opts = select.options;\r\n    var optLength = opts.length;\r\n    if (select == null) return;\r\n\r\n    for (var i = 0; i < optLength; i++) {\r\n      if (opts[i].text == text) {\r\n        select.selectedIndex = i;\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function m_fnGetTagFromIdentifierAndTitle(tagName, identifier, title) {\r\n    var idLength = identifier.length;\r\n    var tags = document.getElementsByTagName(tagName);\r\n    for (var i = 0; i < tags.length; i++) {\r\n      var tagID = tags[i].id;\r\n      if (\r\n        tags[i].title == title &&\r\n        (identifier == \"\" ||\r\n          tagID.indexOf(identifier) == tagID.length - idLength)\r\n      ) {\r\n        return tags[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function m_fnViewUserManuals(docType) {\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"User Manual\";\r\n    options.height = 250;\r\n    //options.dialogReturnValueCallback = OnCallbackForm;\r\n    if (docType != null)\r\n      options.url =\r\n        Audit.Common.Utilities.GetSiteUrl() +\r\n        \"/pages/AuditUserManuals.aspx?FilterField1=DocType&FilterValue1=\" +\r\n        docType;\r\n    else\r\n      options.url =\r\n        Audit.Common.Utilities.GetSiteUrl() + \"/pages/AuditUserManuals.aspx\";\r\n\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function m_fnPrintPage(pageTitle, divTbl) {\r\n    var curDate = new Date();\r\n    var siteUrl = Audit.Common.Utilities.GetSiteUrl();\r\n    var cssLink1 =\r\n      siteUrl +\r\n      \"/siteassets/css/tablesorter/style.css?v=\" +\r\n      curDate.format(\"MM_dd_yyyy\");\r\n    var cssLink2 =\r\n      siteUrl +\r\n      \"/siteAssets/css/audit_styles.css?v=\" +\r\n      curDate.format(\"MM_dd_yyyy\");\r\n\r\n    var divOutput = $(divTbl).html();\r\n\r\n    //remove hyperlinks pointing to the job codes\r\n    var updatedDivOutput = $(\"<div>\").append(divOutput);\r\n    updatedDivOutput.find(\".sr-response-title a\").each(function () {\r\n      $(this).removeAttr(\"onclick\");\r\n      $(this).removeAttr(\"href\");\r\n    });\r\n\r\n    divOutput = updatedDivOutput.html();\r\n\r\n    var printDateString = curDate.format(\"MM/dd/yyyy hh:mm tt\");\r\n    printDateString =\r\n      \"<div style='padding-bottom:10px;'>\" + printDateString + \"</div>\";\r\n    divOutput = printDateString + divOutput;\r\n\r\n    var cssFile1 = $(\"<div></div>\");\r\n    var cssFile2 = $(\"<div></div>\");\r\n\r\n    var def1 = $.Deferred();\r\n    var def2 = $.Deferred();\r\n\r\n    var cssFileText = \"\";\r\n    cssFile1.load(cssLink1, function () {\r\n      cssFileText += \"<style>\" + cssFile1.html() + \"</style>\";\r\n      def1.resolve();\r\n    });\r\n    cssFile2.load(cssLink2, function () {\r\n      cssFileText += \"<style>\" + cssFile2.html() + \"</style>\";\r\n      def2.resolve();\r\n    });\r\n\r\n    //gets called asynchronously after the css files have been loaded\r\n    $.when(def1, def2).done(function () {\r\n      var html =\r\n        \"<HTML>\\n\" +\r\n        \"<HEAD>\\n\\n\" +\r\n        \"<Title>\" +\r\n        pageTitle +\r\n        \"</Title>\\n\" +\r\n        cssFileText +\r\n        \"\\n\" +\r\n        \"<style>\" +\r\n        \".hideOnPrint, .rowFilters {display:none}\" +\r\n        \"</style>\\n\" +\r\n        \"</HEAD>\\n\" +\r\n        \"<BODY>\\n\" +\r\n        divOutput +\r\n        \"\\n\" +\r\n        \"</BODY>\\n\" +\r\n        \"</HTML>\";\r\n\r\n      var printWP = window.open(\"\", \"printWebPart\");\r\n      printWP.document.open();\r\n      //insert content\r\n      printWP.document.write(html);\r\n\r\n      printWP.document.close();\r\n      //open print dialog\r\n      printWP.print();\r\n    });\r\n  }\r\n\r\n  //make sure iframe with id csvexprframe is added to page up top\r\n  //http://stackoverflow.com/questions/18185660/javascript-jquery-exporting-data-in-csv-not-working-in-ie\r\n  function m_fnExportToCsv(fileName, tableName, removeHeader) {\r\n    var data = m_fnGetCellValues(tableName);\r\n\r\n    if (removeHeader == true) data = data.slice(1);\r\n\r\n    var csv = m_fnConvertToCsv(data);\r\n    //\tconsole.log( csv );\r\n    if (navigator.userAgent.search(\"Trident\") >= 0) {\r\n      window.CsvExpFrame.document.open(\"text/html\", \"replace\");\r\n      //\t\twindow.CsvExpFrame.document.open(\"application/csv\", \"replace\");\r\n      //\t\twindow.CsvExpFrame.document.charset = \"utf-8\";\r\n      //\t\twindow.CsvExpFrame.document.open(\"application/ms-excel\", \"replace\");\r\n      window.CsvExpFrame.document.write(csv);\r\n      window.CsvExpFrame.document.close();\r\n      window.CsvExpFrame.focus();\r\n      window.CsvExpFrame.document.execCommand(\r\n        \"SaveAs\",\r\n        true,\r\n        fileName + \".csv\"\r\n      );\r\n    } else {\r\n      var uri = \"data:text/csv;charset=utf-8,\" + escape(csv);\r\n      var downloadLink = document.createElement(\"a\");\r\n      downloadLink.href = uri;\r\n      downloadLink.download = fileName + \".csv\";\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    }\r\n  }\r\n\r\n  function m_fnGetCellValues(tableName) {\r\n    var table = document.getElementById(tableName);\r\n\r\n    //remove headers and footers\r\n    if (table.innerHTML.indexOf(\"rowFilters\") >= 0) {\r\n      var deets = $(\"<div>\").append(table.outerHTML);\r\n      deets.find(\".rowFilters\").each(function () {\r\n        $(this).remove();\r\n      });\r\n      table = deets.find(\"table\")[0];\r\n    }\r\n    if (table.innerHTML.indexOf(\"footer\") >= 0) {\r\n      var deets = $(\"<div>\").append(table.outerHTML);\r\n      deets.find(\".footer\").each(function () {\r\n        $(this).remove();\r\n      });\r\n      table = deets.find(\"table\")[0];\r\n    }\r\n\r\n    var tableArray = [];\r\n    for (var r = 0, n = table.rows.length; r < n; r++) {\r\n      tableArray[r] = [];\r\n      for (var c = 0, m = table.rows[r].cells.length; c < m; c++) {\r\n        var text =\r\n          table.rows[r].cells[c].textContent ||\r\n          table.rows[r].cells[c].innerText;\r\n        tableArray[r][c] = text.trim();\r\n      }\r\n    }\r\n    return tableArray;\r\n  }\r\n\r\n  function m_fnConvertToCsv(objArray) {\r\n    var array = typeof objArray != \"object\" ? JSON.parse(objArray) : objArray;\r\n    var str = \"sep=,\\r\\n\";\r\n    var line = \"\";\r\n    var index;\r\n    var value;\r\n    for (var i = 0; i < array.length; i++) {\r\n      line = \"\";\r\n      var array1 = array[i];\r\n      for (index in array1) {\r\n        if (array1.hasOwnProperty(index)) {\r\n          value = array1[index] + \"\";\r\n          line += '\"' + value.replace(/\"/g, '\"\"') + '\",';\r\n        }\r\n      }\r\n      line = line.slice(0, -1);\r\n      str += line + \"\\r\\n\";\r\n    }\r\n    return str;\r\n  }\r\n\r\n  var publicMembers = {\r\n    GetSiteUrl: function () {\r\n      if (m_siteUrl == \"/\") return \"\";\r\n      else return m_siteUrl;\r\n    },\r\n    GetListTitleRequests: function () {\r\n      return m_listTitleRequests;\r\n    },\r\n    GetListNameRequests: function () {\r\n      return m_listNameRequests;\r\n    },\r\n    GetListTitleRequestsInternal: function () {\r\n      return m_listTitleRequestsInternal;\r\n    },\r\n    GetListNameRequestsInternal: function () {\r\n      return m_listNameRequestsInternal;\r\n    },\r\n    GetListTitleResponses: function () {\r\n      return m_listTitleResponses;\r\n    },\r\n    GetListNameResponses: function () {\r\n      return m_listNameResponses;\r\n    },\r\n    GetLibTitleRequestDocs: function () {\r\n      return m_libTitleRequestDocs;\r\n    },\r\n    GetLibNameRequestDocs: function () {\r\n      return m_libNameRequestDocs;\r\n    },\r\n    GetLibTitleCoverSheets: function () {\r\n      return m_libTitleCoverSheet;\r\n    },\r\n    GetLibNameCoverSheets: function () {\r\n      return m_libNameCoverSheet;\r\n    },\r\n    GetLibTitleResponseDocs: function () {\r\n      return m_libTitleResponseDocs;\r\n    },\r\n    GetLibNameResponseDocs: function () {\r\n      return m_libNameResponseDocs;\r\n    },\r\n    GetLibTitleResponseDocsEA: function () {\r\n      return m_libTitleResponseDocsEA;\r\n    },\r\n    GetLibNameResponseDocsEA: function () {\r\n      return m_libNameResponseDocsEA;\r\n    },\r\n    GetListTitleActionOffices: function () {\r\n      return m_listTitleActionOffices;\r\n    },\r\n    GetListNameActionOffices: function () {\r\n      return m_listNameActionOffices;\r\n    },\r\n    GetListTitleEmailHistory: function () {\r\n      return m_listTitleEmailHistory;\r\n    },\r\n    GetListNameEmailHistory: function () {\r\n      return m_listNameEmailHistory;\r\n    },\r\n    GetListTitleBulkResponses: function () {\r\n      return m_listTitleBulkResponses;\r\n    },\r\n    GetListNameBulkResponses: function () {\r\n      return m_listNameBulkResponses;\r\n    },\r\n    GetListTitleBulkPermissions: function () {\r\n      return m_listTitleBulkPermissions;\r\n    },\r\n    GetListNameBulkPermissions: function () {\r\n      return m_listNameBulkPermissions;\r\n    },\r\n    GetGroupNameSpecialPerm1: function () {\r\n      return m_groupNameSpecialPermName1;\r\n    },\r\n    GetGroupNameSpecialPerm2: function () {\r\n      return m_groupNameSpecialPermName2;\r\n    },\r\n    GetGroupNameQA: function () {\r\n      return m_groupNameQA;\r\n    },\r\n    GetGroupNameEA: function () {\r\n      return m_groupNameEA;\r\n    },\r\n    Refresh: m_fnRefresh,\r\n    OnLoadDisplayTimeStamp: m_fnOnLoadDisplayTimeStamp,\r\n    OnLoadDisplayTabAndResponse: m_fnOnLoadDisplayTabAndResponse,\r\n    OnLoadFilterResponses: function (responseStatus1, responseStatus2) {\r\n      m_fnOnLoadFilterResponses(responseStatus1, responseStatus2);\r\n    },\r\n    SetResponseDocLibGUID: function (libGUID) {\r\n      m_libResponseDocsLibraryGUID = libGUID;\r\n    },\r\n    GetResponseDocLibGUID: function () {\r\n      return m_libResponseDocsLibraryGUID;\r\n    },\r\n    LoadSiteGroups: function (itemColl) {\r\n      m_fnLoadSiteGroups(itemColl);\r\n    },\r\n    GetSPSiteGroup: function (groupName) {\r\n      return m_fnGetSPSiteGroup(groupName);\r\n    },\r\n    LoadActionOffices: function (itemColl) {\r\n      m_fnLoadActionOffices(itemColl);\r\n    },\r\n    GetActionOffices: function () {\r\n      return m_arrAOs;\r\n    },\r\n    GetAOSPGroupName: function (groupName) {\r\n      return m_fnGetAOSPGroupName(groupName);\r\n    },\r\n    CheckSPItemHasGroupPermission: function (item, groupName, permissionLevel) {\r\n      return m_fnCheckSPItemHasGroupPermission(\r\n        item,\r\n        groupName,\r\n        permissionLevel\r\n      );\r\n    },\r\n    GoToResponse: function (responseTitle, isIA) {\r\n      m_fnGoToResponse(responseTitle, isIA);\r\n    },\r\n    GetResponseDocStyleTag: function (documentStatus) {\r\n      return m_fnGetResponseDocStyleTag(documentStatus);\r\n    },\r\n    GetResponseDocStyleTag2: function (documentStatus) {\r\n      return m_fnGetResponseDocStyleTag2(documentStatus);\r\n    },\r\n    CheckIfEmailFolderExists: function (items, requestNumber) {\r\n      return m_fnCheckIfEmailFolderExists(items, requestNumber);\r\n    },\r\n    CreateEmailFolder: function (list, requestNumber, requestItem, OnComplete) {\r\n      return m_fnCreateEmailFolder(\r\n        list,\r\n        requestNumber,\r\n        requestItem,\r\n        OnComplete\r\n      );\r\n    },\r\n    AddOptions: function (arr, ddlID, dateSort, responseSort) {\r\n      m_fnAddOptions(arr, ddlID, dateSort, responseSort);\r\n    },\r\n    ExistsInArr: function (arr, val) {\r\n      return m_fnExistsInArr(arr, val);\r\n    },\r\n    GetTrueFalseIcon: function (val) {\r\n      return m_fnGetTrueFalseIcon(val);\r\n    },\r\n    PadDigits: function (n, totalDigits) {\r\n      return m_fnPadDigits(n, totalDigits);\r\n    },\r\n    PreciseRound: function (num, decimals) {\r\n      return m_fnPreciseRound(num, decimals);\r\n    },\r\n    GetFriendlyFileSize: function (fileSize) {\r\n      return m_fnGetFriendlyFileSize(fileSize);\r\n    },\r\n    GetISODateString: function (d) {\r\n      return m_fnISODateString(d);\r\n    },\r\n    GetFriendlyDisplayName: function (oListItem, fieldName) {\r\n      return m_fnGetFriendlyDisplayName(oListItem, fieldName);\r\n    },\r\n    BindHandlerResponseDoc: m_fnBindHandlerResponseDoc,\r\n    PrintStatusReport: function (pageTitle, divTbl) {\r\n      m_fnPrintPage(pageTitle, divTbl);\r\n    },\r\n    ExportToCsv: function (fileName, tableName, removeHeader) {\r\n      m_fnExportToCsv(fileName, tableName, removeHeader);\r\n    },\r\n    ViewUserManuals: function (docType) {\r\n      m_fnViewUserManuals(docType);\r\n    },\r\n    //GetLookupFieldText: function( fieldName ){ return m_fnGetLookupFieldText( fieldName); },\r\n    GetLookupDisplayText: function (fieldName) {\r\n      return m_fnGetLookupDisplayText(fieldName);\r\n    },\r\n    GetLookupFormField: function (fieldName) {\r\n      return m_fnGetLookupFormField(fieldName);\r\n    },\r\n    SetLookupFromFieldNameByText: function (fieldName, text) {\r\n      return m_fnSetLookupFromFieldNameByText(fieldName, text);\r\n    },\r\n    SortResponseObjects: function (a, b) {\r\n      return m_fnSortResponseObjectNoCase(a, b);\r\n    },\r\n    SortResponseTitles: m_fnSortResponseTitleNoCase,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\n// ExecuteOrDelayUntilScriptLoaded(InitReport, \"sp.js\");\r\nInitReport();\r\n", "\uFEFFimport { qaDbTemplate } from \"./QA_DB_Template.js\";\r\nimport { setUrlParam } from \"../../common/router.js\";\r\nimport { TabsModule, Tab } from \"../../components/tabs/tabs_module.js\";\r\n\r\nimport \"../../sal/infrastructure/knockout_extensions.js\";\r\nimport \"../../common/utilities.js\";\r\n\r\ndocument.getElementById(\"app\").innerHTML = qaDbTemplate;\r\n// var SP = window.SP;\r\n// var ko = window.ko;\r\n\r\nwindow.Audit = window.Audit || {};\r\nAudit.QAReport = Audit.QAReport || {};\r\n\r\nconst responseParam = \"ResNum\";\r\n\r\nvar paramShowSiteActionsToAnyone = GetUrlKeyValue(\"ShowSiteActions\");\r\nif (paramShowSiteActionsToAnyone != true) {\r\n  //hide it even for owners unless this param is passed into the URL; pass in param if you want to change the page web parts/settings\r\n  $(\"#RibbonContainer-TabRowLeft\").hide();\r\n  $(\".ms-siteactionsmenu\").hide();\r\n}\r\n\r\nif (document.readyState === \"ready\" || document.readyState === \"complete\") {\r\n  InitReport();\r\n} else {\r\n  document.onreadystatechange = () => {\r\n    if (document.readyState === \"complete\" || document.readyState === \"ready\") {\r\n      ExecuteOrDelayUntilScriptLoaded(function () {\r\n        SP.SOD.executeFunc(\"sp.js\", \"SP.ClientContext\", InitReport);\r\n      }, \"sp.js\");\r\n    }\r\n  };\r\n}\r\n\r\nfunction InitReport() {\r\n  Audit.QAReport.Report = new Audit.QAReport.NewReportPage();\r\n  Audit.QAReport.Init();\r\n}\r\n\r\nAudit.QAReport.Init = function () {\r\n  var paramShowSiteActionsToAnyone = GetUrlKeyValue(\"ShowSiteActions\");\r\n  if (paramShowSiteActionsToAnyone != true) {\r\n    //hide it even for owners unless this param is passed into the URL; pass in param if you want to change the page web parts/settings\r\n    $(\"#RibbonContainer-TabRowLeft\").hide();\r\n    $(\".ms-siteactionsmenu\").hide();\r\n  }\r\n  /*setInterval(function() {\r\n\t    var divVal = $(\"#divCounter\").text();\r\n\t    var count = divVal * 1 - 1;\r\n\t    $(\"#divCounter\").text(count);\r\n\t    if (count <= 0) {\r\n\t       Audit.Common.Utilities.Refresh();\r\n\t    }\r\n\t}, 1000);*/\r\n\r\n  function SetTimer() {\r\n    var intervalRefreshID = setInterval(function () {\r\n      var divVal = $(\"#divCounter\").text();\r\n      var count = divVal * 1 - 1;\r\n      $(\"#divCounter\").text(count);\r\n      if (count <= 0) {\r\n        if (!Audit.QAReport.Report.IsTransactionExecuting())\r\n          Audit.Common.Utilities.Refresh();\r\n        else {\r\n          clearInterval(intervalRefreshID);\r\n          $(\"#divCounter\").text(\"1200\");\r\n          SetTimer();\r\n        }\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  SetTimer();\r\n};\r\n\r\nAudit.QAReport.NewReportPage = function () {\r\n  var m_arrRequests = new Array();\r\n  var m_arrResponses = new Array();\r\n\r\n  var m_bigMap = new Object();\r\n\r\n  var m_IA_SPGroupName = null;\r\n  var m_IA_ActionOffice = null;\r\n\r\n  var m_itemID = null;\r\n  var m_RejectReason = \"\";\r\n\r\n  var m_resStatusToFilterOn = \"\";\r\n  //ko.options.deferUpdates = true;\r\n\r\n  var m_bIsTransactionExecuting = false;\r\n\r\n  var memberGroup = null;\r\n\r\n  var statusId = null;\r\n  var notifyId = null;\r\n  let m_waitDialog = null;\r\n\r\n  var m_requestItems = null;\r\n  var m_requestInternalItems = null;\r\n\r\n  var m_responseItems = null;\r\n\r\n  var m_ResponseDocsItems = null;\r\n  var m_aoItems = null;\r\n\r\n  let eaReponseDocsFolderItems = null;\r\n  let eaEmailLogListItems = null;\r\n\r\n  function CommentChainField(requestId, props) {\r\n    var requestListTitle = props.requestListTitle;\r\n    var columnName = props.columnName;\r\n    var initialValue = props.initialValue;\r\n\r\n    var showHistoryBool = ko.observable(false);\r\n\r\n    var toggleShowHistory = function () {\r\n      showHistoryBool(!showHistoryBool());\r\n    };\r\n\r\n    var arrInitialComments = [];\r\n    // If we have comments here, try to parse them.\r\n    if (initialValue) {\r\n      try {\r\n        arrInitialComments = JSON.parse(initialValue);\r\n        arrInitialComments.forEach(function (comment) {\r\n          comment.timestamp = new Date(comment.timestamp);\r\n        });\r\n      } catch (e) {\r\n        console.error(\"could not parse internal status comments.\");\r\n      }\r\n    }\r\n    var comments = ko.observableArray(arrInitialComments);\r\n    var newCommentText = ko.observable();\r\n    // var requestId = requestId;\r\n\r\n    function onSubmit() {\r\n      var comment = {\r\n        id: Math.ceil(Math.random() * 1000000).toString(16),\r\n        text: newCommentText(),\r\n        author: _spPageContextInfo.userLoginName,\r\n        timestamp: new Date(),\r\n      };\r\n      comments.push(comment);\r\n      commitChanges();\r\n    }\r\n\r\n    function onRemove(commentToRemove) {\r\n      if (confirm(\"Are you sure you want to delete this item?\")) {\r\n        var commentIndex = comments.indexOf(commentToRemove);\r\n        comments.splice(commentIndex, 1);\r\n        commitChanges();\r\n      }\r\n    }\r\n\r\n    function commitChanges() {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n      //Now push to the request item:\r\n      var requestList = web.get_lists().getByTitle(requestListTitle);\r\n      const oListItem = requestList.getItemById(requestId);\r\n      oListItem.set_item(columnName, JSON.stringify(comments()));\r\n      oListItem.update();\r\n\r\n      currCtx.load(oListItem);\r\n\r\n      currCtx.executeQueryAsync(\r\n        function onSuccess() {\r\n          // console.log(\"Updated comments\");\r\n          newCommentText(\"\");\r\n        },\r\n        function onFailure(args, sender) {\r\n          console.error(\"Failed to commit changes.\", args);\r\n        }\r\n      );\r\n    }\r\n\r\n    var publicMembers = {\r\n      comments: comments,\r\n      newCommentText: newCommentText,\r\n      onSubmit: onSubmit,\r\n      onRemove: onRemove,\r\n      toggleShowHistory: toggleShowHistory,\r\n      showHistoryBool: showHistoryBool,\r\n    };\r\n\r\n    return publicMembers;\r\n  }\r\n\r\n  function ViewModel() {\r\n    var self = this;\r\n\r\n    self.debugMode = ko.observable(false);\r\n\r\n    self.siteUrl = Audit.Common.Utilities.GetSiteUrl();\r\n\r\n    //cant add rate limit because it'll affect the refresh\r\n    //self.arrResponses = ko.observableArray( null ).extend({ rateLimit: 500 });\r\n    self.arrResponses = ko.observableArray(null);\r\n\r\n    // self.arrFilteredResponsesCount = ko.observable(0);\r\n\r\n    self.cntPendingReview = ko.observable(0);\r\n\r\n    self.ddOptionsResponseTabRequestID = ko.observableArray();\r\n    self.ddOptionsResponseTabRequestStatus = ko.observableArray();\r\n    self.ddOptionsResponseTabRequestInternalDueDate = ko.observableArray();\r\n    self.ddOptionsResponseTabRequestSample = ko.observableArray();\r\n    self.ddOptionsResponseTabResponseTitle = ko.observableArray();\r\n    self.ddOptionsResponseTabResponseStatus = ko.observableArray();\r\n    self.filterResponseTabRequestID = ko.observable();\r\n    self.filterResponseTabRequestStatus = ko.observable();\r\n    self.filterResponseTabRequestIntDueDate = ko.observable();\r\n    self.filterResponseTabSampleNum = ko.observable();\r\n    self.filterResponseTabResponseName = ko.observable();\r\n    self.filterResponseTabResponseStatus = ko.observable();\r\n    self.doSort = ko.observable(false);\r\n\r\n    self.ddOptionsResponseInfoTabResponseNameOpen2 = ko.observableArray();\r\n    self.ddOptionsResponseInfoTabResponseNameProcessed2 = ko.observableArray();\r\n    self.filterResponseInfoTabResponseNameOpen2 = ko.observable(\"\");\r\n    self.filterResponseInfoTabResponseNameProcessed2 = ko.observable(\"\");\r\n\r\n    self.currentResponse = ko.observable();\r\n    self.arrCoverSheets = ko.observableArray(null);\r\n    self.arrResponseDocs = ko.observable();\r\n    self.cntResponseDocs = ko.observable(0);\r\n\r\n    self.showBulkApprove = ko.observable(false);\r\n    self.showCloseResponse = ko.observable(false);\r\n    self.showReturnToCGFS = ko.observable(false);\r\n\r\n    self.tabOpts = {\r\n      Responses: new Tab(\"response-report\", \"Status Report\", {\r\n        id: \"responseStatusReportTemplate\",\r\n        data: self,\r\n      }),\r\n      ResponseDetail: new Tab(\"response-detail\", \"Responses\", {\r\n        id: \"responseDetailTemplate\",\r\n        data: self,\r\n      }),\r\n    };\r\n\r\n    self.tabs = new TabsModule(Object.values(self.tabOpts));\r\n\r\n    /** Behaviors **/\r\n\r\n    self.ClearFiltersResponseTab = function () {\r\n      self.filterResponseTabRequestID(\"\");\r\n      self.filterResponseTabRequestStatus(\"\");\r\n      self.filterResponseTabRequestIntDueDate(\"\");\r\n      self.filterResponseTabSampleNum(\"\");\r\n      self.filterResponseTabResponseName(\"\");\r\n      self.filterResponseTabResponseStatus(\"\");\r\n    };\r\n\r\n    /*self.GoToResponse = function( response )\r\n\t\t{\r\n\t\t\t$('#tabs').tabs({ active: 1 });\t\t\t\r\n\t\t\t\r\n\t\t\tvar requestStatus = response.requestStatus;\r\n\t\t\tvar responseStatus = response.status;\r\n\t\t\tif( (responseStatus == \"4-Approved for QA\" || responseStatus == \"6-Reposted After Rejection\" ) && ( requestStatus  == \"Open\" || requestStatus == \"ReOpened\") )  \r\n\t\t\t\tself.filterResponseNameOpen2 ( response.title );\r\n\t\t\telse\r\n\t\t\t\tself.filterResponseNameProcessed2 ( response.title );\r\n\t\t};\t*/\r\n\r\n    self.filteredResponses = ko.pureComputed(() => {\r\n      const responses = ko.unwrap(self.arrResponses);\r\n      var requestID = self.filterResponseTabRequestID();\r\n      var requestStatus = self.filterResponseTabRequestStatus();\r\n      var requestIntDueDate = self.filterResponseTabRequestIntDueDate();\r\n      var sampleNum = self.filterResponseTabSampleNum();\r\n      var responseName = self.filterResponseTabResponseName();\r\n      var responseStatus = self.filterResponseTabResponseStatus();\r\n\r\n      if (\r\n        !requestID &&\r\n        !requestStatus &&\r\n        !requestIntDueDate &&\r\n        !sampleNum &&\r\n        !responseName &&\r\n        !responseStatus\r\n      ) {\r\n        // self.arrFilteredResponsesCount(responses.length);\r\n        document.body.style.cursor = \"default\";\r\n        return responses;\r\n      }\r\n\r\n      const filteredResponses = responses.filter((response) => {\r\n        if (responseStatus && response.status != responseStatus) return false;\r\n        if (requestID && response.reqNumber != requestID) return false;\r\n        if (requestStatus && response.requestStatus != requestStatus)\r\n          return false;\r\n        if (requestIntDueDate && response.internalDueDate != requestIntDueDate)\r\n          return false;\r\n        if (responseName && response.title != responseName) return false;\r\n        if (sampleNum && response.sample != sampleNum) return false;\r\n\r\n        return true;\r\n      });\r\n      // self.arrFilteredResponsesCount(filteredResponses.length);\r\n\r\n      return filteredResponses;\r\n    });\r\n    self.arrFilteredResponsesCount = ko.pureComputed(() => {\r\n      return self.filteredResponses().length;\r\n    });\r\n\r\n    // self.responseIsFiltered = function () {};\r\n\r\n    self.FilterChangedResponseTab = function () {\r\n      document.body.style.cursor = \"wait\";\r\n      setTimeout(function () {\r\n        var requestID = self.filterResponseTabRequestID();\r\n        var requestStatus = self.filterResponseTabRequestStatus();\r\n        var requestIntDueDate = self.filterResponseTabRequestIntDueDate();\r\n        var sampleNum = self.filterResponseTabSampleNum();\r\n        var responseName = self.filterResponseTabResponseName();\r\n        var responseStatus = self.filterResponseTabResponseStatus();\r\n\r\n        if (\r\n          !requestID &&\r\n          !requestStatus &&\r\n          !requestIntDueDate &&\r\n          !sampleNum &&\r\n          !responseName &&\r\n          !responseStatus\r\n        ) {\r\n          $(\".sr-response-item\").show();\r\n          // self.arrFilteredResponsesCount(self.arrResponses().length);\r\n          document.body.style.cursor = \"default\";\r\n          return;\r\n        }\r\n\r\n        requestID = !requestID ? \"\" : requestID;\r\n        requestStatus = !requestStatus ? \"\" : requestStatus;\r\n        requestIntDueDate = !requestIntDueDate ? \"\" : requestIntDueDate;\r\n        sampleNum = !sampleNum ? \"\" : sampleNum;\r\n        responseName = !responseName ? \"\" : responseName;\r\n        responseStatus = !responseStatus ? \"\" : responseStatus;\r\n\r\n        var count = 0;\r\n        var eacher = $(\".sr-response-item\");\r\n        eacher.each(function () {\r\n          var hide = false;\r\n\r\n          if (\r\n            !hide &&\r\n            requestID != \"\" &&\r\n            $.trim($(this).find(\".sr-response-requestNum\").text()) != requestID\r\n          )\r\n            hide = true;\r\n          if (\r\n            !hide &&\r\n            requestStatus != \"\" &&\r\n            $.trim($(this).find(\".sr-response-requestStatus\").text()) !=\r\n              requestStatus\r\n          )\r\n            hide = true;\r\n          if (\r\n            !hide &&\r\n            requestIntDueDate != \"\" &&\r\n            $.trim($(this).find(\".sr-response-internalDueDate\").text()) !=\r\n              requestIntDueDate\r\n          )\r\n            hide = true;\r\n          if (\r\n            !hide &&\r\n            responseName != \"\" &&\r\n            $.trim($(this).find(\".sr-response-title\").text()) != responseName\r\n          )\r\n            hide = true;\r\n          if (\r\n            !hide &&\r\n            sampleNum != \"\" &&\r\n            $.trim($(this).find(\".sr-response-sample\").text()) != sampleNum\r\n          )\r\n            hide = true;\r\n          if (\r\n            !hide &&\r\n            responseStatus != \"\" &&\r\n            $.trim($(this).find(\".sr-response-status\").text()) != responseStatus\r\n          )\r\n            hide = true;\r\n\r\n          if (hide) $(this).hide();\r\n          else {\r\n            $(this).show();\r\n            count++;\r\n          }\r\n        });\r\n\r\n        // self.arrFilteredResponsesCount(count);\r\n        document.body.style.cursor = \"default\";\r\n      }, 100);\r\n    };\r\n\r\n    self.ClickHelpResponseDocs = function () {\r\n      m_fnDisplayHelpResponseDocs();\r\n    };\r\n\r\n    self.ClickCloseResponse = function () {\r\n      m_fnCloseResponse();\r\n    };\r\n\r\n    self.ClickReturnToCGFS = function () {\r\n      m_fnReturnToCGFS();\r\n    };\r\n\r\n    self.ClickBulkApprove = function () {\r\n      m_fnApproveAll();\r\n    };\r\n\r\n    self.ClickApproveResponseDoc = function (oResponseDoc) {\r\n      if (oResponseDoc && oResponseDoc.ID && oResponseDoc.fileName)\r\n        m_fnApproveResponseDoc(oResponseDoc.ID, oResponseDoc.fileName);\r\n    };\r\n\r\n    self.ClickRejectResponseDoc = function (oResponseDoc) {\r\n      if (oResponseDoc && oResponseDoc.ID && oResponseDoc.fileName)\r\n        m_fnRejectResponseDoc(oResponseDoc.ID, oResponseDoc.fileName);\r\n    };\r\n\r\n    /** Subscriptions **/\r\n\r\n    self.currentResponse.subscribe((response) => {\r\n      if (response) setUrlParam(responseParam, response.title);\r\n    });\r\n\r\n    self.doSort.subscribe(function (newValue) {\r\n      Audit.Common.Utilities.OnLoadDisplayTimeStamp();\r\n\r\n      //alert(\"in dosort: \" + self.arrResponses().length );\r\n      if (self.arrResponses().length > 0 && newValue) {\r\n        //should trigger only once\r\n        // self.arrFilteredResponsesCount(self.arrResponses().length);\r\n\r\n        //draw these first\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseTabResponseStatus(),\r\n          self.GetDDVals(\"status\")\r\n        );\r\n        self.ddOptionsResponseTabResponseStatus.valueHasMutated();\r\n\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseInfoTabResponseNameOpen2(),\r\n          self.GetDDVals2(\"1\", true)\r\n        );\r\n        self.ddOptionsResponseInfoTabResponseNameOpen2.valueHasMutated();\r\n\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseInfoTabResponseNameProcessed2(),\r\n          self.GetDDVals2(\"0\", true)\r\n        );\r\n        self.ddOptionsResponseInfoTabResponseNameProcessed2.valueHasMutated();\r\n\r\n        //draw these next\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseTabRequestID(),\r\n          self.GetDDVals(\"reqNumber\")\r\n        );\r\n        self.ddOptionsResponseTabRequestID.valueHasMutated();\r\n\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseTabRequestStatus(),\r\n          self.GetDDVals(\"requestStatus\")\r\n        );\r\n        self.ddOptionsResponseTabRequestStatus.valueHasMutated();\r\n\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseTabRequestInternalDueDate(),\r\n          self.GetDDVals(\"internalDueDate\")\r\n        );\r\n        self.ddOptionsResponseTabRequestInternalDueDate.valueHasMutated();\r\n\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseTabRequestSample(),\r\n          self.GetDDVals(\"sample\")\r\n        );\r\n        self.ddOptionsResponseTabRequestSample.valueHasMutated();\r\n\r\n        ko.utils.arrayPushAll(\r\n          self.ddOptionsResponseTabResponseTitle(),\r\n          self.GetDDVals(\"title\", true)\r\n        );\r\n        self.ddOptionsResponseTabResponseTitle.valueHasMutated();\r\n\r\n        setTimeout(function () {\r\n          var paramTabIndex = GetUrlKeyValue(\"Tab\");\r\n          if (paramTabIndex != null && paramTabIndex != \"\") {\r\n            _myViewModel.tabs.selectById(paramTabIndex);\r\n          } else {\r\n            _myViewModel.tabs.selectTab(_myViewModel.tabOpts.Responses);\r\n          }\r\n          var paramResponseNum = GetUrlKeyValue(\"ResNum\");\r\n          if (paramResponseNum != null && paramResponseNum != \"\") {\r\n            if (paramTabIndex == _myViewModel.tabOpts.Responses.id) {\r\n              if (\r\n                $(\"#ddlResponseName option[value='\" + paramResponseNum + \"']\")\r\n                  .length > 0\r\n              )\r\n                _myViewModel.filterResponseTabResponseName(paramResponseNum);\r\n            } else {\r\n              if (\r\n                $(\"#ddlResponsesOpen option[value='\" + paramResponseNum + \"']\")\r\n                  .length > 0\r\n              )\r\n                _myViewModel.filterResponseInfoTabResponseNameOpen2(\r\n                  paramResponseNum\r\n                );\r\n              else if (\r\n                $(\r\n                  \"#ddlResponsesProcessed option[value='\" +\r\n                    paramResponseNum +\r\n                    \"']\"\r\n                ).length > 0\r\n              )\r\n                _myViewModel.filterResponseInfoTabResponseNameProcessed2(\r\n                  paramResponseNum\r\n                );\r\n            }\r\n          }\r\n\r\n          BindHandlersOnLoad();\r\n\r\n          if (m_resStatusToFilterOn != \"\")\r\n            self.filterResponseTabResponseStatus(m_resStatusToFilterOn);\r\n          else self.filterResponseTabRequestStatus(\"Open\");\r\n\r\n          //$( \"#tblStatusReportResponses\" ).trigger(\"update\");\r\n          $(\"#tblStatusReportResponses\").tablesorter({\r\n            sortList: [[3, 0]],\r\n            selectorHeaders: \".sorter-true\",\r\n          });\r\n        }, 200);\r\n      }\r\n    });\r\n\r\n    /* second tab */\r\n    self.filterResponseInfoTabResponseNameOpen2.subscribe(function (newValue) {\r\n      self.filterResponseInfoTabResponseName(newValue, true);\r\n    });\r\n\r\n    /* second tab */\r\n    self.filterResponseInfoTabResponseNameProcessed2.subscribe(function (\r\n      newValue\r\n    ) {\r\n      self.filterResponseInfoTabResponseName(newValue, false);\r\n    });\r\n\r\n    /* second tab */\r\n    self.filterResponseInfoTabResponseName = function (\r\n      newValue,\r\n      bOpenResponses\r\n    ) {\r\n      self.currentResponse(null);\r\n      self.arrCoverSheets([]);\r\n      self.arrResponseDocs(null);\r\n      self.cntResponseDocs(0);\r\n      self.showBulkApprove(false);\r\n      self.showCloseResponse(false);\r\n      self.showReturnToCGFS(false);\r\n\r\n      var oResponse = m_bigMap[\"response-\" + newValue];\r\n      if (oResponse) {\r\n        if (bOpenResponses)\r\n          self.filterResponseInfoTabResponseNameProcessed2(\"\");\r\n        else self.filterResponseInfoTabResponseNameOpen2(\"\");\r\n\r\n        self.currentResponse(oResponse);\r\n\r\n        LoadTabResponseInfoCoverSheets(oResponse);\r\n        LoadTabResponseInfoResponseDocs(oResponse);\r\n\r\n        setTimeout(function () {\r\n          const notifyId = SP.UI.Notify.addNotification(\r\n            \"Displaying Response (\" + oResponse.title + \")\",\r\n            false\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n    /**Other**/\r\n    self.GetDDVals = function (fieldName, sortAsResponse) {\r\n      var types = ko.utils.arrayMap(self.arrResponses(), function (item) {\r\n        return item[fieldName];\r\n      });\r\n\r\n      var ddArr = ko.utils.arrayGetDistinctValues(types).sort();\r\n      if (sortAsResponse) ddArr.sort(Audit.Common.Utilities.SortResponseTitles);\r\n\r\n      if (ddArr[0] == \"\") ddArr.shift();\r\n\r\n      return ddArr;\r\n    };\r\n\r\n    self.GetDDVals2 = function (responseStatusType, sortAsResponse) {\r\n      var types = ko.utils.arrayMap(self.arrResponses(), function (item) {\r\n        var requestStatus = item.requestStatus;\r\n        var responseStatus = item.status;\r\n\r\n        if (responseStatusType == 0) {\r\n          //get the other responses\r\n          if (\r\n            responseStatus != \"4-Approved for QA\" &&\r\n            responseStatus != \"6-Reposted After Rejection\"\r\n          )\r\n            return item[\"title\"];\r\n          else return \"\";\r\n        } else if (responseStatusType == 1) {\r\n          //get responses pending action\r\n          if (\r\n            (responseStatus == \"4-Approved for QA\" ||\r\n              responseStatus == \"6-Reposted After Rejection\") &&\r\n            (requestStatus == \"Open\" || requestStatus == \"ReOpened\")\r\n          )\r\n            return item[\"title\"];\r\n          else return \"\";\r\n        }\r\n      });\r\n\r\n      var ddArr = ko.utils.arrayGetDistinctValues(types).sort();\r\n      if (sortAsResponse) ddArr.sort(Audit.Common.Utilities.SortResponseTitles);\r\n\r\n      if (ddArr[0] == \"\") ddArr.shift();\r\n      return ddArr;\r\n    };\r\n  }\r\n\r\n  var _myViewModel = new ViewModel();\r\n  ko.applyBindings(_myViewModel);\r\n\r\n  LoadInfo();\r\n\r\n  function LoadInfo() {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    const m_currentUser = web.get_currentUser();\r\n    currCtx.load(m_currentUser);\r\n\r\n    var requestList = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetListTitleRequests());\r\n    var requestQuery = new SP.CamlQuery();\r\n    requestQuery.set_viewXml(\r\n      '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy></Query></View>'\r\n    );\r\n    m_requestItems = requestList.getItems(requestQuery);\r\n    currCtx.load(\r\n      m_requestItems,\r\n      \"Include(ID, Title, ReqSubject, ReqStatus, IsSample, InternalDueDate, ActionOffice, Comments, RelatedAudit, ActionItems, EmailSent, ClosedDate, Modified)\"\r\n    );\r\n\r\n    var requestInternalList = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetListTitleRequestsInternal());\r\n    var requestInternalQuery = new SP.CamlQuery();\r\n    requestInternalQuery.set_viewXml(\r\n      '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy></Query></View>'\r\n    );\r\n    m_requestInternalItems = requestInternalList.getItems(requestInternalQuery);\r\n    currCtx.load(\r\n      m_requestInternalItems,\r\n      \"Include(ID, Title, ReqNum, InternalStatus)\"\r\n    );\r\n\r\n    var responseList = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetListTitleResponses());\r\n    var responseQuery = new SP.CamlQuery();\r\n    responseQuery.set_viewXml(\r\n      '<View Scope=\"RecursiveAll\"><Query><OrderBy><FieldRef Name=\"ReqNum\"/></OrderBy></Query></View>'\r\n    );\r\n    m_responseItems = responseList.getItems(responseQuery);\r\n    currCtx.load(\r\n      m_responseItems,\r\n      \"Include(ID, Title, ReqNum, ActionOffice, SampleNumber, ResStatus, Comments, Modified, ClosedDate, ClosedBy)\"\r\n    );\r\n\r\n    //make sure to only pull documents (fsobjtype = 0)\r\n    var responseDocsLib = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n    var responseDocsQuery = new SP.CamlQuery();\r\n    responseDocsQuery.set_viewXml(\r\n      '<View Scope=\"RecursiveAll\"><Query><Where><Eq><FieldRef Name=\"ContentType\"/><Value Type=\"Text\">Document</Value></Eq></Where></Query></View>'\r\n    );\r\n    m_ResponseDocsItems = responseDocsLib.getItems(responseDocsQuery);\r\n    currCtx.load(\r\n      m_ResponseDocsItems,\r\n      \"Include(ID, Title, ReqNum, ResID, DocumentStatus, RejectReason, ReceiptDate, FileLeafRef, FileDirRef, File_x0020_Size, Modified, Editor)\"\r\n    );\r\n\r\n    var aoList = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetListTitleActionOffices());\r\n    var aoQuery = new SP.CamlQuery();\r\n    aoQuery.set_viewXml(\r\n      '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy></Query></View>'\r\n    );\r\n    m_aoItems = aoList.getItems(aoQuery);\r\n    currCtx.load(m_aoItems, \"Include(ID, Title, UserGroup)\");\r\n\r\n    memberGroup = web.get_associatedMemberGroup();\r\n    currCtx.load(memberGroup);\r\n\r\n    currCtx.executeQueryAsync(OnSuccess, OnFailure);\r\n    function OnSuccess(sender, args) {\r\n      $(\"#divRefresh\").show();\r\n      m_fnLoadData();\r\n    }\r\n    function OnFailure(sender, args) {\r\n      $(\"#divRefresh\").hide();\r\n      $(\"#divLoading\").hide();\r\n\r\n      const statusId = SP.UI.Status.addStatus(\r\n        \"Request failed: \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n      );\r\n      SP.UI.Status.setStatusPriColor(statusId, \"red\");\r\n    }\r\n  }\r\n\r\n  function m_fnLoadData() {\r\n    Audit.Common.Utilities.LoadActionOffices(m_aoItems);\r\n\r\n    if (memberGroup != null) m_IA_SPGroupName = memberGroup.get_title();\r\n    if (m_IA_SPGroupName == null || m_IA_SPGroupName == \"\") {\r\n      const statusId = SP.UI.Status.addStatus(\r\n        \"Unable to retrieve the IA SharePoint Group. Please contact the Administrator\"\r\n      );\r\n      SP.UI.Status.setStatusPriColor(statusId, \"red\");\r\n      return;\r\n    }\r\n\r\n    m_IA_ActionOffice = Audit.Common.Utilities.GetActionOffices()?.find(\r\n      (ao) => ao.userGroup == m_IA_SPGroupName\r\n    );\r\n\r\n    LoadRequests();\r\n    LoadResponses();\r\n    LoadResponseDocs();\r\n\r\n    LoadTabStatusReport(m_arrResponses, \"fbody\");\r\n  }\r\n\r\n  function LoadRequests() {\r\n    m_bigMap = new Object();\r\n    m_arrRequests = new Array();\r\n\r\n    var cnt = 0;\r\n    var listItemEnumerator = m_requestItems.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var oListItem = listItemEnumerator.get_current();\r\n\r\n      var id = oListItem.get_item(\"ID\");\r\n      var number = oListItem.get_item(\"Title\");\r\n      var status = oListItem.get_item(\"ReqStatus\");\r\n      var sample = oListItem.get_item(\"IsSample\");\r\n      var emailSent = oListItem.get_item(\"EmailSent\");\r\n\r\n      var subject = oListItem.get_item(\"ReqSubject\");\r\n      if (subject == null) subject = \"\";\r\n\r\n      var arrActionOffice = oListItem.get_item(\"ActionOffice\");\r\n      var actionOffice = \"\";\r\n      for (var x = 0; x < arrActionOffice.length; x++) {\r\n        actionOffice +=\r\n          \"<div>\" + arrActionOffice[x].get_lookupValue() + \"</div>\";\r\n      }\r\n\r\n      var internalDueDate = oListItem.get_item(\"InternalDueDate\");\r\n      var closedDate = oListItem.get_item(\"ClosedDate\");\r\n\r\n      internalDueDate != null\r\n        ? (internalDueDate = internalDueDate.format(\"MM/dd/yyyy\"))\r\n        : (internalDueDate = \"\");\r\n      closedDate != null\r\n        ? (closedDate = closedDate.format(\"MM/dd/yyyy\"))\r\n        : (closedDate = \"\");\r\n\r\n      var comments = oListItem.get_item(\"Comments\");\r\n      var relatedAudit = oListItem.get_item(\"RelatedAudit\");\r\n      var actionItems = oListItem.get_item(\"ActionItems\");\r\n\r\n      if (comments == null) comments = \"\";\r\n      if (relatedAudit == null) relatedAudit = \"\";\r\n      if (actionItems == null) actionItems = \"\";\r\n\r\n      var requestObject = new Object();\r\n      requestObject[\"ID\"] = id;\r\n      requestObject[\"number\"] = number;\r\n      requestObject[\"subject\"] = subject;\r\n      requestObject[\"status\"] = status;\r\n      requestObject[\"internalDueDate\"] = internalDueDate;\r\n      requestObject[\"sample\"] = sample;\r\n      requestObject[\"actionOffice\"] = actionOffice;\r\n      requestObject[\"comments\"] = comments;\r\n      requestObject[\"emailSent\"] = emailSent;\r\n      requestObject[\"closedDate\"] = closedDate;\r\n      requestObject[\"relatedAudit\"] = relatedAudit;\r\n      requestObject[\"actionItems\"] = actionItems;\r\n\r\n      requestObject[\"arrIndex\"] = cnt;\r\n      m_arrRequests.push(requestObject);\r\n\r\n      m_bigMap[number] = requestObject;\r\n      cnt++;\r\n    }\r\n\r\n    // Also load our Internal Request Status here and bolt these objects onto the requests\r\n    try {\r\n      var listItemEnumerator = m_requestInternalItems.getEnumerator();\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n\r\n        var id = oListItem.get_item(\"ID\");\r\n        var reqNum = oListItem.get_item(\"ReqNum\");\r\n\r\n        if (!reqNum || !reqNum.get_lookupValue()) {\r\n          console.warn(\"Unaffiliated Internal Status ID:\", id);\r\n          continue;\r\n        }\r\n\r\n        var requestObject = m_bigMap[reqNum.get_lookupValue()];\r\n\r\n        requestObject.internalStatus = new CommentChainField(id, {\r\n          requestListTitle:\r\n            Audit.Common.Utilities.GetListTitleRequestsInternal(),\r\n          columnName: \"InternalStatus\",\r\n          initialValue: oListItem.get_item(\"InternalStatus\"),\r\n        });\r\n      }\r\n    } catch (err) {\r\n      alert(err);\r\n    }\r\n  }\r\n\r\n  function LoadResponses() {\r\n    m_arrResponses = new Array();\r\n\r\n    var cnt = 0;\r\n    var listItemEnumerator = m_responseItems.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var oListItem = listItemEnumerator.get_current();\r\n\r\n      var number = oListItem.get_item(\"ReqNum\");\r\n      if (number != null) {\r\n        number = number.get_lookupValue();\r\n\r\n        var responseObject = new Object();\r\n        responseObject[\"request\"] = m_bigMap[number]; //GetRequest( number );\r\n        if (!responseObject.request || !responseObject.request.emailSent)\r\n          //they should see it if they have access; then there's probably a permissions issue\r\n          continue;\r\n\r\n        responseObject[\"item\"] = oListItem;\r\n\r\n        responseObject[\"resStatus\"] = oListItem.get_item(\"ResStatus\");\r\n\r\n        responseObject[\"actionOffice\"] = oListItem.get_item(\"ActionOffice\");\r\n        if (responseObject[\"actionOffice\"] == null)\r\n          responseObject[\"actionOffice\"] = \"\";\r\n        else\r\n          responseObject[\"actionOffice\"] =\r\n            responseObject[\"actionOffice\"].get_lookupValue();\r\n        if (responseObject[\"actionOffice\"] == \"\") continue;\r\n\r\n        responseObject[\"ID\"] = oListItem.get_item(\"ID\");\r\n        responseObject[\"number\"] = number;\r\n\r\n        var title = oListItem.get_item(\"Title\");\r\n        responseObject[\"title\"] = title;\r\n\r\n        var modifiedDate = oListItem.get_item(\"Modified\");\r\n        modifiedDate != null\r\n          ? (modifiedDate = modifiedDate.format(\"MM/dd/yyyy hh:mm tt\"))\r\n          : (modifiedDate = \"\");\r\n        responseObject[\"modified\"] = modifiedDate;\r\n\r\n        var closedDate = oListItem.get_item(\"ClosedDate\");\r\n        closedDate != null\r\n          ? (closedDate = closedDate.format(\"MM/dd/yyyy\"))\r\n          : (closedDate = \"\");\r\n        responseObject[\"closedDate\"] = closedDate;\r\n\r\n        responseObject[\"sample\"] = oListItem.get_item(\"SampleNumber\");\r\n        if (responseObject[\"sample\"] == null) responseObject[\"sample\"] = \"\";\r\n\r\n        responseObject[\"coversheets\"] = new Array();\r\n        responseObject[\"responseDocs\"] = new Array();\r\n\r\n        var responseComments = oListItem.get_item(\"Comments\");\r\n        if (responseComments == null) responseComments = \"\";\r\n        responseObject[\"comments\"] = responseComments;\r\n\r\n        responseObject[\"closedBy\"] =\r\n          Audit.Common.Utilities.GetFriendlyDisplayName(oListItem, \"ClosedBy\");\r\n\r\n        responseObject[\"arrIndex\"] = cnt;\r\n        m_arrResponses.push(responseObject);\r\n\r\n        m_bigMap[\"response-\" + title] = responseObject;\r\n        cnt++;\r\n      }\r\n    }\r\n  }\r\n\r\n  function LoadResponseDocs() {\r\n    var listItemEnumerator = m_ResponseDocsItems.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var oListItem = listItemEnumerator.get_current();\r\n      if (\r\n        oListItem.get_item(\"DocumentStatus\") == \"Open\" ||\r\n        oListItem.get_item(\"DocumentStatus\") == \"Marked for Deletion\" ||\r\n        oListItem.get_item(\"DocumentStatus\") == \"Submitted\"\r\n      )\r\n        //QA shouldn't see any documents that have been uploaded by AO but not sent to them by IA\r\n        continue;\r\n\r\n      var requestNumber = oListItem.get_item(\"ReqNum\");\r\n      if (requestNumber != null)\r\n        requestNumber = requestNumber.get_lookupValue();\r\n\r\n      var responseID = oListItem.get_item(\"ResID\");\r\n      if (responseID != null) responseID = responseID.get_lookupValue();\r\n\r\n      if (requestNumber == null || responseID == null) continue;\r\n\r\n      try {\r\n        var bigMapItem = m_bigMap[\"response-\" + responseID];\r\n        var indexOfArrResponses = bigMapItem.arrIndex;\r\n        var oResponse = m_arrResponses[indexOfArrResponses];\r\n        if (oResponse) {\r\n          var responseDocObject = new Object();\r\n          responseDocObject[\"ID\"] = oListItem.get_item(\"ID\");\r\n          responseDocObject[\"title\"] = oListItem.get_item(\"Title\");\r\n          if (responseDocObject[\"title\"] == null)\r\n            responseDocObject[\"title\"] = \"\";\r\n          responseDocObject[\"fileName\"] = oListItem.get_item(\"FileLeafRef\");\r\n          responseDocObject[\"title\"] = oListItem.get_item(\"FileLeafRef\");\r\n          responseDocObject[\"folder\"] = oListItem.get_item(\"FileDirRef\");\r\n          responseDocObject[\"documentStatus\"] =\r\n            oListItem.get_item(\"DocumentStatus\");\r\n\r\n          //if( responseDocObject [\"documentStatus\"] == \"Marked for Deletion\" || responseDocObject [\"documentStatus\"] == \"Open\" || responseDocObject [\"documentStatus\"] == \"Submitted\") //this should never be the case\r\n          //\tcontinue;\r\n\r\n          responseDocObject[\"rejectReason\"] =\r\n            oListItem.get_item(\"RejectReason\");\r\n          if (responseDocObject[\"rejectReason\"] == null)\r\n            responseDocObject[\"rejectReason\"] = \"\";\r\n          else\r\n            responseDocObject[\"rejectReason\"] = responseDocObject[\r\n              \"rejectReason\"\r\n            ].replace(/(\\r\\n|\\n|\\r)/gm, \"<br/>\");\r\n          //console.log( responseDocObject [\"rejectReason\"] );\r\n\r\n          var fileSize = oListItem.get_item(\"File_x0020_Size\");\r\n          fileSize = Audit.Common.Utilities.GetFriendlyFileSize(fileSize);\r\n          responseDocObject[\"fileSize\"] = fileSize;\r\n\r\n          var receiptDate = \"\";\r\n          if (\r\n            oListItem.get_item(\"ReceiptDate\") != null &&\r\n            oListItem.get_item(\"ReceiptDate\") != \"\"\r\n          )\r\n            receiptDate = oListItem\r\n              .get_item(\"ReceiptDate\")\r\n              .format(\"MM/dd/yyyy\");\r\n          responseDocObject[\"receiptDate\"] = receiptDate;\r\n\r\n          var modifiedDate = \"\";\r\n          if (\r\n            oListItem.get_item(\"Modified\") != null &&\r\n            oListItem.get_item(\"Modified\") != \"\"\r\n          )\r\n            modifiedDate = oListItem\r\n              .get_item(\"Modified\")\r\n              .format(\"MM/dd/yyyy hh:mm tt\");\r\n          responseDocObject[\"modifiedDate\"] = modifiedDate;\r\n\r\n          responseDocObject[\"modifiedBy\"] =\r\n            Audit.Common.Utilities.GetFriendlyDisplayName(oListItem, \"Editor\");\r\n\r\n          responseDocObject[\"item\"] = oListItem;\r\n\r\n          oResponse[\"responseDocs\"].push(responseDocObject);\r\n          //bigMapItem[\"responseDocs\"].push( responseDocObject );\r\n        }\r\n      } catch (err) {}\r\n    }\r\n  }\r\n\r\n  function LoadTabStatusReport(arr, fbody) {\r\n    if (arr == null) return;\r\n\r\n    //var bLoadTest = GetUrlKeyValue(\"LoadTest\");\r\n    var responseArr = new Array();\r\n\r\n    var responseStatus1 = \"4-Approved for QA\";\r\n    var responseStatus2 = \"6-Reposted After Rejection\";\r\n\r\n    var count = 0;\r\n    var resStatus1 = 0;\r\n    var resStatus2 = 0;\r\n\r\n    var arrlength = arr.length;\r\n    while (arrlength--) {\r\n      var oResponse = arr[arrlength];\r\n      var responseTitle = oResponse.title;\r\n      var requestStatus = oResponse.request.status;\r\n      var responseStatus = oResponse.resStatus;\r\n\r\n      var highlight = false;\r\n      if (\r\n        (responseStatus == responseStatus1 ||\r\n          responseStatus == responseStatus2) &&\r\n        (requestStatus == \"Open\" || requestStatus == \"ReOpened\")\r\n      ) {\r\n        count++;\r\n\r\n        if (responseStatus == responseStatus1) resStatus1++;\r\n        else resStatus2++;\r\n\r\n        highlight = true;\r\n      }\r\n\r\n      var responseTitle = oResponse.title;\r\n      var requestStatus = oResponse.request.status;\r\n      var responseStatus = oResponse.resStatus;\r\n\r\n      var aResponse = {\r\n        reqNumber: oResponse.request.number,\r\n        requestSubject: oResponse.request.subject,\r\n        requestStatus: requestStatus,\r\n        internalDueDate: oResponse.request.internalDueDate,\r\n        sample: oResponse.sample,\r\n        title: responseTitle,\r\n        status: responseStatus,\r\n        docCount: oResponse.responseDocs.length,\r\n        modified: oResponse.modified,\r\n        comments: oResponse.comments,\r\n        highlight: highlight,\r\n        visibleRow: ko.observable(true),\r\n      };\r\n      responseArr.push(aResponse);\r\n\r\n      /*if( bLoadTest )\r\n\t\t\t{\r\n\t\t\t\tfor( var z = 0; z < 99; z++ )\r\n\t\t\t\t{\r\n\t\t\t\t\tresponseArr.push( aResponse );\r\n\t\t\t\t}\t\r\n\t\t\t}*/\r\n    }\r\n\r\n    //if( bLoadTest )\r\n    //\t_myViewModel.debugMode( true );\r\n\r\n    if (responseArr.length > 0) {\r\n      m_resStatusToFilterOn = \"\";\r\n      if (resStatus1 > 0 && resStatus2 == 0)\r\n        m_resStatusToFilterOn = responseStatus1;\r\n      else if (resStatus2 > 0 && resStatus1 == 0)\r\n        m_resStatusToFilterOn = responseStatus2;\r\n\r\n      _myViewModel.cntPendingReview(count);\r\n\r\n      ko.utils.arrayPushAll(_myViewModel.arrResponses, responseArr);\r\n\r\n      //do this after push all because this takes some time\r\n      // var output = $(\"#responseTemplate\").render(responseArr);\r\n      // $(\"#\" + fbody).html(output);\r\n\r\n      //DoUpdateModel( responseArr, true);\r\n    }\r\n\r\n    //always do this even if 0 responses\r\n    _myViewModel.doSort(true);\r\n  }\r\n\r\n  /////////OBSOLETE\r\n  //recursive function\r\n  function DoUpdateModel(arrResponsesToAdd, initialTrip) {\r\n    /*\r\n\t\tko.utils.arrayPushAll( _myViewModel.arrResponses, arrResponsesToAdd);\r\n\t\t_myViewModel.arrResponses.valueHasMutated();\r\n\t\t_myViewModel.doSort ( true );\r\n\t\treturn;\r\n\t\t*/\r\n\r\n    var subArr = [];\r\n\r\n    var bContinue = true;\r\n    var batchSize = 100;\r\n    if (initialTrip) batchSize = 100;\r\n\r\n    if (arrResponsesToAdd.length >= batchSize) {\r\n      subArr = arrResponsesToAdd.slice(0, batchSize);\r\n      arrResponsesToAdd.splice(0, batchSize);\r\n    } else if (arrResponsesToAdd.length > 0) {\r\n      subArr = arrResponsesToAdd.slice(0, arrResponsesToAdd.length);\r\n      arrResponsesToAdd.splice(0, arrResponsesToAdd.length);\r\n    }\r\n\r\n    if (bContinue) {\r\n      ////////////// Not sure if I should be doing .arrResponses or .arrResponses()\r\n      ko.utils.arrayPushAll(_myViewModel.arrResponses(), subArr);\r\n\r\n      var updatedMutated = false;\r\n      if (initialTrip) {\r\n        //\t_myViewModel.arrResponses.valueHasMutated();\r\n        updatedMutated = true;\r\n      }\r\n\r\n      _myViewModel.arrResponses.valueHasMutated();\r\n\r\n      if (arrResponsesToAdd.length == 0) {\r\n        //\t\tif( !initialTrip && !updatedMutated ) //only mutate at the end after initial trip\r\n        //\t\t\t_myViewModel.arrResponses.valueHasMutated();\r\n\r\n        _myViewModel.doSort(true);\r\n      }\r\n\r\n      //DoUpdateModel( arrResponsesToAdd, false );\r\n      if (arrResponsesToAdd.length > 0) {\r\n        //DoUpdateModel( arrResponsesToAdd, false);\r\n        setTimeout(function () {\r\n          DoUpdateModel(arrResponsesToAdd, false);\r\n        }, 100);\r\n\r\n        /*\r\n\t\t\t\tif( initialTrip )\r\n\t\t\t    \tsetTimeout( function(){ DoUpdateModel( arrResponsesToAdd, false); }, 100);\r\n\t\t\t    else\r\n\t\t\t    \tDoUpdateModel( arrResponsesToAdd, false );*/\r\n      }\r\n    }\r\n  }\r\n\r\n  function LoadTabResponseInfoCoverSheets(oResponse) {\r\n    _myViewModel.arrCoverSheets([]);\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var coverSheetLib = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetLibTitleCoverSheets());\r\n    var coverSheetQuery = new SP.CamlQuery();\r\n    coverSheetQuery.set_viewXml(\r\n      '<View Scope=\"RecursiveAll\"><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy><Where><Eq><FieldRef Name=\"ReqNum\"/><Value Type=\"Text\">' +\r\n        oResponse.request.number +\r\n        \"</Value></Eq></Where></Query></View>\"\r\n    );\r\n    const m_subsetCoverSheetItems = coverSheetLib.getItems(coverSheetQuery);\r\n    currCtx.load(\r\n      m_subsetCoverSheetItems,\r\n      \"Include(ID, Title, ReqNum, ActionOffice, FileLeafRef, FileDirRef)\"\r\n    );\r\n\r\n    var data = { oResponse: oResponse };\r\n    function OnSuccess(sender, args) {\r\n      var arrCS = new Array();\r\n\r\n      var listItemEnumerator = m_subsetCoverSheetItems.getEnumerator();\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n\r\n        if (oListItem.get_item(\"ActionOffice\") != null) {\r\n          var arrActionOffice = oListItem.get_item(\"ActionOffice\");\r\n          if (arrActionOffice.length > 0) {\r\n            for (var y = 0; y < arrActionOffice.length; y++) {\r\n              var curActionOffice = arrActionOffice[y].get_lookupValue();\r\n\r\n              if (curActionOffice == this.oResponse.actionOffice) {\r\n                var csFolder = oListItem.get_item(\"FileDirRef\");\r\n                var csTitle = oListItem.get_item(\"FileLeafRef\");\r\n\r\n                arrCS.push({\r\n                  folder: csFolder,\r\n                  fileName: csTitle,\r\n                });\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      ko.utils.arrayPushAll(_myViewModel.arrCoverSheets(), arrCS);\r\n      _myViewModel.arrCoverSheets.valueHasMutated();\r\n    }\r\n    function OnFailure(sender, args) {\r\n      $(\"#tblCoverSheets\").hide();\r\n      $(\"#divEmptyCoversheetsMsg\").show();\r\n    }\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, OnSuccess),\r\n      Function.createDelegate(data, OnFailure)\r\n    );\r\n  }\r\n\r\n  function LoadTabResponseInfoResponseDocs(oResponse) {\r\n    _myViewModel.arrResponseDocs(null);\r\n    _myViewModel.cntResponseDocs(0);\r\n\r\n    _myViewModel.showBulkApprove(false);\r\n    _myViewModel.showCloseResponse(false);\r\n    _myViewModel.showReturnToCGFS(false);\r\n\r\n    if (\r\n      (oResponse == null || oResponse.responseDocs.length == 0) &&\r\n      $(\"#ddlResponsesOpen\").val() != \"\"\r\n    ) {\r\n      //an open response is selected and there are no documents\r\n      notifyId = SP.UI.Notify.addNotification(\r\n        \"There are 0 documents to review for \" + $(\"#ddlResponsesOpen\").val(),\r\n        false\r\n      );\r\n      _myViewModel.showReturnToCGFS(true);\r\n      return;\r\n    }\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    for (var z = 0; z < oResponse.responseDocs.length; z++) {\r\n      var oResponseDoc = oResponse.responseDocs[z];\r\n\r\n      //this loads on execute\r\n      oResponseDoc[\"docIcon\"] = web.mapToIcon(\r\n        oResponseDoc.fileName,\r\n        \"\",\r\n        SP.Utilities.IconSize.Size16\r\n      ); // Audit.Common.Utilities.GetSiteUrl() + \"/\" + _spPageContextInfo.layoutsUrl + \"/images/\" + docIcon;\r\n    }\r\n\r\n    function OnSuccess(sender, args) {\r\n      RenderResponses(oResponse);\r\n    }\r\n    function OnFailure(sender, args) {\r\n      statusId = SP.UI.Status.addStatus(\r\n        \"Request failed: \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n      );\r\n      SP.UI.Status.setStatusPriColor(statusId, \"red\");\r\n    }\r\n    currCtx.executeQueryAsync(OnSuccess, OnFailure);\r\n\r\n    function RenderResponses(oResponse) {\r\n      if (oResponse == null) return;\r\n\r\n      var rowCount = 0;\r\n      var cntCanBeApprovedOrRejected = 0;\r\n      var cntApprovedOrArchived = 0;\r\n      var bDisplayingCloseBtn = false;\r\n\r\n      var arrResponseDocs = new Array();\r\n      for (var z = 0; z < oResponse.responseDocs.length; z++) {\r\n        var oResponseDoc = oResponse.responseDocs[z];\r\n        oResponseDoc.docIcon = oResponseDoc.docIcon.get_value();\r\n        oResponseDoc.styleTag = Audit.Common.Utilities.GetResponseDocStyleTag2(\r\n          oResponseDoc.documentStatus\r\n        );\r\n        oResponseDoc.responseTitle = oResponse.title;\r\n\r\n        if (\r\n          (oResponse.resStatus == \"4-Approved for QA\" ||\r\n            oResponse.resStatus == \"6-Reposted After Rejection\") &&\r\n          oResponseDoc.documentStatus == \"Sent to QA\"\r\n        ) {\r\n          cntCanBeApprovedOrRejected++;\r\n          _myViewModel.showBulkApprove(true);\r\n        } else if (\r\n          (oResponse.resStatus == \"4-Approved for QA\" ||\r\n            oResponse.resStatus == \"6-Reposted After Rejection\") &&\r\n          oResponseDoc.documentStatus == \"Rejected\"\r\n        ) {\r\n          _myViewModel.showReturnToCGFS(true);\r\n        } else if (\r\n          (oResponse.resStatus == \"4-Approved for QA\" ||\r\n            oResponse.resStatus == \"6-Reposted After Rejection\") &&\r\n          (oResponseDoc.documentStatus == \"Archived\" ||\r\n            oResponseDoc.documentStatus == \"Approved\")\r\n        ) {\r\n          cntApprovedOrArchived++;\r\n        }\r\n        arrResponseDocs.push(oResponseDoc);\r\n      }\r\n\r\n      var arrResponseSummary = {\r\n        responseTitle: oResponse.title,\r\n        responseDocs: arrResponseDocs,\r\n        responseStatus: oResponse.resStatus,\r\n      };\r\n\r\n      //this is a fail safe check in case the response didnt close for some reason but all of the documents are approved or archived\r\n      if (\r\n        cntApprovedOrArchived == arrResponseDocs.length &&\r\n        $(\"#ddlResponsesOpen\").val() != \"\"\r\n      ) {\r\n        //check if all documents are complete for QA and that if the response is still open\r\n        _myViewModel.showCloseResponse(true);\r\n        SP.UI.Notify.addNotification(\r\n          \"This Response did not automatically close. Please close this response.\",\r\n          false\r\n        );\r\n      }\r\n\r\n      if (\r\n        !bDisplayingCloseBtn &&\r\n        cntCanBeApprovedOrRejected == 0 &&\r\n        $(\"#ddlResponsesOpen\").val() != \"\"\r\n      ) {\r\n        //make sure an open response is selected\r\n        _myViewModel.showReturnToCGFS(true);\r\n      }\r\n\r\n      _myViewModel.arrResponseDocs(arrResponseSummary);\r\n      _myViewModel.arrResponseDocs.valueHasMutated();\r\n      _myViewModel.cntResponseDocs(oResponse.responseDocs.length);\r\n    }\r\n  }\r\n\r\n  function m_fnDisplayHelpResponseDocs() {\r\n    var helpDlg =\r\n      \"<div id='helpDlg' style='padding:20px; height:100px; width:700px'>\" +\r\n      \"<div style='padding:20px;'><fieldset><legend>Response Document Status</legend> <ul style='padding-top:10px;'>\" +\r\n      \"<li style='padding-top:5px;'><b>Submitted</b> - Submitted to the Internal Auditor by the Action Office</li>\" +\r\n      \"<li style='padding-top:5px;'><b>Sent to QA</b> - Submitted to the Quality Assurance team by the Internal Auditor</li>\" +\r\n      \"<li style='padding-top:5px;'><b>Approved</b> - Approved by the Quality Assurance team and submitted to the External Auditor</li>\" +\r\n      \"<li style='padding-top:5px;'><b>Rejected</b> - Rejected by the Quality Assurance team and returned to the Internal Auditor</li>\" +\r\n      \"<li style='padding-top:5px;'><b>Archived</b> - Previously Rejected by the Quality Assurance team and is now read-only for record keeping</li>\" +\r\n      \"</ul></fieldset></div>\" +\r\n      \"<div style='padding:20px; padding-top:10px;'><fieldset style='padding-top:10px;'><legend>Actions</legend> If the Response Status is <b>4-Approved for QA</b> or <b>6-Reposted After Rejection</b>, then the documents can be <b>Approved</b> or <b>Rejected</b><ul style='padding-top:10px;'>\" +\r\n      \"<li style='padding-top:5px;'><b>Approve</b> - Submit the document to the External Auditor</li>\" +\r\n      \"<li style='padding-top:5px;'><b>Reject</b> - Reject the document and return to the Internal Auditor</li>\" +\r\n      \"</ul></fieldset></div>\" +\r\n      \"<table style='padding-top:10px; width:200px; float:right'>\" +\r\n      \"<tr><td class='ms-separator'>&#160;</td><td><input id='btnCancel' type='button' class='ms-ButtonHeightWidth' value='Close' title='Close Help' onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.cancel)'/></td></tr>\" +\r\n      \"</table></div>\";\r\n\r\n    $(\"body\").append(helpDlg);\r\n\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"Response Documents Help\";\r\n    options.dialogReturnValueCallback = OnCallbackForm;\r\n    options.html = document.getElementById(\"helpDlg\");\r\n    options.height = 450;\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  let m_cntToApprove = 0;\r\n  let m_cntApproved = 0;\r\n  function m_fnApproveAll() {\r\n    m_bIsTransactionExecuting = true;\r\n\r\n    var approveResponseDocDlg =\r\n      \"<div id='approveResponseDocDlg' style='padding:20px; height:100px'><div style='padding:20px;'>Are you sure you would like to <span style='font-weight:bold; color:green'>Approve</span> all remaining documents?</span></div>\" +\r\n      \"<table style='padding-top:10px; width:200px; margin:0px auto'>\" +\r\n      \"<tr><td><input id='btnClientOk1' type='button' class='ms-ButtonHeightWidth' value='Send to Auditor' onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.OK)'/></td>\" +\r\n      \"<td class='ms-separator'>&#160;</td><td><input id='btnCancel' type='button' class='ms-ButtonHeightWidth' value='Close' onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.cancel)'/></td></tr>\" +\r\n      \"</table></div>\";\r\n\r\n    $(\"body\").append(approveResponseDocDlg);\r\n\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"Approve Response Documents\";\r\n    options.dialogReturnValueCallback = OnCallbackApproveAllResponseDoc;\r\n    options.html = document.getElementById(\"approveResponseDocDlg\");\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function m_fnApproveResponseDoc(id, responseDocFileName) {\r\n    m_bIsTransactionExecuting = true;\r\n    //used in callback\r\n    m_itemID = id;\r\n    m_RejectReason = \"\";\r\n\r\n    var approveResponseDocDlg =\r\n      \"<div id='approveResponseDocDlg' style='padding:20px; height:100px'><div style='padding:20px;'>Are you sure you would like to <span style='font-weight:bold; color:green'>Approve</span> the Response Document? <p style='padding-top:10px; font-weight:bold; color:green'>\" +\r\n      responseDocFileName +\r\n      \"</p></span></div>\" +\r\n      \"<table style='padding-top:10px; width:200px; margin:0px auto'>\" +\r\n      \"<tr><td><input id='btnClientOk1' type='button' class='ms-ButtonHeightWidth' value='Send to Auditor' onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.OK)'/></td>\" +\r\n      \"<td class='ms-separator'>&#160;</td><td><input id='btnCancel' type='button' class='ms-ButtonHeightWidth' value='Close' onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.cancel)'/></td></tr>\" +\r\n      \"</table></div>\";\r\n\r\n    $(\"body\").append(approveResponseDocDlg);\r\n\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"Approve Response Document\";\r\n    options.dialogReturnValueCallback = OnCallbackApproveResponseDoc;\r\n    options.html = document.getElementById(\"approveResponseDocDlg\");\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function m_fnRejectResponseDoc(id, responseDocFileName) {\r\n    m_bIsTransactionExecuting = true;\r\n    //used in callback\r\n    m_itemID = id;\r\n    m_RejectReason = \"\";\r\n\r\n    var rejectResponseDocDlg =\r\n      \"<div id='rejectResponseDocDlg' style='padding:20px; height:100px'><div style='padding:20px;'>Are you sure you would like to <span style='font-weight:bold; color:DarkRed'>Reject</span> the Response Document? <p style='padding-top:10px; font-weight:bold; color:DarkRed'>\" +\r\n      responseDocFileName +\r\n      \"</p><p style='padding-top:10px'>If so, please specify the reason: </p><p><textarea id='txtRejectReason' cols='50' rows='3' onkeyup='Audit.QAReport.Report.GetCancelReason()'></textarea></p></span></div>\" +\r\n      \"<table style='padding-top:10px; width:200px; margin:0px auto'>\" +\r\n      \"<tr><td><input id='btnClientOk1' type='button' class='ms-ButtonHeightWidth' value='Yes, Reject Document' disabled='disabled' onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.OK)'/></td>\" +\r\n      \"<td class='ms-separator'>&#160;</td><td><input id='btnCancel' type='button' class='ms-ButtonHeightWidth' value='Close' onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.cancel)'/></td></tr>\" +\r\n      \"</table></div>\";\r\n\r\n    $(\"body\").append(rejectResponseDocDlg);\r\n\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"Reject Response Document\";\r\n    options.dialogReturnValueCallback = OnCallbackRejectResponseDoc;\r\n    options.html = document.getElementById(\"rejectResponseDocDlg\");\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n    $(\"#txtRejectReason\").focus();\r\n  }\r\n\r\n  function m_fnCloseResponse() {\r\n    m_bIsTransactionExecuting = true;\r\n\r\n    var responseDocDlg =\r\n      \"<div id='responseDocDlg' style='padding:20px; height:100px'><div style='padding:20px;'>All documents in this response are Approved. Are you sure you would like to <span style='font-weight:bold; color:green'>Close this Response</span>? </span></div>\" +\r\n      \"<table style='padding-top:10px; width:200px; margin:0px auto'>\" +\r\n      \"<tr><td><input id='btnClientOk1' type='button' class='ms-ButtonHeightWidth' value='Close Response' onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.OK)'/></td>\" +\r\n      \"<td class='ms-separator'>&#160;</td><td><input id='btnCancel' type='button' class='ms-ButtonHeightWidth' value='Close' onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.cancel)'/></td></tr>\" +\r\n      \"</table></div>\";\r\n\r\n    $(\"body\").append(responseDocDlg);\r\n\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"Close Response\";\r\n    options.dialogReturnValueCallback = OnCallbackCloseResponse;\r\n    options.html = document.getElementById(\"responseDocDlg\");\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function m_fnReturnToCGFS() {\r\n    m_bIsTransactionExecuting = true;\r\n\r\n    var responseDocDlg =\r\n      \"<div id='responseDocDlg' style='padding:20px; height:100px'><div style='padding:20px;'>Are you sure you would like to <span style='font-weight:bold; color:darkred'>Return this Response to CGFS</span>? <p style='padding-top:10px;'><b>Note</b>: If you return it, you will no longer be able to Approve or Reject the Remaining Response Documents</p></span></div>\" +\r\n      \"<table style='padding-top:10px; width:200px; margin:0px auto'>\" +\r\n      \"<tr><td><input id='btnClientOk1' type='button' class='ms-ButtonHeightWidth' value='Return to CGFS' onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.OK)'/></td>\" +\r\n      \"<td class='ms-separator'>&#160;</td><td><input id='btnCancel' type='button' class='ms-ButtonHeightWidth' value='Close' onclick='SP.UI.ModalDialog.commonModalDialogClose(SP.UI.DialogResult.cancel)'/></td></tr>\" +\r\n      \"</table></div>\";\r\n\r\n    $(\"body\").append(responseDocDlg);\r\n\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"Return to CGFS\";\r\n    options.dialogReturnValueCallback = OnCallbackReturnToCGFS;\r\n    options.html = document.getElementById(\"responseDocDlg\");\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function m_fnFormatEmailBodyToIAFromQA(oRequest, responseTitle) {\r\n    var emailText =\r\n      \"<div>Audit Request Reference: <b>REQUEST_NUMBER</b></div>\" +\r\n      \"<div>Audit Request Subject: <b>REQUEST_SUBJECT</b></div>\" +\r\n      \"<div>Audit Request Due Date: <b>REQUEST_DUEDATE</b></div><br/>\" +\r\n      \"<div>Below is the Response that was updated: </div>\" +\r\n      \"<div>RESPONSE_TITLE</div>\";\r\n\r\n    emailText = emailText.replace(\"REQUEST_NUMBER\", oRequest.number);\r\n    emailText = emailText.replace(\"REQUEST_SUBJECT\", oRequest.subject);\r\n    emailText = emailText.replace(\"REQUEST_DUEDATE\", oRequest.internalDueDate);\r\n    emailText = emailText.replace(\"REQUEST_ACTIONITEMS\", oRequest.actionItems);\r\n\r\n    var responseTitleBody = \"<ul><li>\" + responseTitle + \"</li></ul>\";\r\n    emailText = emailText.replace(\"RESPONSE_TITLE\", responseTitleBody);\r\n\r\n    return emailText;\r\n  }\r\n\r\n  function m_fnGetResponseByTitle(title) {\r\n    var oResponse = null;\r\n    try {\r\n      oResponse = m_bigMap[\"response-\" + title];\r\n    } catch (err) {}\r\n\r\n    return oResponse;\r\n  }\r\n\r\n  function m_fnCreateEAFolder(requestNumber) {\r\n    var ctx2 = new SP.ClientContext.get_current();\r\n\r\n    //Check if folder exists in EA library\r\n    var bFolderExists = false;\r\n    var listItemEnumerator = eaReponseDocsFolderItems.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var folderItem = listItemEnumerator.get_current();\r\n\r\n      var itemName = folderItem.get_displayName();\r\n      if (itemName == requestNumber) {\r\n        bFolderExists = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    //If folder doesn't exist, create it in EA library\r\n    if (!bFolderExists) {\r\n      var earesponseDocLib = ctx2\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocsEA());\r\n\r\n      var itemCreateInfo = new SP.ListItemCreationInformation();\r\n      itemCreateInfo.set_underlyingObjectType(SP.FileSystemObjectType.folder);\r\n      itemCreateInfo.set_leafName(requestNumber);\r\n\r\n      const oNewEAFolder = earesponseDocLib.addItem(itemCreateInfo);\r\n      oNewEAFolder.set_item(\"Title\", requestNumber);\r\n      oNewEAFolder.update();\r\n\r\n      function OnSuccess(sender, args) {}\r\n      function OnFailure(sender, args) {}\r\n\r\n      ctx2.executeQueryAsync(OnSuccess, OnFailure);\r\n    }\r\n  }\r\n\r\n  function m_fnCreateEAEmailLogItem() {\r\n    var ctx2 = new SP.ClientContext.get_current();\r\n\r\n    //Check if an item exists in EA Email log list library\r\n    var bExists = false;\r\n    var listItemEnumerator = eaEmailLogListItems.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var emailLogItems = listItemEnumerator.get_current();\r\n\r\n      var bExists = true;\r\n      break;\r\n    }\r\n\r\n    //If folder doesn't exist, create it in EA library\r\n    if (!bExists) {\r\n      //this should never come here\r\n      var eaEmailLogList = ctx2\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(\"AuditEAEmailLog\");\r\n      var date = new Date();\r\n      var friendlyName = date.format(\"MM/dd/yyyy\");\r\n\r\n      var itemCreateInfo = new SP.ListItemCreationInformation();\r\n      const oNewEmailLogItem = eaEmailLogList.addItem(itemCreateInfo);\r\n      oNewEmailLogItem.set_item(\"Title\", friendlyName);\r\n      oNewEmailLogItem.update();\r\n\r\n      function OnSuccess(sender, args) {}\r\n      function OnFailure(sender, args) {}\r\n\r\n      ctx2.executeQueryAsync(OnSuccess, OnFailure);\r\n    }\r\n  }\r\n\r\n  function m_fnGetRequestByResponseTitle(responseTitle) {\r\n    var oRequest = null;\r\n\r\n    try {\r\n      var response = m_bigMap[\"response-\" + responseTitle];\r\n      if (response) oRequest = response.request;\r\n    } catch (err) {}\r\n\r\n    return oRequest;\r\n  }\r\n\r\n  function m_fnCreateEmailToIAFromQA(\r\n    emailList,\r\n    oRequest,\r\n    responseTitle,\r\n    emailSubject\r\n  ) {\r\n    if (!oRequest || !emailList) return;\r\n\r\n    var emailText = m_fnFormatEmailBodyToIAFromQA(oRequest, responseTitle);\r\n\r\n    var itemCreateInfo = new SP.ListItemCreationInformation();\r\n    itemCreateInfo.set_folderUrl(\r\n      location.protocol +\r\n        \"//\" +\r\n        location.host +\r\n        Audit.Common.Utilities.GetSiteUrl() +\r\n        \"/Lists/\" +\r\n        Audit.Common.Utilities.GetListNameEmailHistory() +\r\n        \"/\" +\r\n        oRequest.number\r\n    );\r\n    const oListItem = emailList.addItem(itemCreateInfo);\r\n    oListItem.set_item(\"Title\", emailSubject);\r\n    oListItem.set_item(\"Body\", emailText);\r\n    oListItem.set_item(\"To\", m_IA_ActionOffice.title);\r\n    oListItem.set_item(\"ReqNum\", oRequest.number);\r\n    oListItem.set_item(\"ResID\", responseTitle);\r\n    oListItem.set_item(\"NotificationType\", \"IA Notification\");\r\n    oListItem.update();\r\n  }\r\n\r\n  function OnCallbackForm(result, value) {\r\n    if (result === SP.UI.DialogResult.OK) {\r\n    }\r\n  }\r\n\r\n  function OnCallbackCloseResponse(result, value) {\r\n    if (result === SP.UI.DialogResult.OK) {\r\n      m_waitDialog = SP.UI.ModalDialog.showWaitScreenWithNoClose(\r\n        \"Closing Response\",\r\n        \"Please wait... Closing Response\",\r\n        200,\r\n        400\r\n      );\r\n\r\n      var responseTitle = $(\"#ddlResponsesOpen\").val();\r\n\r\n      var ctx2 = SP.ClientContext.get_current();\r\n\r\n      var aresponseList = ctx2\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetListTitleResponses());\r\n      var aresponseQuery = new SP.CamlQuery();\r\n      aresponseQuery.set_viewXml(\r\n        '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy><Where><Eq><FieldRef Name=\"Title\"/><Value Type=\"Text\">' +\r\n          responseTitle +\r\n          \"</Value></Eq></Where></Query><RowLimit>1</RowLimit></View>\"\r\n      );\r\n      const aresponseItems = aresponseList.getItems(aresponseQuery);\r\n      ctx2.load(aresponseItems);\r\n\r\n      var emailList = ctx2\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetListTitleEmailHistory());\r\n      var emailListQuery = new SP.CamlQuery();\r\n      emailListQuery.set_viewXml(\r\n        '<View><Query><OrderBy><FieldRef Name=\"ID\"/></OrderBy><Where><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">1</Value></Eq></Where></Query></View>'\r\n      );\r\n      const emailListFolderItems = emailList.getItems(emailListQuery);\r\n      ctx2.load(\r\n        emailListFolderItems,\r\n        \"Include(ID, FSObjType, Title, DisplayName)\"\r\n      );\r\n\r\n      function OnSuccess(sender, args) {\r\n        var listItemEnumerator = aresponseItems.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItemResponse = listItemEnumerator.get_current();\r\n\r\n          var responseTitle = oListItemResponse.get_item(\"Title\");\r\n\r\n          var curDate = new Date();\r\n          oListItemResponse.set_item(\"ResStatus\", \"7-Closed\");\r\n          //oListItemResponse.set_item( \"ClosedDate\", Audit.Common.Utilities.GetISODateString( curDate) );\r\n          var newClosedTime = new Date(\r\n            curDate.getFullYear(),\r\n            curDate.getMonth(),\r\n            curDate.getDate(),\r\n            curDate.getHours(),\r\n            curDate.getMinutes(),\r\n            curDate.getSeconds(),\r\n            curDate.getMilliseconds()\r\n          );\r\n          oListItemResponse.set_item(\"ClosedDate\", newClosedTime);\r\n          oListItemResponse.set_item(\"ClosedBy\", _spPageContextInfo.userId);\r\n          oListItemResponse.update();\r\n\r\n          var oRequest = null;\r\n          try {\r\n            var mapResponse = m_bigMap[\"response-\" + responseTitle];\r\n            if (mapResponse) oRequest = mapResponse.request;\r\n          } catch (err) {}\r\n\r\n          if (oRequest) {\r\n            m_fnCreateEmailToIAFromQA(\r\n              emailList,\r\n              oRequest,\r\n              responseTitle,\r\n              \"An Audit Response has been Closed by the Quality Assurance Team: \" +\r\n                responseTitle\r\n            );\r\n          } else m_waitDialog.close();\r\n\r\n          ctx2.executeQueryAsync(\r\n            function () {\r\n              m_waitDialog.close();\r\n\r\n              Audit.Common.Utilities.Refresh();\r\n            },\r\n            function () {\r\n              m_waitDialog.close();\r\n              Audit.Common.Utilities.Refresh();\r\n            }\r\n          );\r\n\r\n          break; //should only be once\r\n        }\r\n      }\r\n      function OnFailure(sender, args) {\r\n        m_waitDialog.close();\r\n        alert(\r\n          \"Request failed. \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n        );\r\n      }\r\n\r\n      ctx2.executeQueryAsync(OnSuccess, OnFailure);\r\n    } else m_bIsTransactionExecuting = false;\r\n  }\r\n\r\n  function OnCallbackReturnToCGFS(result, value) {\r\n    if (result === SP.UI.DialogResult.OK) {\r\n      m_waitDialog = SP.UI.ModalDialog.showWaitScreenWithNoClose(\r\n        \"Returning to CGFS\",\r\n        \"Please wait... Returning to CGFS\",\r\n        200,\r\n        400\r\n      );\r\n\r\n      var responseTitle = $(\"#ddlResponsesOpen\").val();\r\n\r\n      var ctx2 = SP.ClientContext.get_current();\r\n\r\n      var aresponseList = ctx2\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetListTitleResponses());\r\n      var aresponseQuery = new SP.CamlQuery();\r\n      aresponseQuery.set_viewXml(\r\n        '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy><Where><Eq><FieldRef Name=\"Title\"/><Value Type=\"Text\">' +\r\n          responseTitle +\r\n          \"</Value></Eq></Where></Query><RowLimit>1</RowLimit></View>\"\r\n      );\r\n      const aresponseItems = aresponseList.getItems(aresponseQuery);\r\n      ctx2.load(aresponseItems);\r\n\r\n      var emailList = ctx2\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetListTitleEmailHistory());\r\n      var emailListQuery = new SP.CamlQuery();\r\n      emailListQuery.set_viewXml(\r\n        '<View><Query><OrderBy><FieldRef Name=\"ID\"/></OrderBy><Where><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">1</Value></Eq></Where></Query></View>'\r\n      );\r\n      let emailListFolderItems = emailList.getItems(emailListQuery);\r\n      ctx2.load(\r\n        emailListFolderItems,\r\n        \"Include(ID, FSObjType, Title, DisplayName)\"\r\n      );\r\n\r\n      function OnSuccess(sender, args) {\r\n        var listItemEnumerator = aresponseItems.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItemResponse = listItemEnumerator.get_current();\r\n\r\n          var responseTitle = oListItemResponse.get_item(\"Title\");\r\n\r\n          var curDate = new Date();\r\n          oListItemResponse.set_item(\"ResStatus\", \"5-Returned to GFS\");\r\n          oListItemResponse.update();\r\n\r\n          var oRequest = null;\r\n          try {\r\n            var mapResponse = m_bigMap[\"response-\" + responseTitle];\r\n            if (mapResponse) oRequest = mapResponse.request;\r\n          } catch (err) {}\r\n\r\n          if (oRequest) {\r\n            m_fnCreateEmailToIAFromQA(\r\n              emailList,\r\n              oRequest,\r\n              responseTitle,\r\n              \"An Audit Response has been Returned by the Quality Assurance Team: \" +\r\n                responseTitle\r\n            );\r\n          } else m_waitDialog.close();\r\n\r\n          ctx2.executeQueryAsync(\r\n            function () {\r\n              m_waitDialog.close();\r\n\r\n              Audit.Common.Utilities.Refresh();\r\n            },\r\n            function () {\r\n              m_waitDialog.close();\r\n              Audit.Common.Utilities.Refresh();\r\n            }\r\n          );\r\n\r\n          break; //should only be once\r\n        }\r\n      }\r\n      function OnFailure(sender, args) {\r\n        m_waitDialog.close();\r\n        alert(\r\n          \"Request failed. \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n        );\r\n      }\r\n\r\n      ctx2.executeQueryAsync(OnSuccess, OnFailure);\r\n    } else m_bIsTransactionExecuting = false;\r\n  }\r\n\r\n  function OnCallbackApproveResponseDoc(result, value) {\r\n    if (result === SP.UI.DialogResult.OK) {\r\n      m_waitDialog = SP.UI.ModalDialog.showWaitScreenWithNoClose(\r\n        \"Approving Response Document\",\r\n        \"Please wait... Approving Response Document\",\r\n        200,\r\n        400\r\n      );\r\n\r\n      var clientContext = SP.ClientContext.get_current();\r\n      var oList = clientContext\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n\r\n      let oListItem = oList.getItemById(m_itemID);\r\n      clientContext.load(oListItem);\r\n\r\n      var eaResponseDocsLib = clientContext\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocsEA());\r\n      var earesponseDocsQuery = new SP.CamlQuery();\r\n      earesponseDocsQuery.set_viewXml(\r\n        '<View><Query><OrderBy><FieldRef Name=\"ID\"/></OrderBy><Where><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">1</Value></Eq></Where></Query></View>'\r\n      );\r\n      eaReponseDocsFolderItems =\r\n        eaResponseDocsLib.getItems(earesponseDocsQuery);\r\n      clientContext.load(\r\n        eaReponseDocsFolderItems,\r\n        \"Include(ID, FSObjType, Title, DisplayName)\"\r\n      );\r\n\r\n      //make sure ea email folder exists\r\n      var eaEmailLogList = clientContext\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(\"AuditEAEmailLog\");\r\n      var eaEmailLogListQuery = new SP.CamlQuery();\r\n      eaEmailLogListQuery.set_viewXml(\r\n        '<View><Query><OrderBy><FieldRef Name=\"ID\"/></OrderBy><Where><Eq><FieldRef Name=\"Created\"/><Value IncludeTimeValue=\"FALSE\" Type=\"DateTime\"><Today/></Value></Eq></Where></Query></View>'\r\n      );\r\n      eaEmailLogListItems = eaEmailLogList.getItems(eaEmailLogListQuery);\r\n      clientContext.load(eaEmailLogListItems, \"Include(ID)\");\r\n\r\n      function OnSuccess(sender, args) {\r\n        var oResponse = m_fnGetResponseByTitle($(\"#ddlResponsesOpen\").val());\r\n\r\n        if (oResponse == null || oResponse.request == null) {\r\n          m_waitDialog.close();\r\n          return;\r\n        }\r\n        const oRequest = oResponse.request;\r\n        const folderPath = oRequest.number;\r\n\r\n        m_fnCreateEAFolder(folderPath);\r\n        m_fnCreateEAEmailLogItem();\r\n\r\n        var requestId = oRequest.number;\r\n        var responseNumber = oResponse.title;\r\n        var fileName = oListItem.get_item(\"FileLeafRef\");\r\n\r\n        var ctx2 = new SP.ClientContext.get_current();\r\n        var oList = ctx2\r\n          .get_web()\r\n          .get_lists()\r\n          .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n\r\n        //refetch to avoid version conflict\r\n        oListItem = oList.getItemById(m_itemID);\r\n\r\n        var file = oListItem.get_file();\r\n        var absoluteSiteUrl =\r\n          location.protocol +\r\n          \"//\" +\r\n          location.host +\r\n          _spPageContextInfo.webServerRelativeUrl +\r\n          \"/\";\r\n        var destinationFileNameUrl =\r\n          absoluteSiteUrl +\r\n          Audit.Common.Utilities.GetLibTitleResponseDocsEA() +\r\n          \"/\" +\r\n          folderPath +\r\n          \"/\" +\r\n          fileName;\r\n        file.copyTo(destinationFileNameUrl, 1);\r\n\r\n        oListItem.set_item(\"DocumentStatus\", \"Approved\");\r\n        oListItem.set_item(\"RejectReason\", \"\");\r\n        oListItem.update();\r\n\r\n        var siteUrl = location.protocol + \"//\" + location.host;\r\n        var urlOfNewFile = destinationFileNameUrl.replace(siteUrl, \"\");\r\n        const newFile = ctx2.get_web().getFileByServerRelativeUrl(urlOfNewFile);\r\n        ctx2.load(newFile, \"ListItemAllFields\");\r\n        //ctx2.load(newFile, 'Include(ID)');\r\n\r\n        //alert( \"folderPath: \" + folderPath );\r\n        var data = {\r\n          responseTitle: responseNumber,\r\n          copiedFileName: destinationFileNameUrl,\r\n          requestId: requestId,\r\n          responseNumber: responseNumber,\r\n        };\r\n        //Execute the query and pass the data with our deferred object\r\n\r\n        //Check for all response docs statuses, if there are no more pending actions, close the response and set the closed date of the response\r\n        function onUpdateResFolderSuccess() {\r\n          if (\r\n            this.responseTitle == null ||\r\n            this.responseTitle == undefined ||\r\n            this.responseTitle == \"\"\r\n          ) {\r\n            m_waitDialog.close();\r\n            alert(\"Error: empty response title \");\r\n            return;\r\n          }\r\n\r\n          var ctx3 = SP.ClientContext.get_current();\r\n\r\n          //update the file in the EA document library with the request/response properties\r\n          var idOfCopiedFile = newFile.get_listItemAllFields().get_id();\r\n          var oEADocLib = ctx3\r\n            .get_web()\r\n            .get_lists()\r\n            .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocsEA());\r\n          const oListFileItem = oEADocLib.getItemById(idOfCopiedFile);\r\n          oListFileItem.set_item(\"RequestNumber\", this.requestId);\r\n          oListFileItem.set_item(\"ResponseID\", this.responseNumber);\r\n          oListFileItem.update();\r\n\r\n          var aresponseList = ctx3\r\n            .get_web()\r\n            .get_lists()\r\n            .getByTitle(Audit.Common.Utilities.GetListTitleResponses());\r\n          var aresponseQuery = new SP.CamlQuery();\r\n          aresponseQuery.set_viewXml(\r\n            '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy><Where><Eq><FieldRef Name=\"Title\"/><Value Type=\"Text\">' +\r\n              this.responseTitle +\r\n              \"</Value></Eq></Where></Query><RowLimit>1</RowLimit></View>\"\r\n          );\r\n          const aresponseItems = aresponseList.getItems(aresponseQuery);\r\n          ctx3.load(aresponseItems);\r\n\r\n          var folderPath =\r\n            Audit.Common.Utilities.GetSiteUrl() +\r\n            \"/\" +\r\n            Audit.Common.Utilities.GetLibNameResponseDocs() +\r\n            \"/\" +\r\n            this.responseTitle;\r\n          var aresponseDocList = ctx3\r\n            .get_web()\r\n            .get_lists()\r\n            .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n          var aresponseDocQuery = new SP.CamlQuery();\r\n          aresponseDocQuery.set_viewXml(\r\n            '<View Scope=\"RecursiveAll\"><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy><Where><And><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">0</Value></Eq><Eq><FieldRef Name=\"FileDirRef\"/><Value Type=\"Text\">' +\r\n              folderPath +\r\n              \"</Value></Eq></And></Where></Query></View>\"\r\n          );\r\n          const aresponseDocItems =\r\n            aresponseDocList.getItems(aresponseDocQuery);\r\n          ctx3.load(aresponseDocItems);\r\n\r\n          var emailList = ctx3\r\n            .get_web()\r\n            .get_lists()\r\n            .getByTitle(Audit.Common.Utilities.GetListTitleEmailHistory());\r\n          var emailListQuery = new SP.CamlQuery();\r\n          emailListQuery.set_viewXml(\r\n            '<View><Query><OrderBy><FieldRef Name=\"ID\"/></OrderBy><Where><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">1</Value></Eq></Where></Query></View>'\r\n          );\r\n          let emailListFolderItems = emailList.getItems(emailListQuery);\r\n          ctx3.load(\r\n            emailListFolderItems,\r\n            \"Include(ID, FSObjType, Title, DisplayName)\"\r\n          );\r\n\r\n          function onUpdateSucceededZZ() {\r\n            notifyId = SP.UI.Notify.addNotification(\r\n              \"Approved Response Document\",\r\n              false\r\n            );\r\n\r\n            let bUpdateResponseStatus = true;\r\n            var listxItemEnumerator = aresponseDocItems.getEnumerator();\r\n\r\n            var bRejected = false;\r\n            while (listxItemEnumerator.moveNext()) {\r\n              var oListItemResponseDoc = listxItemEnumerator.get_current();\r\n              var oListItemResponseDocStatus =\r\n                oListItemResponseDoc.get_item(\"DocumentStatus\");\r\n\r\n              if (\r\n                oListItemResponseDocStatus == \"Open\" ||\r\n                oListItemResponseDocStatus == \"Submitted\" ||\r\n                oListItemResponseDocStatus == \"Sent to QA\"\r\n              ) {\r\n                //there should never be one that's open, but checking anyway\r\n                bUpdateResponseStatus = false;\r\n              } else if (oListItemResponseDocStatus == \"Rejected\") {\r\n                bRejected = true;\r\n              }\r\n            }\r\n\r\n            //Update the Response status\r\n            //if all items have completed (none are open or sent to QA), then update the status\r\n            //If one is rejected, then returned to gfs. otherwise, close the response\r\n            if (bUpdateResponseStatus) {\r\n              var oRequest = m_fnGetRequestByResponseTitle(this.responseTitle);\r\n\r\n              var listxxItemEnumerator = aresponseItems.getEnumerator();\r\n              while (listxxItemEnumerator.moveNext()) {\r\n                var oListItemResponse = listxxItemEnumerator.get_current();\r\n\r\n                if (!bRejected) {\r\n                  var curDate = new Date();\r\n                  oListItemResponse.set_item(\"ResStatus\", \"7-Closed\");\r\n                  //oListItemResponse.set_item( \"ClosedDate\", Audit.Common.Utilities.GetISODateString( curDate) );\r\n                  var newClosedTime = new Date(\r\n                    curDate.getFullYear(),\r\n                    curDate.getMonth(),\r\n                    curDate.getDate(),\r\n                    curDate.getHours(),\r\n                    curDate.getMinutes(),\r\n                    curDate.getSeconds(),\r\n                    curDate.getMilliseconds()\r\n                  );\r\n                  oListItemResponse.set_item(\"ClosedDate\", newClosedTime);\r\n\r\n                  oListItemResponse.set_item(\r\n                    \"ClosedBy\",\r\n                    _spPageContextInfo.userId\r\n                  );\r\n\r\n                  m_fnCreateEmailToIAFromQA(\r\n                    emailList,\r\n                    oRequest,\r\n                    this.responseTitle,\r\n                    \"An Audit Response has been Closed by the Quality Assurance Team: \" +\r\n                      this.responseTitle\r\n                  );\r\n                } else {\r\n                  oListItemResponse.set_item(\"ResStatus\", \"5-Returned to GFS\");\r\n\r\n                  m_fnCreateEmailToIAFromQA(\r\n                    emailList,\r\n                    oRequest,\r\n                    this.responseTitle,\r\n                    \"An Audit Response has been Returned by the Quality Assurance Team: \" +\r\n                      this.responseTitle\r\n                  );\r\n                }\r\n\r\n                oListItemResponse.update();\r\n\r\n                ctx3.executeQueryAsync(function () {\r\n                  m_waitDialog.close();\r\n                  Audit.Common.Utilities.Refresh();\r\n                });\r\n\r\n                break; //should only be once\r\n              }\r\n            } else {\r\n              m_waitDialog.close();\r\n              Audit.Common.Utilities.Refresh();\r\n            }\r\n          }\r\n          function onUpdateFailedZZ() {\r\n            m_waitDialog.close();\r\n          }\r\n\r\n          var data = { responseTitle: this.responseTitle };\r\n          ctx3.executeQueryAsync(\r\n            Function.createDelegate(data, onUpdateSucceededZZ),\r\n            Function.createDelegate(data, onUpdateFailedZZ)\r\n          ); //After this line \"return true\" in PreSaveAction() will execute and then CallBackMethods will run.\r\n        }\r\n\r\n        function onUpdateResFolderFail(sender, args) {\r\n          m_waitDialog.close();\r\n\r\n          alert(\r\n            \"Request failed. \" +\r\n              args.get_message() +\r\n              \"\\n\" +\r\n              args.get_stackTrace()\r\n          );\r\n          Audit.Common.Utilities.Refresh();\r\n        }\r\n\r\n        ctx2.executeQueryAsync(\r\n          Function.createDelegate(data, onUpdateResFolderSuccess),\r\n          Function.createDelegate(data, onUpdateResFolderFail)\r\n        ); //After this line \"return true\" in PreSaveAction() will execute and then CallBackMethods will run.\r\n      }\r\n      function OnFailure(sender, args) {\r\n        m_waitDialog.close();\r\n        alert(\r\n          \"Request failed. \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n        );\r\n      }\r\n\r\n      clientContext.executeQueryAsync(OnSuccess, OnFailure);\r\n    } else m_bIsTransactionExecuting = false;\r\n  }\r\n\r\n  function OnCallbackRejectResponseDoc(result, value) {\r\n    if (result === SP.UI.DialogResult.OK) {\r\n      m_waitDialog = SP.UI.ModalDialog.showWaitScreenWithNoClose(\r\n        \"Rejecting Response Document\",\r\n        \"Please wait... Rejecting Response Document\",\r\n        200,\r\n        400\r\n      );\r\n\r\n      var clientContext = SP.ClientContext.get_current();\r\n      var oList = clientContext\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n\r\n      let oListItem = oList.getItemById(m_itemID);\r\n      clientContext.load(oListItem);\r\n\r\n      function OnSuccess(sender, args) {\r\n        var ctx2 = new SP.ClientContext.get_current();\r\n        var oList = ctx2\r\n          .get_web()\r\n          .get_lists()\r\n          .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n\r\n        //refetch to avoid version conflict\r\n        oListItem = oList.getItemById(m_itemID);\r\n        oListItem.set_item(\"DocumentStatus\", \"Rejected\");\r\n        oListItem.set_item(\"RejectReason\", m_RejectReason);\r\n\r\n        oListItem.update();\r\n\r\n        var siteUrl =\r\n          location.protocol +\r\n          \"//\" +\r\n          location.host +\r\n          _spPageContextInfo.webServerRelativeUrl +\r\n          \"/\";\r\n        const filePath = oListItem.get_item(\"FileDirRef\");\r\n        const fileName = oListItem.get_item(\"FileLeafRef\");\r\n        var lastInd = filePath.lastIndexOf(\"/\");\r\n        var urlpath = filePath.substring(0, lastInd + 1);\r\n        var responseTitle = filePath.replace(urlpath, \"\");\r\n\r\n        var folderPath =\r\n          Audit.Common.Utilities.GetSiteUrl() +\r\n          \"/\" +\r\n          Audit.Common.Utilities.GetLibNameResponseDocs() +\r\n          \"/\" +\r\n          responseTitle;\r\n        var aresponseDocList = ctx2\r\n          .get_web()\r\n          .get_lists()\r\n          .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n        var aresponseDocQuery = new SP.CamlQuery();\r\n        aresponseDocQuery.set_viewXml(\r\n          '<View Scope=\"RecursiveAll\"><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy><Where><And><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">0</Value></Eq><Eq><FieldRef Name=\"FileDirRef\"/><Value Type=\"Text\">' +\r\n            folderPath +\r\n            \"</Value></Eq></And></Where></Query></View>\"\r\n        );\r\n        const aresponseDocItems = aresponseDocList.getItems(aresponseDocQuery);\r\n        ctx2.load(aresponseDocItems);\r\n\r\n        var aresponseList = ctx2\r\n          .get_web()\r\n          .get_lists()\r\n          .getByTitle(Audit.Common.Utilities.GetListTitleResponses());\r\n        var aresponseQuery = new SP.CamlQuery();\r\n        aresponseQuery.set_viewXml(\r\n          '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy><Where><Eq><FieldRef Name=\"Title\"/><Value Type=\"Text\">' +\r\n            responseTitle +\r\n            \"</Value></Eq></Where></Query><RowLimit>1</RowLimit></View>\"\r\n        );\r\n        const aresponseItems = aresponseList.getItems(aresponseQuery);\r\n        ctx2.load(aresponseItems);\r\n\r\n        var emailList = ctx2\r\n          .get_web()\r\n          .get_lists()\r\n          .getByTitle(Audit.Common.Utilities.GetListTitleEmailHistory());\r\n        var emailListQuery = new SP.CamlQuery();\r\n        emailListQuery.set_viewXml(\r\n          '<View><Query><OrderBy><FieldRef Name=\"ID\"/></OrderBy><Where><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">1</Value></Eq></Where></Query></View>'\r\n        );\r\n        const emailListFolderItems = emailList.getItems(emailListQuery);\r\n        ctx2.load(\r\n          emailListFolderItems,\r\n          \"Include(ID, FSObjType, Title, DisplayName)\"\r\n        );\r\n\r\n        function onUpdateSucceededZZ() {\r\n          notifyId = SP.UI.Notify.addNotification(\r\n            \"Rejected Response Document\",\r\n            false\r\n          );\r\n\r\n          let bUpdateResponseStatus = true;\r\n          var listxItemEnumerator = aresponseDocItems.getEnumerator();\r\n\r\n          while (listxItemEnumerator.moveNext()) {\r\n            var oListItemResponseDoc = listxItemEnumerator.get_current();\r\n            var oListItemResponseDocStatus =\r\n              oListItemResponseDoc.get_item(\"DocumentStatus\");\r\n\r\n            if (\r\n              oListItemResponseDocStatus == \"Open\" ||\r\n              oListItemResponseDocStatus == \"Submitted\" ||\r\n              oListItemResponseDocStatus == \"Sent to QA\"\r\n            ) {\r\n              //there should never be one that's open, but checking anyway\r\n              bUpdateResponseStatus = false;\r\n            }\r\n          }\r\n\r\n          //Update the Response status\r\n          //if all items have completed (none are open or sent to QA), then update the status to returned to gfs because we know\r\n          //at least 1 was rejected\r\n          if (bUpdateResponseStatus) {\r\n            var oRequest = m_fnGetRequestByResponseTitle(this.responseTitle);\r\n\r\n            var listxxItemEnumerator = aresponseItems.getEnumerator();\r\n            while (listxxItemEnumerator.moveNext()) {\r\n              var oListItemResponse = listxxItemEnumerator.get_current();\r\n\r\n              var curDate = new Date();\r\n              oListItemResponse.set_item(\"ResStatus\", \"5-Returned to GFS\");\r\n              oListItemResponse.update();\r\n\r\n              m_fnCreateEmailToIAFromQA(\r\n                emailList,\r\n                oRequest,\r\n                this.responseTitle,\r\n                \"An Audit Response has been Returned by the Quality Assurance Team: \" +\r\n                  this.responseTitle\r\n              );\r\n\r\n              ctx2.executeQueryAsync(function () {\r\n                m_waitDialog.close();\r\n                Audit.Common.Utilities.Refresh();\r\n              });\r\n\r\n              break; //should only be once\r\n            }\r\n          } else {\r\n            m_waitDialog.close();\r\n            Audit.Common.Utilities.Refresh();\r\n          }\r\n        }\r\n        function onUpdateFailedZZ() {\r\n          m_waitDialog.close();\r\n        }\r\n\r\n        var data = { responseTitle: responseTitle };\r\n        ctx2.executeQueryAsync(\r\n          Function.createDelegate(data, onUpdateSucceededZZ),\r\n          Function.createDelegate(data, onUpdateFailedZZ)\r\n        ); //After this line \"return true\" in PreSaveAction() will execute and then CallBackMethods will run.\r\n      }\r\n      function OnFailure(sender, args) {\r\n        m_waitDialog.close();\r\n        alert(\r\n          \"Request failed. \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n        );\r\n      }\r\n\r\n      clientContext.executeQueryAsync(OnSuccess, OnFailure);\r\n    } else m_bIsTransactionExecuting = false;\r\n  }\r\n\r\n  function OnCallbackApproveAllResponseDoc(result, value) {\r\n    if (result === SP.UI.DialogResult.OK) {\r\n      m_waitDialog = SP.UI.ModalDialog.showWaitScreenWithNoClose(\r\n        \"Approving Response Documents\",\r\n        \"Please wait... Approving Response Documents\",\r\n        200,\r\n        400\r\n      );\r\n\r\n      var responseTitle = $(\"#ddlResponsesOpen\").val();\r\n\r\n      var clientContext = SP.ClientContext.get_current();\r\n\r\n      //make sure ea folder exists\r\n      var eaResponseDocsLib = clientContext\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocsEA());\r\n      var earesponseDocsQuery = new SP.CamlQuery();\r\n      earesponseDocsQuery.set_viewXml(\r\n        '<View><Query><OrderBy><FieldRef Name=\"ID\"/></OrderBy><Where><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">1</Value></Eq></Where></Query></View>'\r\n      );\r\n      eaReponseDocsFolderItems =\r\n        eaResponseDocsLib.getItems(earesponseDocsQuery);\r\n      clientContext.load(\r\n        eaReponseDocsFolderItems,\r\n        \"Include(ID, FSObjType, Title, DisplayName)\"\r\n      );\r\n\r\n      //make sure ea email folder exists\r\n      var eaEmailLogList = clientContext\r\n        .get_web()\r\n        .get_lists()\r\n        .getByTitle(\"AuditEAEmailLog\");\r\n      var eaEmailLogListQuery = new SP.CamlQuery();\r\n      eaEmailLogListQuery.set_viewXml(\r\n        '<View><Query><OrderBy><FieldRef Name=\"ID\"/></OrderBy><Where><Eq><FieldRef Name=\"Created\"/><Value IncludeTimeValue=\"FALSE\" Type=\"DateTime\"><Today/></Value></Eq></Where></Query></View>'\r\n      );\r\n      eaEmailLogListItems = eaEmailLogList.getItems(eaEmailLogListQuery);\r\n      clientContext.load(eaEmailLogListItems, \"Include(ID)\");\r\n\r\n      function OnSuccess(sender, args) {\r\n        var oRequest = null;\r\n        var oResponse = null;\r\n        oResponse = m_fnGetResponseByTitle($(\"#ddlResponsesOpen\").val());\r\n\r\n        if (oResponse == null || oResponse.request == null) return;\r\n\r\n        oRequest = oResponse.request;\r\n        const folderPath = oRequest.number;\r\n\r\n        m_fnCreateEAFolder(oRequest.number);\r\n        m_fnCreateEAEmailLogItem();\r\n\r\n        var requestId = oRequest.number;\r\n        var responseNumber = oResponse.title;\r\n\r\n        m_cntToApprove = 0;\r\n        m_cntApproved = 0;\r\n\r\n        for (var x = 0; x < oResponse.responseDocs.length; x++) {\r\n          if (oResponse.responseDocs[x].documentStatus != \"Sent to QA\")\r\n            continue;\r\n\r\n          m_cntToApprove++;\r\n\r\n          var ctx2 = new SP.ClientContext.get_current();\r\n          var oList = ctx2\r\n            .get_web()\r\n            .get_lists()\r\n            .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n\r\n          //refetch to avoid version conflict\r\n          let oListItem = oResponse.responseDocs[x].item;\r\n          const fileName = oListItem.get_item(\"FileLeafRef\");\r\n          oListItem = oList.getItemById(oListItem.get_item(\"ID\"));\r\n\r\n          //copy the file to the EA library\r\n          var file = oListItem.get_file();\r\n          var absoluteSiteUrl =\r\n            location.protocol +\r\n            \"//\" +\r\n            location.host +\r\n            _spPageContextInfo.webServerRelativeUrl +\r\n            \"/\";\r\n          var destinationFileNameUrl =\r\n            absoluteSiteUrl +\r\n            Audit.Common.Utilities.GetLibTitleResponseDocsEA() +\r\n            \"/\" +\r\n            folderPath +\r\n            \"/\" +\r\n            fileName;\r\n          file.copyTo(destinationFileNameUrl, 1);\r\n\r\n          //update the reponse\r\n          oListItem.set_item(\"DocumentStatus\", \"Approved\");\r\n          oListItem.set_item(\"RejectReason\", \"\");\r\n          oListItem.update();\r\n\r\n          //load the file\r\n          var siteUrl = location.protocol + \"//\" + location.host;\r\n          var urlOfNewFile = destinationFileNameUrl.replace(siteUrl, \"\");\r\n          const newFile = ctx2\r\n            .get_web()\r\n            .getFileByServerRelativeUrl(urlOfNewFile);\r\n          ctx2.load(newFile, \"ListItemAllFields\");\r\n\r\n          var data = {\r\n            responseTitle: responseNumber,\r\n            copiedFileName: destinationFileNameUrl,\r\n            requestId: requestId,\r\n            responseNumber: responseNumber,\r\n            newFile: newFile,\r\n          };\r\n\r\n          function onUpdateResFolderSuccess() {\r\n            if (\r\n              this.responseTitle == null ||\r\n              this.responseTitle == undefined ||\r\n              this.responseTitle == \"\"\r\n            ) {\r\n              document.body.style.cursor = \"default\";\r\n              //alert( \"Error: empty response title \");\r\n              notifyId = SP.UI.Notify.addNotification(\r\n                \"Error: empty response title \",\r\n                false\r\n              );\r\n\r\n              m_waitDialog.close();\r\n              return;\r\n            }\r\n\r\n            var ctx3 = SP.ClientContext.get_current();\r\n\r\n            //update the file in the EA document library with the request/response properties\r\n            var idOfCopiedFile = this.newFile.get_listItemAllFields().get_id();\r\n            var oEADocLib = ctx3\r\n              .get_web()\r\n              .get_lists()\r\n              .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocsEA());\r\n            const oListFileItem = oEADocLib.getItemById(idOfCopiedFile);\r\n            oListFileItem.set_item(\"RequestNumber\", this.requestId);\r\n            oListFileItem.set_item(\"ResponseID\", this.responseNumber);\r\n            oListFileItem.update();\r\n\r\n            var aresponseList = ctx3\r\n              .get_web()\r\n              .get_lists()\r\n              .getByTitle(Audit.Common.Utilities.GetListTitleResponses());\r\n            var aresponseQuery = new SP.CamlQuery();\r\n            aresponseQuery.set_viewXml(\r\n              '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy><Where><Eq><FieldRef Name=\"Title\"/><Value Type=\"Text\">' +\r\n                this.responseTitle +\r\n                \"</Value></Eq></Where></Query><RowLimit>1</RowLimit></View>\"\r\n            );\r\n            const aresponseItems = aresponseList.getItems(aresponseQuery);\r\n            ctx3.load(aresponseItems);\r\n\r\n            var folderPath =\r\n              Audit.Common.Utilities.GetSiteUrl() +\r\n              \"/\" +\r\n              Audit.Common.Utilities.GetLibNameResponseDocs() +\r\n              \"/\" +\r\n              this.responseTitle;\r\n            var aresponseDocList = ctx3\r\n              .get_web()\r\n              .get_lists()\r\n              .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n            var aresponseDocQuery = new SP.CamlQuery();\r\n            aresponseDocQuery.set_viewXml(\r\n              '<View Scope=\"RecursiveAll\"><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy><Where><And><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">0</Value></Eq><Eq><FieldRef Name=\"FileDirRef\"/><Value Type=\"Text\">' +\r\n                folderPath +\r\n                \"</Value></Eq></And></Where></Query></View>\"\r\n            );\r\n            const aresponseDocItems =\r\n              aresponseDocList.getItems(aresponseDocQuery);\r\n            ctx3.load(aresponseDocItems);\r\n\r\n            var emailList = ctx3\r\n              .get_web()\r\n              .get_lists()\r\n              .getByTitle(Audit.Common.Utilities.GetListTitleEmailHistory());\r\n            var emailListQuery = new SP.CamlQuery();\r\n            emailListQuery.set_viewXml(\r\n              '<View><Query><OrderBy><FieldRef Name=\"ID\"/></OrderBy><Where><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">1</Value></Eq></Where></Query></View>'\r\n            );\r\n            const emailListFolderItems = emailList.getItems(emailListQuery);\r\n            ctx3.load(\r\n              emailListFolderItems,\r\n              \"Include(ID, FSObjType, Title, DisplayName)\"\r\n            );\r\n\r\n            function onUpdateSucceededZZ() {\r\n              m_cntApproved++;\r\n\r\n              if (m_cntApproved != m_cntToApprove) {\r\n                //skip the code below if all of the expected documents that were to be approved haven't yet approved\r\n                return;\r\n              }\r\n\r\n              notifyId = SP.UI.Notify.addNotification(\r\n                \"Approved Response Documents\",\r\n                false\r\n              );\r\n\r\n              let bUpdateResponseStatus = true;\r\n              var listxItemEnumerator = this.aresponseDocItems.getEnumerator();\r\n\r\n              var bRejected = false;\r\n              while (listxItemEnumerator.moveNext()) {\r\n                var oListItemResponseDoc = listxItemEnumerator.get_current();\r\n                var oListItemResponseDocStatus =\r\n                  oListItemResponseDoc.get_item(\"DocumentStatus\");\r\n\r\n                if (\r\n                  oListItemResponseDocStatus == \"Open\" ||\r\n                  oListItemResponseDocStatus == \"Submitted\" ||\r\n                  oListItemResponseDocStatus == \"Sent to QA\"\r\n                ) {\r\n                  //there should never be one that's open, but checking anyway\r\n                  bUpdateResponseStatus = false;\r\n                } else if (oListItemResponseDocStatus == \"Rejected\") {\r\n                  bRejected = true;\r\n                }\r\n              }\r\n\r\n              //Update the Response status\r\n              //if all items have completed (none are open or sent to QA), then update the status\r\n              //If one is rejected, then returned to gfs. otherwise, close the response\r\n              if (bUpdateResponseStatus) {\r\n                var oRequest = m_fnGetRequestByResponseTitle(\r\n                  this.responseTitle\r\n                );\r\n\r\n                var listxxItemEnumerator = this.aresponseItems.getEnumerator();\r\n                while (listxxItemEnumerator.moveNext()) {\r\n                  var oListItemResponse = listxxItemEnumerator.get_current();\r\n\r\n                  if (!bRejected) {\r\n                    var curDate = new Date();\r\n                    oListItemResponse.set_item(\"ResStatus\", \"7-Closed\");\r\n                    //oListItemResponse.set_item( \"ClosedDate\", Audit.Common.Utilities.GetISODateString( curDate) );\r\n                    var newClosedTime = new Date(\r\n                      curDate.getFullYear(),\r\n                      curDate.getMonth(),\r\n                      curDate.getDate(),\r\n                      curDate.getHours(),\r\n                      curDate.getMinutes(),\r\n                      curDate.getSeconds(),\r\n                      curDate.getMilliseconds()\r\n                    );\r\n                    oListItemResponse.set_item(\"ClosedDate\", newClosedTime);\r\n\r\n                    oListItemResponse.set_item(\r\n                      \"ClosedBy\",\r\n                      _spPageContextInfo.userId\r\n                    );\r\n\r\n                    m_fnCreateEmailToIAFromQA(\r\n                      this.emailList,\r\n                      oRequest,\r\n                      this.responseTitle,\r\n                      \"An Audit Response has been Closed by the Quality Assurance Team: \" +\r\n                        this.responseTitle\r\n                    );\r\n                  } else {\r\n                    oListItemResponse.set_item(\r\n                      \"ResStatus\",\r\n                      \"5-Returned to GFS\"\r\n                    );\r\n\r\n                    m_fnCreateEmailToIAFromQA(\r\n                      this.emailList,\r\n                      oRequest,\r\n                      this.responseTitle,\r\n                      \"An Audit Response has been Returned by the Quality Assurance Team: \" +\r\n                        this.responseTitle\r\n                    );\r\n                  }\r\n\r\n                  oListItemResponse.update();\r\n\r\n                  ctx3.executeQueryAsync(function () {\r\n                    m_waitDialog.close();\r\n                    Audit.Common.Utilities.Refresh();\r\n                  });\r\n\r\n                  break; //should only be once\r\n                }\r\n              } else {\r\n                m_waitDialog.close();\r\n                Audit.Common.Utilities.Refresh();\r\n              }\r\n            }\r\n            function onUpdateFailedZZ() {\r\n              m_waitDialog.close();\r\n            }\r\n\r\n            var data = {\r\n              responseTitle: this.responseTitle,\r\n              emailList: emailList,\r\n              aresponseItems: aresponseItems,\r\n              aresponseDocItems: aresponseDocItems,\r\n              emailListFolderItems: emailListFolderItems,\r\n            };\r\n            ctx3.executeQueryAsync(\r\n              Function.createDelegate(data, onUpdateSucceededZZ),\r\n              Function.createDelegate(data, onUpdateFailedZZ)\r\n            ); //After this line \"return true\" in PreSaveAction() will execute and then CallBackMethods will run.\r\n          }\r\n          function onUpdateResFolderFail(sender, args) {\r\n            m_waitDialog.close();\r\n\r\n            notifyId = SP.UI.Notify.addNotification(\r\n              \"Request failed. \" +\r\n                args.get_message() +\r\n                \"\\n\" +\r\n                args.get_stackTrace(),\r\n              false\r\n            );\r\n\r\n            alert(\r\n              \"Request failed. \" +\r\n                args.get_message() +\r\n                \"\\n\" +\r\n                args.get_stackTrace()\r\n            );\r\n            Audit.Common.Utilities.Refresh();\r\n          }\r\n          ctx2.executeQueryAsync(\r\n            Function.createDelegate(data, onUpdateResFolderSuccess),\r\n            Function.createDelegate(data, onUpdateResFolderFail)\r\n          ); //After this line \"return true\" in PreSaveAction() will execute and then CallBackMethods will run.\r\n        }\r\n      }\r\n      function OnFailure(sender, args) {\r\n        m_waitDialog.close();\r\n        alert(\r\n          \"Request failed. \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n        );\r\n      }\r\n\r\n      clientContext.executeQueryAsync(OnSuccess, OnFailure);\r\n    } else m_bIsTransactionExecuting = false;\r\n  }\r\n\r\n  function BindHandlersOnLoad() {\r\n    BindPrintButton(\r\n      \"#btnPrint1\",\r\n      \"#divStatusReportRespones\",\r\n      \"QA Response Status Report\"\r\n    );\r\n    //////////Note: for the export to work, make sure this is added to the html: <iframe id=\"CsvExpFrame\" style=\"display: none\"></iframe>\r\n    BindExportButton(\r\n      \".export1\",\r\n      \"QAResponseStatusReport_\",\r\n      \"tblStatusReportResponses\"\r\n    );\r\n  }\r\n\r\n  function BindPrintButton(btnPrint, divTbl, pageTitle) {\r\n    $(btnPrint).on(\"click\", function () {\r\n      Audit.Common.Utilities.PrintStatusReport(pageTitle, divTbl);\r\n    });\r\n  }\r\n\r\n  function BindExportButton(btnExport, fileNamePrefix, tbl) {\r\n    $(btnExport).on(\"click\", function (event) {\r\n      var curDate = new Date().format(\"yyyyMMdd_hhmmtt\");\r\n      Audit.Common.Utilities.ExportToCsv(fileNamePrefix + curDate, tbl);\r\n    });\r\n  }\r\n\r\n  function GoToResponse(response) {\r\n    _myViewModel.tabs.selectTab(_myViewModel.tabOpts.ResponseDetail);\r\n\r\n    if (response) {\r\n      response = m_bigMap[\"response-\" + response];\r\n\r\n      var requestStatus = response.request.status;\r\n      var responseStatus = response.resStatus;\r\n      if (\r\n        (responseStatus == \"4-Approved for QA\" ||\r\n          responseStatus == \"6-Reposted After Rejection\") &&\r\n        (requestStatus == \"Open\" || requestStatus == \"ReOpened\")\r\n      )\r\n        _myViewModel.filterResponseInfoTabResponseNameOpen2(response.title);\r\n      else\r\n        _myViewModel.filterResponseInfoTabResponseNameProcessed2(\r\n          response.title\r\n        );\r\n    }\r\n  }\r\n\r\n  var publicMembers = {\r\n    Load: m_fnLoadData,\r\n    IsTransactionExecuting: function () {\r\n      return m_bIsTransactionExecuting;\r\n    },\r\n    GoToResponse: GoToResponse,\r\n    GetCancelReason: function () {\r\n      m_RejectReason = $(\"#txtRejectReason\").val();\r\n      if ($.trim(m_RejectReason) == \"\")\r\n        $(\"#btnClientOk1\").attr(\"disabled\", \"disabled\");\r\n      else $(\"#btnClientOk1\").removeAttr(\"disabled\");\r\n      return m_RejectReason;\r\n    },\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n"],
  "mappings": "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",
  "names": ["html", "_a", "qaDbTemplate", "__template", "state", "setUrlParam", "param", "newVal", "getUrlParam", "search", "regex", "query", "urlParams", "results", "TabsModule", "tabOpts", "urlParam", "tab", "tabId", "tabById", "newTab", "setUrlParam", "event", "Tab", "id", "linkText", "template", "People", "_People", "ID", "Title", "LoginName", "IsGroup", "IsEnsured", "props", "html", "registerFieldComponents", "constructor", "BaseFieldModule", "params", "editTemplate", "html", "viewTemplate", "BlobModule", "BaseFieldModule", "params", "registerFieldComponents", "editTemplate", "html", "viewTemplate", "CheckboxModule", "BaseFieldModule", "params", "registerFieldComponents", "editTemplate", "html", "DateModule", "BaseFieldModule", "params", "registerFieldComponents", "editTemplate", "html", "LookupModule", "BaseFieldModule", "field", "registerFieldComponents", "editTemplate", "html", "viewTemplate", "PeopleModule", "BaseFieldModule", "params", "opt", "registerFieldComponents", "editTemplate", "html", "SearchSelectModule", "BaseFieldModule", "field", "val", "option", "e", "data", "registerFieldComponents", "editTemplate", "html", "SelectModule", "BaseFieldModule", "params", "registerFieldComponents", "editTemplate", "html", "viewTemplate", "TextAreaModule", "BaseFieldModule", "params", "nodes", "toolbarOptions", "editor", "Value", "val", "delta", "oldDelta", "source", "registerFieldComponents", "editTemplate", "html", "TextModule", "BaseFieldModule", "params", "registerFieldComponents", "html", "sal", "serverRelativeUrl", "principalToPeople", "oPrincipal", "isGroup", "webRoot", "sal", "siteRoles", "inputRole", "targetRole", "roles", "role", "roleName", "siteGroups", "publicMembers", "sal", "createSiteGroup", "groupName", "permissions", "callback", "currCtx", "web", "groupCreationInfo", "collRoleDefinitionBinding", "perm", "oRoleDefinition", "collRollAssignment", "onCreateGroupSucceeded", "roleInfo", "rd", "onCreateGroupFailed", "sender", "args", "data", "getUserGroups", "user", "everyone", "oGroups", "onQueryGroupsSucceeded", "groups", "groupsInfo", "groupsEnumerator", "oGroup", "group", "principalToPeople", "onQueryGroupsFailed", "getUsersWithGroup", "context", "oUsers", "onGetUserSuccess", "userObjs", "userEnumerator", "oUser", "userObj", "onGetUserFailed", "copyFiles", "sourceLib", "destLib", "onError", "folderSrc", "files", "e", "dest", "file", "destLibUrl", "copyFilesAsync", "sourceFolder", "destFolder", "resolve", "reject", "publicMembers", "ensureUserByKeyAsync", "userName", "resolve", "reject", "group", "sal", "context", "oUser", "onEnsureUserSucceeded", "sender", "args", "user", "principalToPeople", "onEnsureUserFailed", "data", "fetchSharePointData", "uri", "method", "headers", "opts", "siteEndpoint", "sal", "response", "JobProcessor", "maxConcurrency", "asyncFunction", "resolve", "reject", "job", "result", "error", "uploadQueue", "assetsPath", "callback", "oldValue", "_oldValue", "newValue", "arrayChanges", "addedValues", "value", "element", "valueAccessor", "allBindingsAccessor", "options", "selectedOptions", "optionsText", "onSearchInput", "populateOpts", "optionElements", "option", "optionElement", "selectedOption", "e", "opt", "allBindings", "viewModel", "bindingContext", "selectedUnwrapped", "i", "o", "schema", "elemId", "userKeys", "pickerControl", "observable", "userJSObject", "user", "ensureUserByKeyAsync", "person", "People", "userValue", "pickerUser", "path", "replaced", "_", "token", "addFiles", "fileList", "existingFiles", "newFileList", "file", "exFile", "label", "event", "files", "classToToggle", "classContainer", "containerType", "curIcon", "fromPathTemplateLoader", "name", "templateConfig", "assetsPath", "response", "error", "text", "fromPathViewModelLoader", "viewModelConfig", "module", "viewModelConstructor", "InitReport", "m_siteUrl", "m_listTitleRequests", "m_listNameRequests", "m_listTitleRequestsInternal", "m_listNameRequestsInternal", "m_listTitleResponses", "m_listNameResponses", "m_libTitleRequestDocs", "m_libNameRequestDocs", "m_libTitleCoverSheet", "m_libNameCoverSheet", "m_libTitleResponseDocs", "m_libNameResponseDocs", "m_libTitleResponseDocsEA", "m_libNameResponseDocsEA", "m_listTitleActionOffices", "m_listNameActionOffices", "m_listTitleEmailHistory", "m_listNameEmailHistory", "m_listTitleBulkResponses", "m_listNameBulkResponses", "m_listTitleBulkPermissions", "m_listNameBulkPermissions", "m_groupNameSpecialPermName1", "m_groupNameSpecialPermName2", "m_groupNameQA", "m_groupNameEA", "m_libResponseDocsLibraryGUID", "m_arrSiteGroups", "m_arrAOs", "m_fnRefresh", "hard", "curPath", "tabIndex", "responseNumOpen", "responseNumProcessed", "m_fnOnLoadDisplayTimeStamp", "curDate", "m_fnOnLoadDisplayTabAndResponse", "paramTabIndex", "bFiltered", "paramResponseNum", "m_fnOnLoadFilterResponses", "responseStatus1", "responseStatus2", "count", "cntOpen", "cntReOpened", "resStatus1", "resStatus2", "eacher", "reqStatus", "resStatus", "m_fnLoadSiteGroups", "itemColl", "listItemEnumerator", "oListItem", "id", "loginName", "title", "groupObject", "m_fnGetSPSiteGroup", "groupName", "userGroup", "x", "m_fnLoadActionOffices", "aoObject", "m_fnGetAOSPGroupName", "oGroup", "m_fnCheckSPItemHasGroupPermission", "item", "permissionLevel", "match", "roleAssignments", "rolesEnumerator", "role", "roleMember", "memberTitleName", "roleDefs", "roleDefsEnumerator", "rd", "rdName", "m_fnGoToResponse", "responseTitle", "isIA", "bFound", "m_fnGetResponseDocStyleTag2", "documentStatus", "styleTag", "m_fnGetResponseDocStyleTag", "m_fnCheckIfEmailFolderExists", "items", "requestNumber", "bFolderExists", "folderItem", "itemName", "m_cntAddToEmailFolder", "m_cntAddedToEmailFolder", "m_fnCreateEmailFolder", "list", "requestItem", "OnComplete", "currCtx", "web", "itemCreateInfo", "roleDefBindingCollAdmin", "roleDefBindingCollContribute", "roleDefBindingCollRestrictedRead", "roleDefBindingCollRestrictedContribute", "spGroupQA", "onUpdatePermsSucceeded", "arrActionOffice", "actionOfficeName", "actionOfficeGroupName", "actionOfficeGroup", "onUpdateAOPermsSucceeded", "onUpdateAOPermsFailed", "sender", "args", "currCtx2", "web2", "data", "onUpdatePermsFailed", "m_fnSortResponseTitleNoCase", "a", "b", "aTitle", "bTitle", "newA", "newB", "aIndex", "subA", "lastA", "intA", "newIntA", "bIndex", "subB", "lastB", "intB", "newIntB", "m_fnSortResponseObjectNoCase", "m_fnSortNoCase", "m_fnSortDate", "m_fnAddOptions", "arr", "ddlID", "dateSort", "responseSort", "rOptions", "j", "arrLength", "option", "thisDDL", "m_fnExistsInArr", "val", "m_fnGetTrueFalseIcon", "m_fnGetFriendlyDisplayName", "fieldName", "user", "m_fnPadDigits", "n", "totalDigits", "pd", "i", "m_fnPreciseRound", "num", "decimals", "sign", "m_fnGetFriendlyFileSize", "fileSize", "m_fnISODateString", "d", "pad", "m_fnBindHandlerResponseDoc", "event", "curIcon", "m_fnGetLookupFormField", "fieldTitle", "m_fnGetLookupDisplayText", "m_fnSetLookupFromFieldNameByText", "text", "theSelect", "m_fnGetTagFromIdentifierAndTitle", "theInput", "opt", "m_fnSetSelectedOptionByText", "select", "opts", "optLength", "tagName", "identifier", "idLength", "tags", "tagID", "m_fnViewUserManuals", "docType", "options", "m_fnPrintPage", "pageTitle", "divTbl", "siteUrl", "cssLink1", "cssLink2", "divOutput", "updatedDivOutput", "printDateString", "cssFile1", "cssFile2", "def1", "def2", "cssFileText", "html", "printWP", "m_fnExportToCsv", "fileName", "tableName", "removeHeader", "m_fnGetCellValues", "csv", "m_fnConvertToCsv", "uri", "downloadLink", "table", "deets", "tableArray", "r", "c", "m", "objArray", "array", "str", "line", "index", "value", "array1", "publicMembers", "libGUID", "qaDbTemplate", "responseParam", "paramShowSiteActionsToAnyone", "InitReport", "SetTimer", "intervalRefreshID", "divVal", "count", "m_arrRequests", "m_arrResponses", "m_bigMap", "m_IA_SPGroupName", "m_IA_ActionOffice", "m_itemID", "m_RejectReason", "m_resStatusToFilterOn", "m_bIsTransactionExecuting", "memberGroup", "statusId", "notifyId", "m_waitDialog", "m_requestItems", "m_requestInternalItems", "m_responseItems", "m_ResponseDocsItems", "m_aoItems", "eaReponseDocsFolderItems", "eaEmailLogListItems", "CommentChainField", "requestId", "props", "requestListTitle", "columnName", "initialValue", "showHistoryBool", "toggleShowHistory", "arrInitialComments", "comment", "comments", "newCommentText", "onSubmit", "commitChanges", "onRemove", "commentToRemove", "commentIndex", "currCtx", "web", "requestList", "oListItem", "args", "sender", "publicMembers", "ViewModel", "self", "Tab", "TabsModule", "responses", "requestID", "requestStatus", "requestIntDueDate", "sampleNum", "responseName", "responseStatus", "response", "eacher", "hide", "m_fnDisplayHelpResponseDocs", "m_fnCloseResponse", "m_fnReturnToCGFS", "m_fnApproveAll", "oResponseDoc", "m_fnApproveResponseDoc", "m_fnRejectResponseDoc", "setUrlParam", "newValue", "paramTabIndex", "_myViewModel", "paramResponseNum", "BindHandlersOnLoad", "bOpenResponses", "oResponse", "LoadTabResponseInfoCoverSheets", "LoadTabResponseInfoResponseDocs", "fieldName", "sortAsResponse", "types", "item", "ddArr", "responseStatusType", "LoadInfo", "m_currentUser", "requestQuery", "requestInternalList", "requestInternalQuery", "responseList", "responseQuery", "responseDocsLib", "responseDocsQuery", "aoList", "aoQuery", "OnSuccess", "OnFailure", "m_fnLoadData", "ao", "LoadRequests", "LoadResponses", "LoadResponseDocs", "LoadTabStatusReport", "cnt", "listItemEnumerator", "id", "number", "status", "sample", "emailSent", "subject", "arrActionOffice", "actionOffice", "x", "internalDueDate", "closedDate", "relatedAudit", "actionItems", "requestObject", "reqNum", "err", "responseObject", "title", "modifiedDate", "responseComments", "requestNumber", "responseID", "bigMapItem", "indexOfArrResponses", "responseDocObject", "fileSize", "receiptDate", "arr", "fbody", "responseArr", "responseStatus1", "responseStatus2", "resStatus1", "resStatus2", "arrlength", "responseTitle", "highlight", "aResponse", "DoUpdateModel", "arrResponsesToAdd", "initialTrip", "subArr", "bContinue", "batchSize", "updatedMutated", "coverSheetLib", "coverSheetQuery", "m_subsetCoverSheetItems", "data", "arrCS", "y", "curActionOffice", "csFolder", "csTitle", "z", "RenderResponses", "rowCount", "cntCanBeApprovedOrRejected", "cntApprovedOrArchived", "bDisplayingCloseBtn", "arrResponseDocs", "arrResponseSummary", "helpDlg", "options", "OnCallbackForm", "m_cntToApprove", "m_cntApproved", "approveResponseDocDlg", "OnCallbackApproveAllResponseDoc", "responseDocFileName", "OnCallbackApproveResponseDoc", "rejectResponseDocDlg", "OnCallbackRejectResponseDoc", "responseDocDlg", "OnCallbackCloseResponse", "OnCallbackReturnToCGFS", "m_fnFormatEmailBodyToIAFromQA", "oRequest", "emailText", "responseTitleBody", "m_fnGetResponseByTitle", "m_fnCreateEAFolder", "ctx2", "bFolderExists", "folderItem", "itemName", "earesponseDocLib", "itemCreateInfo", "oNewEAFolder", "m_fnCreateEAEmailLogItem", "bExists", "emailLogItems", "eaEmailLogList", "date", "friendlyName", "oNewEmailLogItem", "m_fnGetRequestByResponseTitle", "m_fnCreateEmailToIAFromQA", "emailList", "emailSubject", "result", "value", "aresponseItems", "oListItemResponse", "curDate", "newClosedTime", "mapResponse", "aresponseList", "aresponseQuery", "emailListQuery", "emailListFolderItems", "folderPath", "responseNumber", "fileName", "oList", "file", "absoluteSiteUrl", "destinationFileNameUrl", "siteUrl", "urlOfNewFile", "newFile", "onUpdateResFolderSuccess", "ctx3", "idOfCopiedFile", "oEADocLib", "oListFileItem", "aresponseDocList", "aresponseDocQuery", "aresponseDocItems", "onUpdateSucceededZZ", "bUpdateResponseStatus", "listxItemEnumerator", "bRejected", "oListItemResponseDoc", "oListItemResponseDocStatus", "listxxItemEnumerator", "onUpdateFailedZZ", "onUpdateResFolderFail", "clientContext", "eaResponseDocsLib", "earesponseDocsQuery", "eaEmailLogListQuery", "filePath", "lastInd", "urlpath", "BindPrintButton", "BindExportButton", "btnPrint", "divTbl", "pageTitle", "btnExport", "fileNamePrefix", "tbl", "event", "GoToResponse"]
}
