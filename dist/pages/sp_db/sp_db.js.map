{
  "version": 3,
  "sources": ["../../../src/pages/sp_db/SP_DB_Template.js", "../../../src/sal/entities/People.js", "../../../src/sal/components/fields/BaseFieldModule.js", "../../../src/sal/components/fields/BlobModule.js", "../../../src/sal/components/fields/CheckboxModule.js", "../../../src/sal/components/fields/DateModule.js", "../../../src/sal/components/fields/LookupModule.js", "../../../src/sal/components/fields/PeopleModule.js", "../../../src/sal/components/fields/SearchSelectModule.js", "../../../src/sal/components/fields/SelectModule.js", "../../../src/sal/components/fields/TextAreaModule.js", "../../../src/sal/components/fields/TextModule.js", "../../../src/sal/infrastructure/sal.js", "../../../src/env.js", "../../../src/sal/infrastructure/knockout_extensions.js", "../../../src/sal/infrastructure/register_components.js", "../../../src/services/legacy_helpers.js", "../../../src/common/utilities.js", "../../../src/pages/sp_db/sp_db.js"],
  "sourcesContent": ["\uFEFFconst html = String.raw;\r\n\r\nexport const spDbTemplate = html`\r\n  <div class=\"audit\">\r\n    <iframe id=\"CsvExpFrame\" style=\"display: none\"></iframe>\r\n\r\n    <div\r\n      id=\"divCounter\"\r\n      style=\"display: none\"\r\n      title=\"used to auto refresh the page\"\r\n    >\r\n      600\r\n    </div>\r\n\r\n    <div style=\"padding-bottom: 10px; display: none\" id=\"divRefresh\">\r\n      <a\r\n        title=\"Refresh this page\"\r\n        href=\"javascript:void(0)\"\r\n        onclick=\"Audit.SPReport.Report.Refresh()\"\r\n        ><span class=\"ui-icon ui-icon-refresh\"></span>Refresh</a\r\n      >\r\n    </div>\r\n\r\n    <div id=\"divLoading\" style=\"color: green; padding-bottom: 10px\">\r\n      Please Wait... Loading\r\n    </div>\r\n\r\n    <div id=\"tabs\" style=\"display: none; margin-top: 20px\">\r\n      <ul>\r\n        <li><a href=\"#tabs-0\">Status Report</a></li>\r\n        <li><a href=\"#tabs-1\">Responses</a></li>\r\n      </ul>\r\n      <div id=\"tabs-0\">\r\n        <div\r\n          id=\"lblStatusReportResponsesMsg\"\r\n          style=\"padding-top: 5px; color: green\"\r\n          data-bind=\"visible: arrResponses().length == 0\"\r\n        >\r\n          <span class=\"ui-icon ui-icon-info\"></span>There are 0 responses for\r\n          your review\r\n        </div>\r\n        <div\r\n          id=\"divButtons\"\r\n          style=\"padding-top: 3px\"\r\n          data-bind=\"visible: arrResponses().length > 0\"\r\n        >\r\n          <a\r\n            id=\"btnPrint1\"\r\n            title=\"Click here to Print\"\r\n            href=\"javascript:void(0)\"\r\n            class=\"hideOnPrint\"\r\n            ><span class=\"ui-icon ui-icon-print\">Print</span></a\r\n          >\r\n          <a class=\"export1 hideOnPrint\" title=\"Export to CSV\" href=\"#\"\r\n            ><span class=\"ui-icon ui-icon-disk\">Export to CSV</span></a\r\n          >\r\n          <a\r\n            id=\"btnViewAll\"\r\n            title=\"View All\"\r\n            href=\"javascript:void(0)\"\r\n            data-bind=\"visible: arrFilteredResponsesCount() < arrResponses().length, click: ClearFilters\"\r\n            ><span class=\"ui-icon ui-icon-circle-zoomout\"></span>View All\r\n            Responses</a\r\n          >\r\n        </div>\r\n\r\n        <div id=\"divStatusReportRespones\">\r\n          <table\r\n            id=\"tblStatusReportResponses\"\r\n            class=\"tablesorter report\"\r\n            data-bind=\"visible: arrResponses().length > 0\"\r\n          >\r\n            <thead>\r\n              <tr\r\n                valign=\"top\"\r\n                class=\"rowFilters\"\r\n                data-bind=\"visible: arrResponses().length > 0\"\r\n              >\r\n                <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                  <select\r\n                    id=\"ddlResponseRequestID\"\r\n                    data-bind=\"options: GetDistinctResponsesDDVals('reqNumber'), value: filterRequestID, optionsCaption: '-Select-', event:{ change: FilterChanged}\"\r\n                  ></select>\r\n                </th>\r\n                <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                  <select\r\n                    id=\"ddlResponseRequestStatus\"\r\n                    data-bind=\"options: GetDistinctResponsesDDVals('requestStatus'), value: filterRequestStatus, optionsCaption: '-Select-', event:{ change: FilterChanged}\"\r\n                  ></select>\r\n                </th>\r\n                <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                  <select\r\n                    id=\"ddlResponseRequestInternalDueDate\"\r\n                    data-bind=\"options: GetDistinctResponsesDDVals('internalDueDate'), value: filterRequestIntDueDate, optionsCaption: '-Select-', event:{ change: FilterChanged}\"\r\n                  ></select>\r\n                </th>\r\n                <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                  <select\r\n                    id=\"ddlResponseSampleNum\"\r\n                    data-bind=\"options: GetDistinctResponsesDDVals('sample'), value: filterSampleNum, optionsCaption: '-Select-', event:{ change: FilterChanged}\"\r\n                  ></select>\r\n                </th>\r\n                <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                  <select\r\n                    id=\"ddlResponseName\"\r\n                    data-bind=\"options: GetDistinctResponsesDDVals('title'), value: filterResponseName, optionsCaption: '-Select-', event:{ change: FilterChanged}\"\r\n                  ></select>\r\n                </th>\r\n                <th class=\"sorter-false\" nowrap=\"nowrap\">\r\n                  <select\r\n                    id=\"ddlResponseStatus\"\r\n                    data-bind=\"options: GetDistinctResponsesDDVals('status'), value: filterResponseStatus, optionsCaption: '-Select-', event:{ change: FilterChanged}\"\r\n                  ></select>\r\n                </th>\r\n                <th class=\"sorter-false\" nowrap=\"nowrap\"></th>\r\n                <th class=\"sorter-false\" nowrap=\"nowrap\"></th>\r\n              </tr>\r\n              <tr valign=\"top\">\r\n                <th class=\"sorter-true\" nowrap=\"nowrap\">Request #</th>\r\n                <th class=\"sorter-true\" nowrap=\"nowrap\">Request Status</th>\r\n                <th class=\"sorter-true\" nowrap=\"nowrap\">Internal Due Date</th>\r\n                <th class=\"sorter-true\" nowrap=\"nowrap\">Sample #</th>\r\n                <th class=\"sorter-true\" nowrap=\"nowrap\">Response Name</th>\r\n                <th class=\"sorter-true\" nowrap=\"nowrap\">Status</th>\r\n                <th class=\"sorter-true\" nowrap=\"nowrap\"># of Documents</th>\r\n                <th class=\"sorter-true\" nowrap=\"nowrap\">Modified</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id=\"fbody\" data-bind=\"foreach: arrResponses\">\r\n              <tr class=\"sr-response-item\" data-bind=\"visible: visibleRow\">\r\n                <td class=\"sr-response-requestNum\">\r\n                  <span data-bind=\"text: reqNumber\"></span>\r\n                </td>\r\n                <td class=\"sr-response-requestStatus\">\r\n                  <span data-bind=\"text: requestStatus\"></span>\r\n                </td>\r\n                <td class=\"sr-response-internalDueDate\">\r\n                  <span data-bind=\"text: internalDueDate\"></span>\r\n                </td>\r\n                <td class=\"sr-response-sample\">\r\n                  <span data-bind=\"text: sample\"></span>\r\n                </td>\r\n                <td class=\"sr-response-title\">\r\n                  <a\r\n                    href=\"javascript:void(0);\"\r\n                    title=\"Go to Response Details\"\r\n                    data-bind=\"click: $parent.GoToResponse\"\r\n                    ><span data-bind=\"text: title\"></span\r\n                  ></a>\r\n                </td>\r\n                <td class=\"sr-response-status\">\r\n                  <span data-bind=\"text: status\"></span>\r\n                </td>\r\n                <td class=\"sr-response-docCount\">\r\n                  <span data-bind=\"text: docCount\"></span>\r\n                </td>\r\n                <td class=\"sr-response-modified\">\r\n                  <span data-bind=\"text: modified\"></span>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n            <tfoot class=\"footer\">\r\n              <tr>\r\n                <th colspan=\"8\">\r\n                  Displaying\r\n                  <span\r\n                    id=\"spanResponsesDisplayedTotal\"\r\n                    style=\"color: green\"\r\n                    data-bind=\"text: arrFilteredResponsesCount()\"\r\n                    >0</span\r\n                  >\r\n                  out of\r\n                  <span\r\n                    style=\"color: green\"\r\n                    data-bind=\"text: arrResponses().length\"\r\n                  ></span>\r\n                  Responses\r\n                </th>\r\n              </tr>\r\n            </tfoot>\r\n          </table>\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"tabs-1\">\r\n        <div style=\"padding-bottom: 15px\">\r\n          <table>\r\n            <tr>\r\n              <td><span>Responses:</span></td>\r\n              <td>\r\n                <select\r\n                  id=\"ddlResponses\"\r\n                  data-bind=\"options: GetDistinctResponsesDDVals('title'), value: filterResponseName2, optionsCaption: '-Select-'\"\r\n                ></select>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n\r\n        <div id=\"divResponseInfo\" data-bind=\"with: currentResponse\">\r\n          <fieldset>\r\n            <legend>Response Information</legend>\r\n            <table id=\"tblResponseInfo\" class=\"tablesorter\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Request #</td>\r\n                  <td>\r\n                    <span id=\"requestInfoNum\" data-bind=\"text: number\"></span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Request Status</td>\r\n                  <td>\r\n                    <span\r\n                      id=\"requestInfoStatus\"\r\n                      data-bind=\"text: $parent.currentResponseRequestStatus, style: { color: $parent.currentResponseRequestStatusStyle }\"\r\n                    ></span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Subject</td>\r\n                  <td>\r\n                    <span\r\n                      id=\"requestInfoSub\"\r\n                      data-bind=\"text: request.subject\"\r\n                    ></span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Due Date</td>\r\n                  <td>\r\n                    <span\r\n                      id=\"requestInfoInternalDueDate\"\r\n                      data-bind=\"text: request.internalDueDate\"\r\n                    ></span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Sample?</td>\r\n                  <td>\r\n                    <span\r\n                      id=\"requestInfoSample\"\r\n                      data-bind=\"text: request.sample, css: request.sample == true ? 'ui-icon ui-icon-check' : 'ui-icon ui-icon-close'\"\r\n                    ></span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Response</td>\r\n                  <td>\r\n                    <span id=\"responseInfoName\" data-bind=\"text: title\"></span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Response Status</td>\r\n                  <td>\r\n                    <span\r\n                      id=\"responseInfoStatus\"\r\n                      data-bind=\"text: $parent.currentResponseStatus, style: { color:  resStatus == '7-Closed' ? 'red' : 'green' }\"\r\n                    ></span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Sample #</td>\r\n                  <td>\r\n                    <span\r\n                      id=\"responseInfoSampleNum\"\r\n                      data-bind=\"text: sample\"\r\n                    ></span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Action Office</td>\r\n                  <td>\r\n                    <span\r\n                      id=\"responseInfoAO\"\r\n                      data-bind=\"text: actionOffice\"\r\n                    ></span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Related Audit</td>\r\n                  <td>\r\n                    <span\r\n                      id=\"requestInfoRelatedAudit\"\r\n                      data-bind=\"text: request.relatedAudit\"\r\n                    ></span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Action Items</td>\r\n                  <td>\r\n                    <span\r\n                      id=\"requestInfoActionItems\"\r\n                      data-bind=\"html: request.actionItems \"\r\n                    ></span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Comments</td>\r\n                  <td>\r\n                    <span\r\n                      id=\"responseInfoComments\"\r\n                      data-bind=\"html: comments\"\r\n                    ></span>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </fieldset>\r\n        </div>\r\n\r\n        <div id=\"divCoverSheets\" data-bind=\"visible: currentResponse\">\r\n          <fieldset>\r\n            <legend>Cover Sheets/Supplemental Documents</legend>\r\n            <div\r\n              id=\"divEmptyCoversheetsMsg\"\r\n              style=\"border: 0px !important; font-style: italic\"\r\n              data-bind=\"visible: arrCoverSheets().length <= 0\"\r\n            >\r\n              There are 0 cover sheets or supplemental documents\r\n            </div>\r\n            <table\r\n              id=\"tblCoverSheets\"\r\n              class=\"tablesorter report\"\r\n              data-bind=\"visible: arrCoverSheets().length > 0\"\r\n            >\r\n              <thead>\r\n                <tr valign=\"top\">\r\n                  <th class=\"sorter-false\" nowrap=\"nowrap\">Name</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody data-bind=\"foreach: arrCoverSheets\">\r\n                <tr class=\"coversheet-item\">\r\n                  <td class=\"coversheet-title\" title=\"Click to Download\">\r\n                    <a\r\n                      data-bind=\"attr: { href: 'javascript:void(0)', onclick: link}\"\r\n                      ><span data-bind=\"text: title\"></span\r\n                    ></a>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n              <tfoot>\r\n                <tr valign=\"top\">\r\n                  <th nowrap=\"nowrap\">\r\n                    Total:\r\n                    <span\r\n                      id=\"tblCoverSheetsTotal\"\r\n                      data-bind=\"text: arrCoverSheets().length\"\r\n                      >0</span\r\n                    >\r\n                  </th>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </fieldset>\r\n        </div>\r\n\r\n        <div id=\"divResponseDocs\" data-bind=\"visible: currentResponse\">\r\n          <fieldset>\r\n            <legend>Response Documents</legend>\r\n            <div\r\n              id=\"divEmptyResponseDocsMsg\"\r\n              style=\"border: 0px !important; font-style: italic\"\r\n              data-bind=\"visible: arrResponseDocs().length <= 0\"\r\n            >\r\n              There are 0 response documents\r\n            </div>\r\n            <table\r\n              id=\"tblResponseDocs\"\r\n              class=\"tablesorter report\"\r\n              data-bind=\"visible: arrResponseDocs().length > 0\"\r\n            >\r\n              <thead>\r\n                <tr valign=\"top\">\r\n                  <th class=\"sorter-false\" nowrap=\"nowrap\">Type</th>\r\n                  <th class=\"sorter-false\" nowrap=\"nowrap\">Name</th>\r\n                  <th class=\"sorter-false\" nowrap=\"nowrap\">Receipt Date</th>\r\n                  <th class=\"sorter-false\" nowrap=\"nowrap\">File Size</th>\r\n                  <th class=\"sorter-false\" nowrap=\"nowrap\">Checked Out</th>\r\n                  <th class=\"sorter-false\" nowrap=\"nowrap\">Status</th>\r\n                  <th class=\"sorter-false\" nowrap=\"nowrap\">Reason</th>\r\n                  <th class=\"sorter-false\" nowrap=\"nowrap\">Modified</th>\r\n                  <th class=\"sorter-false\" nowrap=\"nowrap\">Modified By</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody\r\n                data-bind=\"foreach: { data: arrResponseDocs, as: 'responseDocSummary'} \"\r\n              >\r\n                <tr class=\"requestInfo-response-doc\">\r\n                  <td colspan=\"10\">\r\n                    <img\r\n                      style=\"background-color: transparent\"\r\n                      src=\"/_layouts/images/minus.gif\"\r\n                      title=\"Expand/Collapse\"\r\n                    /><span\r\n                      data-bind=\"text: responseDocSummary.responseTitle\"\r\n                    ></span>\r\n                  </td>\r\n                </tr>\r\n\r\n                <!-- ko foreach: responseDocSummary.responseDocs-->\r\n\r\n                <tr\r\n                  class=\"requestInfo-response-doc-item\"\r\n                  data-bind=\"style: styleTag\"\r\n                >\r\n                  <td>\r\n                    <img\r\n                      data-bind=\"attr:{ src: $parent.siteUrl + '/_layouts/images/' + docIcon}\"\r\n                    />\r\n                  </td>\r\n                  <td\r\n                    class=\"requestInfo-response-doc-title\"\r\n                    title=\"Click to Download\"\r\n                  >\r\n                    <a\r\n                      data-bind=\"attr: { href: 'javascript:void(0)', onclick: link}\"\r\n                      ><span data-bind=\"text: title\"></span\r\n                    ></a>\r\n                  </td>\r\n                  <td nowrap data-bind=\"text: receiptDate\"></td>\r\n                  <td nowrap data-bind=\"text: fileSize\"></td>\r\n                  <td nowrap data-bind=\"text: checkedOutBy\"></td>\r\n                  <td nowrap data-bind=\"text: documentStatus\"></td>\r\n                  <td nowrap data-bind=\"text: rejectReason\"></td>\r\n                  <td\r\n                    class=\"requestInfo-response-doc-modified\"\r\n                    data-bind=\"text: modifiedDate\"\r\n                  ></td>\r\n                  <td\r\n                    class=\"requestInfo-response-doc-modifiedBy\"\r\n                    data-bind=\"text: modifiedBy\"\r\n                  ></td>\r\n                </tr>\r\n\r\n                <!-- /ko -->\r\n              </tbody>\r\n              <tfoot>\r\n                <tr valign=\"top\">\r\n                  <th colspan=\"9\" nowrap=\"nowrap\">\r\n                    Total:\r\n                    <span\r\n                      id=\"tblResponseDocsTotal\"\r\n                      data-bind=\"text: cntResponseDocs\"\r\n                      >0</span\r\n                    >\r\n                  </th>\r\n                </tr>\r\n              </tfoot>\r\n            </table>\r\n          </fieldset>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div id=\"divTest\"></div>\r\n  </div>\r\n`;\r\n", "export class People {\r\n  constructor({\r\n    ID,\r\n    Title,\r\n    LoginName = null,\r\n    IsGroup = null,\r\n    IsEnsured = false,\r\n  }) {\r\n    this.ID = ID;\r\n    this.Title = Title;\r\n    this.LookupValue = Title;\r\n    this.LoginName = LoginName != \"\" ? LoginName : null;\r\n    this.IsGroup = IsGroup;\r\n    // Has the user data been fetched? Used for binding handlers.\r\n    this.IsEnsured = IsEnsured;\r\n  }\r\n\r\n  ID = null;\r\n  Title = null;\r\n  LoginName = null;\r\n  LookupValue = null;\r\n\r\n  getKey = () => this.LoginName ?? this.Title;\r\n\r\n  static Create = function (props) {\r\n    if (!props || (!props.ID && !(props.Title || props.LookupValue)))\r\n      return null;\r\n    return new People({\r\n      ...props,\r\n      Title: props.Title ?? props.LookupValue,\r\n    });\r\n  };\r\n}\r\n", "// Hint: use the es6-string-html VS Code module to make template literals easier to read\r\nexport const html = String.raw;\r\n\r\nexport function registerFieldComponents(constructor) {\r\n  ko.components.register(constructor.edit, {\r\n    template: constructor.editTemplate,\r\n    viewModel: constructor,\r\n  });\r\n\r\n  ko.components.register(constructor.view, {\r\n    template: constructor.viewTemplate,\r\n    viewModel: constructor,\r\n  });\r\n}\r\n\r\nexport class BaseFieldModule {\r\n  constructor(params) {\r\n    Object.assign(this, params);\r\n  }\r\n\r\n  _id;\r\n  getUniqueId = () => {\r\n    if (!this._id) {\r\n      this._id = \"field-\" + Math.floor(Math.random() * 10000);\r\n    }\r\n    return this._id;\r\n  };\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return [];\r\n    if (!this.isRequired) return [];\r\n    return this.Value()\r\n      ? []\r\n      : [\r\n          new ValidationError(\r\n            \"text-field\",\r\n            \"required-field\",\r\n            this.displayName + ` is required!`\r\n          ),\r\n        ];\r\n  });\r\n\r\n  ShowErrors = ko.observable(false);\r\n\r\n  ValidationClass = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return;\r\n    return this.Errors().length ? \"is-invalid\" : \"is-valid\";\r\n  });\r\n\r\n  static viewTemplate = html`\r\n    <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n    <div data-bind=\"text: toString()\"></div>\r\n  `;\r\n\r\n  static editTemplate = html`<div>Uh oh!</div>`;\r\n}\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"component: {name: Value()?.components.edit, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString\"></td>\r\n        <!-- /ko -->\r\n        <td>\r\n          <i\r\n            title=\"remove item\"\r\n            class=\"fa-solid fa-trash pointer\"\r\n            data-bind=\"click: $parent.remove.bind(row)\"\r\n          ></i>\r\n        </td>\r\n      </tr>\r\n      <!-- /ko -->\r\n      <tr>\r\n        <!-- ko foreach: NewItem()?.FormFields -->\r\n        <td>\r\n          <div\r\n            data-bind=\"component: {name: components.edit, params: $data}\"\r\n          ></div>\r\n        </td>\r\n        <!-- /ko -->\r\n        <td class=\"align-bottom\">\r\n          <button\r\n            title=\"add and new\"\r\n            type=\"button\"\r\n            data-bind=\"click: submit\"\r\n            class=\"btn btn-success\"\r\n          >\r\n            Add +\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <!-- ko if: Value -->\r\n  <div\r\n    data-bind=\"component: {name: Value().components.view, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString()\"></td>\r\n        <!-- /ko -->\r\n      </tr>\r\n      <!-- /ko -->\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class BlobModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"blob-view\";\r\n  static edit = \"blob-edit\";\r\n  static new = \"blob-edit\";\r\n}\r\n\r\nregisterFieldComponents(BlobModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value\"\r\n      />\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value\"\r\n        disabled\r\n      />\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nexport class CheckboxModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"checkbox-view\";\r\n  static edit = \"checkbox-edit\";\r\n  static new = \"checkbox-edit\";\r\n}\r\n\r\nregisterFieldComponents(CheckboxModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nexport const dateFieldTypes = {\r\n  date: \"date\",\r\n  datetime: \"datetime-local\",\r\n};\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"value: inputBinding, class: ValidationClass, attr: {'type': type}\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class DateModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  toInputDateString = () => this.Value().format(\"yyyy-MM-dd\");\r\n\r\n  toInputDateTimeString = () => this.Value().format(\"yyyy-MM-ddThh:mm\");\r\n\r\n  inputBinding = ko.pureComputed({\r\n    read: () => {\r\n      if (!this.Value()) return null;\r\n      switch (this.type) {\r\n        case dateFieldTypes.date:\r\n          return this.toInputDateString();\r\n        case dateFieldTypes.datetime:\r\n          return this.toInputDateTimeString();\r\n        default:\r\n          return null;\r\n      }\r\n    },\r\n    write: (val) => {\r\n      if (!val) return;\r\n      //writes in format\r\n      if (this.type == dateFieldTypes.datetime) {\r\n        this.Value(new Date(val));\r\n        return;\r\n      }\r\n\r\n      // make sure we're using midnight local time\r\n      this.Value(new Date(val + \"T00:00\"));\r\n    },\r\n  });\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"date-view\";\r\n  static edit = \"date-edit\";\r\n  static new = \"date-edit\";\r\n}\r\n\r\nregisterFieldComponents(DateModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: isSearch -->\r\n    <div data-bind=\"text: toString()\"></div>\r\n    <input class=\"form-control\" data-bind=\"\" />\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isSearch -->\r\n    <!-- ko if: Options().length -->\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n  selectedOptions: Value,\r\n  optionsText: optionsText,\r\n  class: ValidationClass\"\r\n    ></select>\r\n    <div class=\"fw-light flex justify-between\">\r\n      <p class=\"fst-italic\">Hold ctrl to select multiple</p>\r\n      <button type=\"button\" class=\"btn btn-link h-1\" data-bind=\"click: clear\">\r\n        CLEAR\r\n      </button>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: Options, \r\n    optionsCaption: 'Select...', \r\n    value: Value,\r\n    optionsText: optionsText,\r\n    class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class LookupModule extends BaseFieldModule {\r\n  constructor(field) {\r\n    super(field);\r\n    this.onSearchInput = field.onSearchInput;\r\n    this.multiple = field.multiple ?? false;\r\n  }\r\n\r\n  // selectedOptions = ko.pureComputed({\r\n  //   read: () => {\r\n  //     if (this.multiple) return this.Value();\r\n  //     return ko.unwrap(this.Value) ? [ko.unwrap(this.Value)] : [];\r\n  //   },\r\n  //   write: (val) => {\r\n  //     if (this.multiple) {\r\n  //       this.Value(val);\r\n  //       return;\r\n  //     }\r\n\r\n  //     if (val.length) {\r\n  //       this.Value(val[0]);\r\n  //       return;\r\n  //     }\r\n  //     this.Value(null);\r\n  //   },\r\n  // });\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"lookup-view\";\r\n  static edit = \"lookup-edit\";\r\n  static new = \"lookup-edit\";\r\n}\r\n\r\nregisterFieldComponents(LookupModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold w-100\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko ifnot: spGroupId -->\r\n    <div\r\n      data-bind=\"attr: {id: getUniqueId()}, \r\n      people: Value, \r\n      pickerOptions: pickerOptions,\r\n      class: ValidationClass\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowUserSelect -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: userOpts, \r\n        optionsCaption: 'Select...', \r\n        optionsText: 'Title',\r\n        value: ValueFunc,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: toString -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"text: toString, \r\n      attr: {title: Value()?.LoginName}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <ul data-bind=\"foreach: Value\">\r\n    <li data-bind=\"attr: {title: LoginName}, text: Title\"></li>\r\n  </ul>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: toString -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class PeopleModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  ValueFunc = ko.pureComputed({\r\n    read: () => {\r\n      if (!this.Value()) return;\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      return userOpts.find((opt) => opt.ID == this.Value().ID);\r\n    },\r\n    write: (opt) => {\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      if (!userOpts) return;\r\n      this.Value(opt);\r\n    },\r\n  });\r\n\r\n  ShowUserSelect = ko.pureComputed(() => {\r\n    // We don't care to unwrap this, since we want to know if it's set or an observable.\r\n    const groupName = this.spGroupName;\r\n    if (!groupName) return false;\r\n    const options = ko.unwrap(this.userOpts);\r\n    return options.length;\r\n  });\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"people-view\";\r\n  static edit = \"people-edit\";\r\n  static new = \"people-edit\";\r\n}\r\n\r\nregisterFieldComponents(PeopleModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </label>\r\n  <search-select\r\n    class=\"form-select\"\r\n    data-bind=\"searchSelect: { \r\n      options: Options, \r\n      selectedOptions: Value,\r\n      optionsText: optionsText,\r\n      onSearchInput: onSearchInput\r\n    }\"\r\n  >\r\n  </search-select>\r\n  <div class=\"fw-light flex justify-between\">\r\n    <p class=\"fst-italic\"></p>\r\n    <button type=\"button\" class=\"btn btn-link h-1\" data-bind=\"click: clear\">\r\n      CLEAR\r\n    </button>\r\n  </div>\r\n  <!-- ko if: instructions -->\r\n  <div\r\n    class=\"fw-lighter fst-italic text-secondary\"\r\n    data-bind=\"html: instructions\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SearchSelectModule extends BaseFieldModule {\r\n  constructor(field) {\r\n    super(field);\r\n    this.Options = field.Options;\r\n    this.Value = field.Value;\r\n    this.optionsText =\r\n      field.optionsText ??\r\n      ((val) => {\r\n        return val;\r\n      });\r\n    this.multiple = field.multiple;\r\n    this.OptionsCaption = field.OptionsCaption ?? \"Select...\";\r\n    this.onSearchInput = field.onSearchInput;\r\n  }\r\n\r\n  GetSelectedOptions = ko.pureComputed(() => {\r\n    if (this.multiple) return this.Value();\r\n\r\n    return this.Value() ? [this.Value()] : [];\r\n  });\r\n\r\n  InputGroupFocused = ko.observable();\r\n  setFocus = () => this.InputGroupFocused(true);\r\n\r\n  FilterText = ko.observable();\r\n  FilteredOptions = ko.pureComputed(() =>\r\n    this.Options().filter((option) => {\r\n      if (this.GetSelectedOptions().indexOf(option) >= 0) return false;\r\n      if (this.FilterText())\r\n        return this.optionsText(option)\r\n          .toLowerCase()\r\n          .includes(this.FilterText().toLowerCase());\r\n      return true;\r\n    })\r\n  );\r\n\r\n  addSelection = (option, e) => {\r\n    console.log(\"selected\", option);\r\n    if (e.target.nextElementSibling) {\r\n      //e.stopPropagation();\r\n      e.target.nextElementSibling.focus();\r\n    }\r\n    if (this.multiple) {\r\n      this.Value.push(option);\r\n    } else {\r\n      this.Value(option);\r\n    }\r\n  };\r\n\r\n  removeSelection = (option) =>\r\n    this.multiple ? this.Value.remove(option) : this.Value(null);\r\n\r\n  setInputGroupFocus = () => {\r\n    this.InputGroupFocused(true);\r\n    clearTimeout(this.focusOutTimeout);\r\n  };\r\n\r\n  removeInputGroupFocus = (data, e) => {\r\n    this.focusOutTimeout = window.setTimeout(() => {\r\n      this.InputGroupFocused(false);\r\n    }, 0);\r\n  };\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"search-select-view\";\r\n  static edit = \"search-select-edit\";\r\n  static new = \"search-select-new\";\r\n}\r\n\r\nregisterFieldComponents(SearchSelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        optionsText: optionsText,\r\n        selectedOptions: Value,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <div class=\"fst-italic fw-light\">Hold ctrl to select multiple.</div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        optionsText: optionsText,\r\n        value: Value,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SelectModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"select-view\";\r\n  static edit = \"select-edit\";\r\n  static new = \"select-edit\";\r\n}\r\n\r\nregisterFieldComponents(SelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"component field\">\r\n    <!-- ko if: isRichText -->\r\n    <label class=\"fw-semibold\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span\r\n      >:</label\r\n    >\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <div\r\n      class=\"richtext-field\"\r\n      data-bind=\"childrenComplete: childrenHaveLoaded\"\r\n    >\r\n      <!-- Create the editor container -->\r\n      <div\r\n        class=\"form-control\"\r\n        data-bind=\"attr: {'id': getUniqueId()}, class: ValidationClass\"\r\n        style=\"height: 150px\"\r\n      >\r\n        <div data-bind=\"html: Value\"></div>\r\n      </div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isRichText -->\r\n    <label class=\"fw-semibold\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n      <textarea\r\n        name=\"\"\r\n        id=\"\"\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        class=\"form-control\"\r\n        data-bind=\"textInput: Value, class: ValidationClass, attr: attr\"\r\n      ></textarea>\r\n    </label>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowErrors -->\r\n    <!-- ko foreach: Errors -->\r\n    <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: Value -->\r\n  <!-- ko if: isRichText -->\r\n  <div data-bind=\"html: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: isRichText -->\r\n  <div data-bind=\"text: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: Value -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextAreaModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  childrenHaveLoaded = (nodes) => {\r\n    this.initializeEditor();\r\n  };\r\n\r\n  getToolbarId = () => \"toolbar-\" + this.getUniqueId();\r\n\r\n  initializeEditor() {\r\n    const toolbarOptions = [\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n      [\"link\"],\r\n      [\"blockquote\", \"code-block\"],\r\n\r\n      [{ header: 1 }, { header: 2 }], // custom button values\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n      [{ direction: \"rtl\" }], // text direction\r\n\r\n      [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [{ font: [] }],\r\n      [{ align: [] }],\r\n\r\n      [\"clean\"], // remove formatting button\r\n    ];\r\n\r\n    // debugger;\r\n    var editor = new Quill(\"#\" + this.getUniqueId(), {\r\n      modules: { toolbar: toolbarOptions },\r\n      theme: \"snow\",\r\n    });\r\n\r\n    const Value = this.Value;\r\n\r\n    Value.subscribe((val) => {\r\n      if (val == \"\") {\r\n        editor.setText(\"\");\r\n      }\r\n    });\r\n\r\n    editor.on(\"text-change\", function (delta, oldDelta, source) {\r\n      Value(editor.root.textContent ? editor.root.innerHTML : \"\");\r\n    });\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-area-view\";\r\n  static edit = \"text-area-edit\";\r\n  static new = \"text-area-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextAreaModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"textInput: Value, class: ValidationClass, attr: attr\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-view\";\r\n  static edit = \"text-edit\";\r\n  static new = \"text-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextModule);\r\n", "/*\r\n    SharePoint Acces Layer - sal.js\r\n\r\n    Abstract any functions that rely on reading or setting SP items to here.\r\n\r\n    Create a new \"Connection\" object type that will store information for \r\n    interfacing with a specific list.\r\n\r\n    Author: Peter Backlund \r\n    Contact: backlundpf <@> state.gov\r\n    Created: 2019-02-12\r\n*/\r\n\r\n/*\r\n  TODO:\r\n  - migrate to rest api\r\n  - remove new from \"new SP.ClientContext.get_current()\"\r\n  - standardize currctx\r\n  - remove unused functions\r\n  - Combine functions \r\n*/\r\n\r\nwindow.console = window.console || { log: function () {} };\r\n\r\nwindow.sal = window.sal ?? {};\r\nvar sal = window.sal;\r\n\r\nconst serverRelativeUrl =\r\n  _spPageContextInfo.webServerRelativeUrl == \"/\"\r\n    ? \"\"\r\n    : _spPageContextInfo.webServerRelativeUrl;\r\n\r\nsal.globalConfig = sal.globalConfig || {\r\n  siteGroups: [],\r\n  siteUrl: serverRelativeUrl,\r\n  listServices: serverRelativeUrl + \"/_vti_bin/ListData.svc/\",\r\n  defaultGroups: {},\r\n};\r\nsal.site = sal.site || {};\r\n\r\nwindow.DEBUG = true;\r\n\r\nexport function executeQuery(currCtx) {\r\n  return new Promise((resolve, reject) =>\r\n    currCtx.executeQueryAsync(resolve, (sender, args) => {\r\n      reject({ sender, args });\r\n    })\r\n  );\r\n}\r\n\r\nfunction principalToPeople(oPrincipal, isGroup = null) {\r\n  return {\r\n    ID: oPrincipal.get_id(),\r\n    Title: oPrincipal.get_title(),\r\n    LoginName: oPrincipal.get_loginName(),\r\n    IsEnsured: true,\r\n    IsGroup:\r\n      isGroup != null\r\n        ? isGroup\r\n        : oPrincipal.constructor.getName() == \"SP.Group\",\r\n    oPrincipal,\r\n  };\r\n}\r\n\r\n// Used in authorization\r\nexport function getDefaultGroups() {\r\n  const defaultGroups = sal.globalConfig.defaultGroups;\r\n  const result = {};\r\n  Object.keys(defaultGroups).forEach((key) => {\r\n    result[key] = principalToPeople(defaultGroups[key], true);\r\n  });\r\n  return result;\r\n}\r\n\r\nconst siteGroups = {};\r\n\r\nexport async function getGroupUsers(groupName) {\r\n  if (siteGroups[groupName]?.Users?.constructor == Array) {\r\n    return siteGroups[groupName].Users;\r\n  }\r\n  const url = `/web/sitegroups/GetByName('${groupName}')?$expand=Users`;\r\n\r\n  const groupResult = await fetchSharePointData(url);\r\n\r\n  const group = groupResult.d;\r\n  group.Users = group.Users?.results;\r\n\r\n  siteGroups[groupName] = group;\r\n  return group.Users;\r\n}\r\n\r\n// Used in router\r\nexport const webRoot =\r\n  _spPageContextInfo.webAbsoluteUrl == \"/\"\r\n    ? \"\"\r\n    : _spPageContextInfo.webAbsoluteUrl;\r\n\r\nexport async function InitSal() {\r\n  if (sal.utilities) return;\r\n  console.log(\"Init Sal\");\r\n  var currCtx = SP.ClientContext.get_current();\r\n  var web = currCtx.get_web();\r\n  //sal.site = sal.siteConnection;\r\n\r\n  // Get default groups\r\n  sal.globalConfig.defaultGroups = {\r\n    owners: web.get_associatedOwnerGroup(),\r\n    members: web.get_associatedMemberGroup(),\r\n    visitors: web.get_associatedVisitorGroup(),\r\n  };\r\n  currCtx.load(sal.globalConfig.defaultGroups.owners);\r\n  currCtx.load(sal.globalConfig.defaultGroups.members);\r\n  currCtx.load(sal.globalConfig.defaultGroups.visitors);\r\n\r\n  // Get Current User information\r\n  var user = web.get_currentUser(); //must load this to access info.\r\n  currCtx.load(user);\r\n\r\n  // Get the site groups\r\n  var siteGroupCollection = web.get_siteGroups();\r\n  currCtx.load(siteGroupCollection);\r\n\r\n  // Get the roles upfront so we can validate they're present on the site.\r\n  sal.globalConfig.roles = [];\r\n  var oRoleDefinitions = currCtx.get_web().get_roleDefinitions();\r\n  currCtx.load(oRoleDefinitions);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    currCtx.executeQueryAsync(\r\n      function () {\r\n        sal.globalConfig.currentUser = user;\r\n\r\n        var listItemEnumerator = siteGroupCollection.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItem = listItemEnumerator.get_current();\r\n          sal.globalConfig.siteGroups.push(principalToPeople(oListItem));\r\n        }\r\n\r\n        // Role Definitions\r\n        var oEnumerator = oRoleDefinitions.getEnumerator();\r\n        while (oEnumerator.moveNext()) {\r\n          var oRoleDefinition = oEnumerator.get_current();\r\n          sal.globalConfig.roles.push(oRoleDefinition.get_name());\r\n        }\r\n\r\n        sal.config = new sal.NewAppConfig();\r\n        sal.utilities = new sal.NewUtilities();\r\n        resolve();\r\n      },\r\n      function (sender, args) {\r\n        alert(\"Error initializing SAL\");\r\n        reject();\r\n      }\r\n    );\r\n  });\r\n  // console.log()\r\n}\r\n\r\nsal.NewAppConfig = function () {\r\n  // TODO: We should take in configuration from our current application, roles/groups etc.\r\n  var siteRoles = {};\r\n  siteRoles.roles = {\r\n    FullControl: \"Full Control\",\r\n    Design: \"Design\",\r\n    Edit: \"Edit\",\r\n    Contribute: \"Contribute\",\r\n    RestrictedContribute: \"Restricted Contribute\",\r\n    InitialCreate: \"Initial Create\",\r\n    Read: \"Read\",\r\n    RestrictedRead: \"Restricted Read\",\r\n    LimitedAccess: \"Limited Access\",\r\n  };\r\n  siteRoles.fulfillsRole = function (inputRole, targetRole) {\r\n    // the site roles are already in authoritative order\r\n    const roles = Object.values(siteRoles.roles);\r\n    if (!roles.includes(inputRole) || !roles.includes(targetRole)) return false;\r\n\r\n    return roles.indexOf(inputRole) <= roles.indexOf(targetRole);\r\n  };\r\n\r\n  siteRoles.validate = function () {\r\n    Object.keys(siteRoles.roles).forEach(function (role) {\r\n      var roleName = siteRoles.roles[role];\r\n      if (!sal.globalConfig.roles.includes(roleName)) {\r\n        console.error(roleName + \" is not in the global roles list\");\r\n      } else {\r\n        console.log(roleName);\r\n      }\r\n    });\r\n  };\r\n\r\n  var siteGroups = {\r\n    groups: {\r\n      Owners: \"workorder Owners\",\r\n      Members: \"workorder Members\",\r\n      Visitors: \"workorder Visitors\",\r\n      RestrictedReaders: \"Restricted Readers\",\r\n    },\r\n  };\r\n\r\n  var publicMembers = {\r\n    siteRoles,\r\n    siteGroups,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\n// Used in Authorization\r\nexport async function getUserPropsAsync(userId = _spPageContextInfo.userId) {\r\n  // We need to make two api calls, one to user info list, and one to web\r\n  // const userInfoUrl = `/Web/lists/getbytitle('User%20Information%20List')/Items(${userId})`;\r\n  const userPropsUrl = `/sp.userprofiles.peoplemanager/getmyproperties`;\r\n  // const userGroupUrl = `/Web/GetUserById(${userId})/Groups`;\r\n\r\n  // Get more user info:\r\n  const userInfoUrl = `/Web/GetUserById(${userId})/?$expand=Groups`;\r\n\r\n  const userInfo = (await fetchSharePointData(userInfoUrl)).d;\r\n\r\n  // TODO: See if we can just select the properties we need\r\n  // const userPropsUrl = `/sp.userprofiles.peoplemanager/getpropertiesfor(@v)?@v='${encodeURIComponent(\r\n  //   userInfo.LoginName\r\n  // )}'`;\r\n\r\n  const userProps = (await fetchSharePointData(userPropsUrl))?.d\r\n    .UserProfileProperties.results;\r\n\r\n  function findPropValue(props, key) {\r\n    return props.find((prop) => prop.Key == key)?.Value;\r\n  }\r\n\r\n  return {\r\n    ID: userId,\r\n    Title: userInfo.Title,\r\n    LoginName: userInfo.LoginName,\r\n    WorkPhone: findPropValue(userProps, \"WorkPhone\"),\r\n    EMail: findPropValue(userProps, \"WorkEmail\"), // TODO: Do we still need this spelling?\r\n    IsEnsured: true,\r\n    IsGroup: false,\r\n    Groups: userInfo.Groups?.results?.map((group) => {\r\n      return {\r\n        ...group,\r\n        ID: group.Id,\r\n        IsGroup: true,\r\n        IsEnsured: true,\r\n      };\r\n    }),\r\n  };\r\n}\r\n\r\n// TODO: DEPRECATED remove after verification\r\nasync function getUserPropsAsyncDeprecated() {\r\n  // TODO: We aren't getting the phone number, need to query userprofile service\r\n  return new Promise((resolve, reject) => {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oUser = web.get_currentUser();\r\n    var oGroups = oUser.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      const user = {\r\n        ID: oUser.get_id(),\r\n        Title: oUser.get_title(),\r\n        LoginName: oUser.get_loginName(),\r\n        IsEnsured: true,\r\n        IsGroup: false,\r\n        Groups: [],\r\n      };\r\n\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        user.Groups.push(principalToPeople(oGroup));\r\n      }\r\n      resolve(user);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    currCtx.load(oUser);\r\n    currCtx.load(oGroups);\r\n    const data = { oUser, oGroups, resolve, reject };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  });\r\n}\r\n\r\nsal.NewUtilities = function () {\r\n  // TODO: Split this up into UserManager, GroupManager, etc\r\n  function createSiteGroup(groupName, permissions, callback) {\r\n    /* groupName: the name of the new SP Group\r\n     *  permissions: an array of permissions to assign to the group\r\n     * groupOwner: the name of the owner group\r\n     */\r\n    callback = callback === undefined ? null : callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var groupCreationInfo = new SP.GroupCreationInformation();\r\n    groupCreationInfo.set_title(groupName);\r\n    this.oGroup = oWebsite.get_siteGroups().add(groupCreationInfo);\r\n    oGroup.set_owner(oWebsite.get_associatedOwnerGroup());\r\n\r\n    oGroup.update();\r\n    var collRoleDefinitionBinding =\r\n      SP.RoleDefinitionBindingCollection.newObject(clientContext);\r\n\r\n    this.oRoleDefinitions = [];\r\n\r\n    permissions.forEach(function (perm) {\r\n      var oRoleDefinition = oWebsite.get_roleDefinitions().getByName(perm);\r\n      this.oRoleDefinitions.push(oRoleDefinition);\r\n      collRoleDefinitionBinding.add(oRoleDefinition);\r\n    });\r\n\r\n    var collRollAssignment = oWebsite.get_roleAssignments();\r\n    collRollAssignment.add(oGroup, collRoleDefinitionBinding);\r\n\r\n    function onCreateGroupSucceeded() {\r\n      var roleInfo =\r\n        oGroup.get_title() +\r\n        \" created and assigned to \" +\r\n        oRoleDefinitions.forEach(function (rd) {\r\n          rd + \", \";\r\n        });\r\n      if (callback) {\r\n        callback(oGroup.get_id());\r\n      }\r\n      console.log(roleInfo);\r\n    }\r\n\r\n    function onCreateGroupFailed(sender, args) {\r\n      alert(\r\n        groupnName +\r\n          \" - Create group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    clientContext.load(oGroup, \"Title\");\r\n\r\n    var data = {\r\n      groupName: groupName,\r\n      oGroup: oGroup,\r\n      oRoleDefinition: oRoleDefinition,\r\n      callback: callback,\r\n    };\r\n\r\n    clientContext.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateGroupSucceeded),\r\n      Function.createDelegate(data, onCreateGroupFailed)\r\n    );\r\n  }\r\n\r\n  function getUserGroups(user, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var everyone = web.ensureUser(user);\r\n    var oGroups = everyone.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      var groups = new Array();\r\n      var groupsInfo = new String();\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        var group = principalToPeople(oGroup);\r\n\r\n        groupsInfo +=\r\n          \"\\n\" +\r\n          \"Group ID: \" +\r\n          oGroup.get_id() +\r\n          \", \" +\r\n          \"Title : \" +\r\n          oGroup.get_title();\r\n        groups.push(group);\r\n      }\r\n      console.log(groupsInfo.toString());\r\n      callback(groups);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    currCtx.load(everyone);\r\n    currCtx.load(oGroups);\r\n    data = { everyone: everyone, oGroups: oGroups, callback: callback };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  }\r\n\r\n  function getUsersWithGroup(oGroup, callback) {\r\n    var context = new SP.ClientContext.get_current();\r\n\r\n    var oUsers = oGroup.get_users();\r\n\r\n    function onGetUserSuccess() {\r\n      var userObjs = [];\r\n      var userEnumerator = oUsers.getEnumerator();\r\n      while (userEnumerator.moveNext()) {\r\n        var oUser = userEnumerator.get_current();\r\n        var userObj = principalToPeople(oUser);\r\n        userObjs.push(userObj);\r\n      }\r\n      callback(userObjs);\r\n    }\r\n\r\n    function onGetUserFailed(sender, args) {}\r\n\r\n    var data = { oUsers: oUsers, callback: callback };\r\n    context.load(oUsers);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onGetUserSuccess),\r\n      Function.createDelegate(data, onGetUserFailed)\r\n    );\r\n  }\r\n\r\n  function copyFiles(sourceLib, destLib, callback, onError) {\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourceLib);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        console.log(\"Got the source folder right here!\");\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destLib + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \") + args.get_message();\r\n            onError;\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.log(\"Sorry, something messed up: \" + args.get_message());\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n\r\n  var publicMembers = {\r\n    copyFiles: copyFiles,\r\n    copyFilesAsync,\r\n    createSiteGroup: createSiteGroup,\r\n    getUserGroups: getUserGroups,\r\n    getUsersWithGroup: getUsersWithGroup,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\nexport async function copyFileAsync(sourceFilePath, destFilePath) {\r\n  const uri = `/web/getfilebyserverrelativeurl('${sourceFilePath}')/copyto('${destFilePath}')`;\r\n\r\n  const result = await fetchSharePointData(uri, \"POST\");\r\n\r\n  return result;\r\n}\r\n\r\n// Used in Authorization\r\nasync function getCurrentUserPropertiesAsync() {\r\n  var headers = {\r\n    \"Content-Type\": \"application/json;odata=verbose\",\r\n    \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n  };\r\n  try {\r\n    var response = await fetch(\r\n      _spPageContextInfo.webAbsoluteUrl +\r\n        \"/_api/SP.UserProfiles.PeopleManager/GetMyProperties\",\r\n      {\r\n        method: \"GET\",\r\n        headers,\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(response.status);\r\n    }\r\n\r\n    const data = await response.json();\r\n    sal.globalConfig.currentUserProfile = data.d;\r\n    const requestorPhone = data.d.UserProfileProperties.results.find(function (\r\n      prop\r\n    ) {\r\n      return prop.Key == \"WorkPhone\";\r\n    }).Value;\r\n  } catch (error) {\r\n    console.error(\"Unable to fetch User Properties:\", error);\r\n  }\r\n}\r\n\r\n// Used in Knockout people custom binding\r\nexport async function ensureUserByKeyAsync(userName) {\r\n  return new Promise((resolve, reject) => {\r\n    var group = sal.globalConfig.siteGroups.find(function (group) {\r\n      return group.LoginName == userName;\r\n    });\r\n\r\n    if (group) {\r\n      resolve(group);\r\n      return;\r\n    }\r\n\r\n    var context = new SP.ClientContext.get_current();\r\n    var oUser = context.get_web().ensureUser(userName);\r\n\r\n    function onEnsureUserSucceeded(sender, args) {\r\n      const user = principalToPeople(oUser);\r\n      resolve(user);\r\n    }\r\n\r\n    function onEnsureUserFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to ensure user :\" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    const data = { oUser, resolve, reject };\r\n\r\n    context.load(oUser);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onEnsureUserSucceeded),\r\n      Function.createDelegate(data, onEnsureUserFailed)\r\n    );\r\n  });\r\n}\r\n\r\nfunction getSPSiteGroupByName(groupName) {\r\n  var userGroup = null;\r\n  if (this.globalConfig.siteGroups != null) {\r\n    userGroup = this.globalConfig.siteGroups.find(function (group) {\r\n      return group.Title == groupName;\r\n    });\r\n  }\r\n  return userGroup;\r\n}\r\n\r\nexport class ItemPermissions {\r\n  constructor({ hasUniqueRoleAssignments, roles }) {\r\n    this.hasUniqueRoleAssignments = hasUniqueRoleAssignments;\r\n    this.roles = roles;\r\n  }\r\n\r\n  hasUniqueRoleAssignments;\r\n  roles = [];\r\n\r\n  addPrincipalRole(principal, roleName) {\r\n    const newRoleDef = new RoleDef({ name: roleName });\r\n    const principalRole = this.getPrincipalRole(principal);\r\n\r\n    if (principalRole) {\r\n      principalRole.addRoleDef(newRoleDef);\r\n      return;\r\n    }\r\n\r\n    const newRole = new Role({ principal });\r\n    newRole.addRoleDef(newRoleDef);\r\n    this.roles.push(newRole);\r\n  }\r\n\r\n  getPrincipalRole(principal) {\r\n    return this.roles.find((role) => role.principal.ID == principal.ID);\r\n  }\r\n\r\n  principalHasPermissionKind(principal, permission) {\r\n    const role = this.getPrincipalRole(principal);\r\n    return role?.roleDefs.find((roleDef) =>\r\n      roleDef.basePermissions?.has(permission)\r\n    )\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  getValuePairs() {\r\n    // For backwards compatibility\r\n    return this.roles.flatMap((role) =>\r\n      role.roleDefs.map((roleDef) => [role.principal.Title, roleDef.name])\r\n    );\r\n  }\r\n\r\n  static fromRestResult(result) {\r\n    const roles = result.RoleAssignments.results.map(\r\n      Role.fromRestRoleAssignment\r\n    );\r\n\r\n    return new ItemPermissions({\r\n      hasUniqueRoleAssignments: result.HasUniqueRoleAssignments,\r\n      roles,\r\n    });\r\n  }\r\n}\r\n\r\nexport class Role {\r\n  constructor({ principal, roleDefs = [] }) {\r\n    this.principal = principal;\r\n    this.roleDefs = roleDefs;\r\n  }\r\n\r\n  principal; // People Entity\r\n  roleDefs = [];\r\n\r\n  addRoleDef(roleDef) {\r\n    this.roleDefs.push(roleDef);\r\n  }\r\n\r\n  static fromRestRoleAssignment(role) {\r\n    return new Role({\r\n      principal: { ...role.Member, ID: role.Member.Id },\r\n      roleDefs: role.RoleDefinitionBindings.results.map(\r\n        RoleDef.fromRestRoleDef\r\n      ),\r\n    });\r\n  }\r\n  static fromJsomRole(role) {\r\n    const newRole = new Role({\r\n      principal: principalToPeople(role.get_member()),\r\n    });\r\n\r\n    var roleDefs = role.get_roleDefinitionBindings();\r\n    if (roleDefs != null) {\r\n      var roleDefsEnumerator = roleDefs.getEnumerator();\r\n      while (roleDefsEnumerator.moveNext()) {\r\n        var roleDef = roleDefsEnumerator.get_current();\r\n        newRole.roleDefs.push(RoleDef.fromJsomRoleDef(roleDef));\r\n      }\r\n    }\r\n    return newRole;\r\n  }\r\n}\r\n\r\nexport class RoleDef {\r\n  constructor({ name, basePermissions = null }) {\r\n    this.name = name;\r\n    this.basePermissions = basePermissions;\r\n  }\r\n  name;\r\n  basePermissions;\r\n\r\n  static fromRestRoleDef(roleDef) {\r\n    const newRoleDef = new RoleDef({\r\n      name: roleDef.Name,\r\n      basePermissions: roleDef.BasePermissions,\r\n    });\r\n    Object.assign(newRoleDef, roleDef);\r\n    return newRoleDef;\r\n  }\r\n\r\n  static fromJsomRoleDef(roleDef) {\r\n    const newRoleDef = new RoleDef({ name: roleDef.get_name() });\r\n    newRoleDef.basePermissions = roleDef.get_basePermissions();\r\n\r\n    return newRoleDef;\r\n  }\r\n}\r\n\r\nexport function SPList(listDef) {\r\n  /*\r\n      Expecting a list definition object in the following format:\r\n        var assignmentListDef = {\r\n        name: \"Assignment\",\r\n        title: \"Assignment\"\r\n      };\r\n    */\r\n\r\n  /*****************************************************************\r\n                                Globals       \r\n    ******************************************************************/\r\n\r\n  var self = this;\r\n\r\n  self.config = {\r\n    def: listDef,\r\n  };\r\n\r\n  /*****************************************************************\r\n                                Common Private Methods       \r\n    ******************************************************************/\r\n  async function init() {\r\n    if (!self.config.fieldSchema) {\r\n      const listEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')?$expand=Fields`;\r\n      const list = await fetchSharePointData(listEndpoint);\r\n      // const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      //const fields = await fetchData(apiEndpoint);\r\n      self.config.guid = list.d.Id;\r\n      self.config.fieldSchema = list.d.Fields.results;\r\n    }\r\n  }\r\n\r\n  init();\r\n\r\n  /*****************************************************************\r\n                                Common Public Methods       \r\n    ******************************************************************/\r\n\r\n  async function setListPermissionsAsync(itemPermissions, reset) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    // await executeQuery(currCtx).catch((sender, args) => {\r\n    //   console.warn(\"Unable to get list: \", sender);\r\n    //   return;\r\n    // });\r\n\r\n    return setResourcePermissionsAsync(oList, itemPermissions, reset);\r\n  }\r\n\r\n  function setListPermissions(valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n\r\n    var users = new Array();\r\n    var resolvedGroups = new Array();\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup) {\r\n        resolvedGroups.push([resolvedGroup, vp[1]]);\r\n      } else {\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindItemSucceeded() {\r\n      console.log(\"Successfully found item\");\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      if (reset) {\r\n        oList.resetRoleInheritance();\r\n        oList.breakRoleInheritance(false, false);\r\n        oList\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        oList.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { oList: oList, callback: callback };\r\n\r\n      function onSetListPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        callback(oList);\r\n      }\r\n\r\n      function onSetListPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on List: \" +\r\n            this.oList.get_title() +\r\n            args.get_message() +\r\n            \"\\n\",\r\n          args.get_stackTrace()\r\n        );\r\n      }\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetListPermissionsSuccess),\r\n        Function.createDelegate(data, onSetListPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindItemFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to find List: \" + this.oList.get_title + args.get_message(),\r\n        args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      oList: oList,\r\n      users: users,\r\n      resolvedGroups: resolvedGroups,\r\n      callback: callback,\r\n    };\r\n    //let data = { title: oListItem.get_item(\"Title\"), oListItem: oListItem };\r\n\r\n    currCtx.load(oList);\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindItemSucceeded),\r\n      Function.createDelegate(data, onFindItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                                createListItem      \r\n    ******************************************************************/\r\n  function mapObjectToListItem(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    if (!Array.isArray(val)) {\r\n      return mapItemToListItem(val);\r\n    }\r\n    return val\r\n      .map((item) => {\r\n        return mapItemToListItem(item);\r\n      })\r\n      .join(\";#\");\r\n  }\r\n\r\n  function mapItemToListItem(item) {\r\n    if (item.ID) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return `${item.ID};#${item.LookupValue ?? \"\"}`;\r\n    }\r\n    if (item.LookupValue) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return item.LookupValue;\r\n    }\r\n    if (item.constructor.getName() == \"Date\") {\r\n      return item.toISOString();\r\n    }\r\n    return item;\r\n  }\r\n\r\n  function createListItemAsync(entity, folderPath = null) {\r\n    return new Promise((resolve, reject) => {\r\n      //self.updateConfig();\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n      if (folderPath) {\r\n        var folderUrl =\r\n          sal.globalConfig.siteUrl +\r\n          \"/Lists/\" +\r\n          self.config.def.name +\r\n          \"/\" +\r\n          folderPath;\r\n        itemCreateInfo.set_folderUrl(folderUrl);\r\n      }\r\n\r\n      const oListItem = oList.addItem(itemCreateInfo);\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onCreateListItemSucceeded() {\r\n        resolve(oListItem.get_id());\r\n      }\r\n\r\n      function onCreateListItemFailed(sender, args) {\r\n        console.error(\"Create Item Failed - List: \" + self.config.def.name);\r\n        console.error(\"ValuePairs\", entity);\r\n        console.error(sender, args);\r\n        reject(sender);\r\n      }\r\n\r\n      const data = { entity, oListItem, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onCreateListItemSucceeded),\r\n        Function.createDelegate(data, onCreateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                                getListItems      \r\n    ******************************************************************/\r\n  function mapListItemToObject(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    let out = {};\r\n    switch (val.constructor.getName()) {\r\n      case \"SP.FieldUserValue\":\r\n        out.LoginName = val.get_email();\r\n      case \"SP.FieldLookupValue\":\r\n        out.ID = val.get_lookupId();\r\n        out.LookupValue = val.get_lookupValue();\r\n        out.Title = val.get_lookupValue();\r\n        break;\r\n      default:\r\n        out = val;\r\n    }\r\n    return out;\r\n  }\r\n\r\n  function getListItems(caml, fields, callback) {\r\n    /*\r\n        Obtain all list items that match the querystring passed by caml.\r\n        */\r\n    var camlQuery = new SP.CamlQuery.createAllItemsQuery();\r\n\r\n    camlQuery.set_viewXml(caml);\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var collListItem = oList.getItems(camlQuery);\r\n\r\n    function onGetListItemsSucceeded() {\r\n      var self = this;\r\n      var listItemEnumerator = self.collListItem.getEnumerator();\r\n\r\n      const foundObjects = [];\r\n\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n        var listObj = {};\r\n        fields.forEach((field) => {\r\n          var colVal = oListItem.get_item(field);\r\n          //console.log(`SAL: Setting ${field} to`, colVal);\r\n          listObj[field] = Array.isArray(colVal)\r\n            ? colVal.map((val) => mapListItemToObject(val))\r\n            : mapListItemToObject(colVal);\r\n        });\r\n        //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n        // listObj.oListItem = oListItem;\r\n        foundObjects.push(listObj);\r\n      }\r\n      //this.setState({ focusedItems })\r\n      //console.log(\"calling callback get list\");\r\n      callback(foundObjects);\r\n    }\r\n\r\n    function onGetListItemsFailed(sender, args) {\r\n      console.log(\"unsuccessful read\", sender);\r\n\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      collListItem: collListItem,\r\n      callback: callback,\r\n      fields,\r\n      camlQuery,\r\n    };\r\n\r\n    currCtx.load(collListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemsSucceeded),\r\n      Function.createDelegate(data, onGetListItemsFailed)\r\n    );\r\n  }\r\n\r\n  function getListItemsAsync({ fields = null, caml = null }) {\r\n    if (!caml) {\r\n      var caml =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">0</Value>' +\r\n        \"</Eq></Where></Query></View>\";\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      getListItems(caml, fields, resolve);\r\n    });\r\n  }\r\n\r\n  function findByIdAsync(id, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        findById(id, fields, resolve);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  async function getById(id, fields) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n\r\n    const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/items(${id})?$Select=${queryFields}&$expand=${expandFields}`;\r\n\r\n    const result = await fetchSharePointData(apiEndpoint);\r\n    return result.d;\r\n  }\r\n\r\n  async function getListFields() {\r\n    if (!self.config.fieldSchema) {\r\n      const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      const fields = await fetchSharePointData(apiEndpoint);\r\n      self.config.fieldSchema = fields.d.results;\r\n    }\r\n    return self.config.fieldSchema;\r\n  }\r\n\r\n  async function getQueryFields(fields) {\r\n    const queryFields = [];\r\n    const expandFields = [];\r\n\r\n    const listFields = await getListFields();\r\n    fields.map((f) => {\r\n      // TODO: Figure out why FileRef is pretending to be a lookup\r\n      if (f == \"FileRef\") {\r\n        queryFields.push(f);\r\n        return;\r\n      }\r\n\r\n      if (f.includes(\"/\")) {\r\n        queryFields.push(f);\r\n        expandFields.push(f.split(\"/\")[0]);\r\n        return;\r\n      }\r\n      const fieldSchema = listFields.find((lf) => lf.StaticName == f);\r\n      if (!fieldSchema) {\r\n        alert(`Field '${f}' not found on list ${self.config.def.name}`);\r\n        return;\r\n      }\r\n\r\n      const idString = f + \"/ID\";\r\n      let titleString = f + \"/Title\";\r\n      switch (fieldSchema.TypeAsString) {\r\n        case \"LookupMulti\":\r\n        case \"Lookup\":\r\n          titleString = f + \"/\" + fieldSchema.LookupField;\r\n        case \"User\":\r\n          queryFields.push(idString);\r\n          queryFields.push(titleString);\r\n          expandFields.push(f);\r\n          // expandFields.push(titleString);\r\n          break;\r\n        case \"Choice\":\r\n        default:\r\n          queryFields.push(f);\r\n      }\r\n    });\r\n    return [queryFields, expandFields];\r\n  }\r\n\r\n  // { column, value, type = \"LookupValue\" }\r\n  async function findByColumnValueAsync(\r\n    columnFilters,\r\n    { orderByColumn = null, sortAsc },\r\n    { count = null, includePermissions = false, includeFolders = false },\r\n    fields\r\n  ) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n    if (includePermissions) {\r\n      queryFields.push(\"RoleAssignments\");\r\n      queryFields.push(\"HasUniqueRoleAssignments\");\r\n      expandFields.push(\"RoleAssignments\");\r\n    }\r\n    const orderBy = orderByColumn\r\n      ? `$orderby=${orderByColumn} ${sortAsc ? \"asc\" : \"desc\"}`\r\n      : \"\";\r\n    // TODO: fieldfilter should use 'lookupcolumnId' e.g. ServiceTypeId eq 1\r\n    const colFilterArr = [];\r\n    columnFilters.forEach((colFilter) =>\r\n      colFilterArr.push(\r\n        `${colFilter.column} ${colFilter.op ?? \"eq\"} '${colFilter.value}'`\r\n      )\r\n    );\r\n    if (!includeFolders) colFilterArr.push(`FSObjType eq '0'`);\r\n\r\n    const filter = \"$filter=(\" + colFilterArr.join(`) and (`) + \")\";\r\n\r\n    //const fsObjTypeFilter = `FSObjType eq '0'`;\r\n    // const fieldFilter = `${column} eq '${value}'`;\r\n    // const filter2 = !includeFolders\r\n    //   ? `$filter=(${fieldFilter}) and (${fsObjTypeFilter})`\r\n    //   : `$filter=${fieldFilter}`;\r\n\r\n    const include = \"$select=\" + queryFields;\r\n    const expand = `$expand=` + expandFields;\r\n    const page = count ? `$top=${count}` : \"\";\r\n\r\n    const apiEndpoint =\r\n      `/web/lists/GetByTitle('${self.config.def.title}')/items?` +\r\n      `${include}&${expand}&${orderBy}&${filter}&${page}`;\r\n\r\n    const result = await fetchSharePointData(apiEndpoint);\r\n    const cursor = {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n\r\n    // if (window.DEBUG) console.log(cursor);\r\n    return cursor;\r\n  }\r\n\r\n  async function loadNextPage(cursor) {\r\n    const result = await fetchSharePointData(cursor._next);\r\n    return {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n  }\r\n\r\n  function findById(id, fields, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n    var oListItem = oList.getItemById(id);\r\n\r\n    function onGetListItemSucceeded() {\r\n      const listObj = {};\r\n      fields.forEach((field) => {\r\n        var colVal = oListItem.get_item(field);\r\n        //console.log(`SAL: Setting ${field} to`, colVal);\r\n        listObj[field] = Array.isArray(colVal)\r\n          ? colVal.map((val) => mapListItemToObject(val))\r\n          : mapListItemToObject(colVal);\r\n      });\r\n      callback(listObj);\r\n    }\r\n\r\n    function onGetListItemFailed(sender, args) {\r\n      console.error(\"SAL: findById - List: \" + self.config.def.name);\r\n      console.error(\"Fields\", this);\r\n      console.error(sender, args);\r\n    }\r\n\r\n    var data = {\r\n      oListItem,\r\n      callback,\r\n      fields,\r\n    };\r\n    currCtx.load(oListItem);\r\n    // currCtx.load(oListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemSucceeded),\r\n      Function.createDelegate(data, onGetListItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                            updateListItem      \r\n    ******************************************************************/\r\n\r\n  function updateListItemAsync(entity) {\r\n    if (!entity?.ID) {\r\n      return false;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const oListItem = oList.getItemById(entity.ID);\r\n\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onUpdateListItemsSucceeded() {\r\n        //alert('Item updated!');\r\n        console.log(\"Successfully updated \" + this.oListItem.get_item(\"Title\"));\r\n        resolve();\r\n      }\r\n\r\n      function onUpdateListItemFailed(sender, args) {\r\n        console.error(\"Update Failed - List: \" + self.config.def.name);\r\n        console.error(\"Item Id\", this.oListItem.get_id() ?? \"N/A\");\r\n        console.error(entity);\r\n        console.error(sender, args);\r\n        reject(args);\r\n      }\r\n\r\n      const data = { oListItem, entity, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onUpdateListItemsSucceeded),\r\n        Function.createDelegate(data, onUpdateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            deleteListItem      \r\n    ******************************************************************/\r\n  function deleteListItem(id, callback) {\r\n    //[[\"ColName\", \"Value\"], [\"Col2\", \"Value2\"]]\r\n    //self.callbackDeleteListItem = callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var data = { callback: callback };\r\n    const oListItem = oList.getItemById(id);\r\n    oListItem.deleteObject();\r\n\r\n    function onDeleteListItemsSucceeded(sender, args) {\r\n      //alert('Item updated!');\r\n      callback();\r\n    }\r\n\r\n    function onDeleteListItemsFailed(sender, args) {\r\n      console.error(\r\n        \"sal.SPList.deleteListItem: Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onDeleteListItemsSucceeded),\r\n      Function.createDelegate(data, onDeleteListItemsFailed)\r\n    );\r\n  }\r\n\r\n  async function deleteListItemAsync(id) {\r\n    const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/items(${id})`;\r\n    return await fetchSharePointData(apiEndpoint, \"DELETE\", {\r\n      \"If-Match\": \"*\",\r\n    });\r\n    // return new Promise((resolve, reject) => deleteListItem(id, resolve));\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Permissions  \r\n    ******************************************************************/\r\n  /**\r\n   * Documentation - setItemPermissions\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {ItemPermissions} itemPermissions an instance of ItemPermissions\r\n   */\r\n  async function setItemPermissionsAsync(id, itemPermissions, reset) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n\r\n    const oListItem = await getoListItemByIdAsync(id);\r\n\r\n    return setResourcePermissionsAsync(oListItem, itemPermissions, reset);\r\n  }\r\n\r\n  async function setResourcePermissionsAsync(\r\n    oListItem,\r\n    itemPermissions,\r\n    reset\r\n  ) {\r\n    if (reset) {\r\n      oListItem.resetRoleInheritance();\r\n      oListItem.breakRoleInheritance(false, false);\r\n    }\r\n\r\n    // const result = await new Promise((resolve, reject) => {\r\n    //   currCtx.executeQueryAsync(\r\n    //     () => {\r\n    //       resolve();\r\n    //     },\r\n    //     (sender, args) => {\r\n    //       console.error(\r\n    //         \"Failed to break permissions on item: \" +\r\n    //           this.oListItem.get_lookupValue() +\r\n    //           args.get_message(),\r\n    //         args\r\n    //       );\r\n    //       reject();\r\n    //     }\r\n    //   );\r\n    // });\r\n\r\n    for (const role of itemPermissions.roles) {\r\n      const ensuredPrincipalResult = await ensureUserByKeyAsync(\r\n        role.principal.Title\r\n      );\r\n      if (!ensuredPrincipalResult) return;\r\n\r\n      const currCtx2 = new SP.ClientContext.get_current();\r\n      const web = currCtx2.get_web();\r\n\r\n      const oPrincipal = ensuredPrincipalResult.oPrincipal;\r\n\r\n      currCtx2.load(oPrincipal);\r\n\r\n      role.roleDefs.map((roleDef) => {\r\n        const roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx2);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(roleDef.name)\r\n        );\r\n        oListItem.get_roleAssignments().add(oPrincipal, roleDefBindingColl);\r\n      });\r\n\r\n      const data = {};\r\n      await executeQuery(currCtx2).catch(({ sender, args }) => {\r\n        console.error(\r\n          `Failed to set role permissions on item id ${id} for principal ${role.principal.Title} ` +\r\n            args.get_message(),\r\n          args\r\n        );\r\n      });\r\n    }\r\n\r\n    if (reset) {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n\r\n      oListItem\r\n        .get_roleAssignments()\r\n        .getByPrincipal(sal.globalConfig.currentUser)\r\n        .deleteObject();\r\n\r\n      await executeQuery(currCtx).catch(({ sender, args }) => {\r\n        console.error(\r\n          `Failed to remove role permissions on item id ${id} for Current User ` +\r\n            args.get_message(),\r\n          args\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  function getoListItemByIdAsync(id) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const oListItem = oList.getItemById(id);\r\n      currCtx.executeQueryAsync(\r\n        () => {\r\n          resolve(oListItem);\r\n        },\r\n        (sender, args) => {\r\n          console.error(\r\n            \"Failed to find item: \" + id + args.get_message(),\r\n            args\r\n          );\r\n          reject();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Documentation - getItemPermissionsAsync\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {Function} callback The callback function to execute after\r\n   *  obtaining permissions\r\n   */\r\n  function getItemPermissionsAsync(id) {\r\n    return new Promise((resolve, reject) => {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var oList = web.get_lists().getByTitle(self.config.def.title);\r\n      var camlQuery = new SP.CamlQuery();\r\n      camlQuery.set_viewXml(\r\n        '<View><Query><Where><Eq><FieldRef Name=\"ID\"/><Value Type=\"Text\">' +\r\n          id +\r\n          \"</Value></Eq></Where></Query></View>\"\r\n      );\r\n\r\n      var oListItems = oList.getItems(camlQuery);\r\n\r\n      currCtx.load(\r\n        oListItems,\r\n        \"Include(ID, HasUniqueRoleAssignments, RoleAssignments, RoleAssignments.Include(Member, RoleDefinitionBindings))\"\r\n      );\r\n\r\n      function onQuerySuccess() {\r\n        var listItemEnumerator = oListItems.getEnumerator();\r\n\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItem = listItemEnumerator.get_current();\r\n          var itemPermissions = new ItemPermissions({\r\n            hasUniqueRoleAssignments: oListItem.get_hasUniqueRoleAssignments(),\r\n            roles: [],\r\n          });\r\n\r\n          var roleEnumerator = oListItem.get_roleAssignments().getEnumerator();\r\n          // enumerate the roles\r\n          while (roleEnumerator.moveNext()) {\r\n            var roleColl = roleEnumerator.get_current();\r\n            const role = Role.fromJsomRole(roleColl);\r\n            // var principal = roleColl.get_member();\r\n\r\n            // const roleDef = {\r\n            //   principal: principalToPeople(principal),\r\n            //   permissions: [],\r\n            // };\r\n\r\n            // const roleDefBindingCollEnumerator = roleColl\r\n            //   .get_roleDefinitionBindings()\r\n            //   .getEnumerator();\r\n            // while (roleDefBindingCollEnumerator.moveNext()) {\r\n            //   const role = roleDefBindingCollEnumerator.get_current();\r\n            //   roleDef.permissions.push(role.get_name());\r\n            // }\r\n            itemPermissions.roles.push(role);\r\n          }\r\n          resolve(itemPermissions);\r\n          break;\r\n        }\r\n      }\r\n\r\n      function onQueryFailed(sender, args) {\r\n        reject(args.get_message());\r\n      }\r\n\r\n      const data = {\r\n        oListItems,\r\n        resolve,\r\n        reject,\r\n      };\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onQuerySuccess),\r\n        Function.createDelegate(data, onQueryFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getListPermissions() {\r\n    const url =\r\n      `/web/lists/getByTitle('${self.config.def.name}')` +\r\n      `?$select=HasUniqueRoleAssignments,RoleAssignments` +\r\n      `&$expand=RoleAssignments/Member,RoleAssignments/RoleDefinitionBindings`;\r\n\r\n    const headers = {\r\n      \"Cache-Control\": \"no-cache\",\r\n    };\r\n    const result = await fetchSharePointData(url, \"GET\", headers);\r\n\r\n    if (!result) return;\r\n\r\n    return ItemPermissions.fromRestResult(result.d);\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Folders          \r\n    ******************************************************************/\r\n\r\n  function getServerRelativeFolderPath(relFolderPath) {\r\n    let builtPath = sal.globalConfig.siteUrl;\r\n\r\n    builtPath += self.config.def.isLib\r\n      ? \"/\" + self.config.def.name\r\n      : \"/Lists/\" + self.config.def.name;\r\n\r\n    if (relFolderPath) {\r\n      builtPath += \"/\" + relFolderPath;\r\n    }\r\n\r\n    return builtPath;\r\n  }\r\n\r\n  function upsertFolderPathAsync(folderPath) {\r\n    return new Promise((resolve, reject) =>\r\n      upsertListFolderByPath(folderPath, resolve)\r\n    );\r\n  }\r\n\r\n  async function setFolderReadonlyAsync(folderPath) {\r\n    try {\r\n      const currentPerms = await getFolderPermissionsAsync(folderPath);\r\n\r\n      const targetPerms = currentPerms.map((user) => {\r\n        return [user.LoginName, sal.config.siteRoles.roles.RestrictedRead];\r\n      });\r\n      await setFolderPermissionsAsync(folderPath, targetPerms, true);\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n    return;\r\n  }\r\n\r\n  async function ensureFolderPermissionsAsync(relFolderPath, targetPerms) {\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const apiEndpoint =\r\n      sal.globalConfig.siteUrl +\r\n      `/_api/web/GetFolderByServerRelativeUrl('${serverRelFolderPath}')/` +\r\n      \"ListItemAllFields/RoleAssignments?$expand=Member,Member/Users,RoleDefinitionBindings\";\r\n\r\n    const response = await fetch(apiEndpoint, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json; odata=verbose\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      if (response.status == 404) {\r\n        return;\r\n      }\r\n      console.error(response);\r\n    }\r\n    const result = await response.json();\r\n    const permissionResults = result?.d?.results;\r\n    if (!permissionResults) {\r\n      console.warn(\"No results found\", result);\r\n      return;\r\n    }\r\n\r\n    const missingPerms = targetPerms.filter((targetPermPair) => {\r\n      const targetLoginName = targetPermPair[0];\r\n      const targetPerm = targetPermPair[1];\r\n      // find an existing matching permissiont\r\n      const permExists = permissionResults.find((curPerm) => {\r\n        // If the target user isn't the member\r\n        if (curPerm.Member.LoginName != targetLoginName) {\r\n          // Or the member is a group that the target user isn't in\r\n          if (\r\n            !curPerm.Member.Users?.results.find(\r\n              (curUser) => curUser.LoginName == targetLoginName\r\n            )\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // The target principal has permissions assigned, let see if they include the target permission\r\n        if (\r\n          curPerm.RoleDefinitionBindings.results?.find((curBinding) =>\r\n            sal.config.siteRoles.fulfillsRole(curBinding.Name, targetPerm)\r\n          )\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        // Finally, the target principal is assigned, but don't have the appropriate permissions\r\n        return false;\r\n      });\r\n\r\n      return !permExists;\r\n    });\r\n\r\n    console.log(\"Adding missing permissions\", missingPerms);\r\n    if (missingPerms.length)\r\n      await setFolderPermissionsAsync(relFolderPath, missingPerms, false);\r\n\r\n    return;\r\n  }\r\n  /*****************************************************************\r\n                            List Folders          \r\n    ******************************************************************/\r\n  function getFolderContentsAsync(relFolderPath, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      // TODO: everything is the same as getListItems except for the caml query\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n      camlQuery.set_folderServerRelativeUrl(serverRelFolderPath);\r\n      const allItems = oList.getItems(camlQuery);\r\n\r\n      currCtx.load(allItems, `Include(${fields.join(\", \")})`);\r\n\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const foundObjects = [];\r\n          var listItemEnumerator = allItems.getEnumerator();\r\n          while (listItemEnumerator.moveNext()) {\r\n            var oListItem = listItemEnumerator.get_current();\r\n            var listObj = {};\r\n            fields.forEach((field) => {\r\n              var colVal = oListItem.get_item(field);\r\n              //console.log(`SAL: Setting ${field} to`, colVal);\r\n              listObj[field] = Array.isArray(colVal)\r\n                ? colVal.map((val) => mapListItemToObject(val))\r\n                : mapListItemToObject(colVal);\r\n            });\r\n            //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n            listObj.oListItem = oListItem;\r\n            foundObjects.push(listObj);\r\n          }\r\n          resolve(foundObjects);\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load list folder contents:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderPermissionsAsync(relFolderPath) {\r\n    return new Promise(async (resolve, reject) => {\r\n      const oListItem = await getFolderItemByPath(relFolderPath);\r\n      if (!oListItem) {\r\n        reject(\"Folder item does not exist\");\r\n        return;\r\n      }\r\n      const roles = oListItem.get_roleAssignments();\r\n\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      currCtx.load(oListItem);\r\n      currCtx.load(roles);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const currCtx = new SP.ClientContext.get_current();\r\n          console.log(oListItem);\r\n          const principals = [];\r\n          const bindings = [];\r\n          const roleEnumerator = roles.getEnumerator();\r\n          // enumerate the roles\r\n          while (roleEnumerator.moveNext()) {\r\n            const role = roleEnumerator.get_current();\r\n            const principal = role.get_member();\r\n            const bindings = role.get_roleDefinitionBindings();\r\n            // get the principal\r\n            currCtx.load(bindings);\r\n            currCtx.load(principal);\r\n            principals.push({ principal: principal, bindings: bindings });\r\n          }\r\n          currCtx.executeQueryAsync(\r\n            // success\r\n            function (sender, args) {\r\n              // alert the title\r\n              //alert(principal.get_title());\r\n\r\n              const logins = principals.map(function ({ principal, bindings }) {\r\n                const principalRoles = [];\r\n                const bindingEnumerator = bindings.getEnumerator();\r\n                while (bindingEnumerator.moveNext()) {\r\n                  const binding = bindingEnumerator.get_current();\r\n                  principalRoles.push(binding.get_name());\r\n                }\r\n                return {\r\n                  ID: principal.get_id(),\r\n                  Title: principal.get_title(),\r\n                  LoginName: principal.get_loginName(),\r\n                  Roles: principalRoles,\r\n                };\r\n              });\r\n              resolve(logins);\r\n            },\r\n            // failure\r\n            function (sender, args) {\r\n              console.warn(\"Unable load folder principals permissions:\");\r\n              console.error(sender);\r\n              console.error(args);\r\n              reject(args);\r\n            }\r\n          );\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load folder permissions:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderItemByPath(relFolderPath) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      var camlq =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><And><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">1</Value>' +\r\n        \"</Eq><Eq>\" +\r\n        '<FieldRef Name=\"FileRef\"/><Value Type=\"Text\">' +\r\n        serverRelFolderPath +\r\n        \"</Value>\" +\r\n        \"</Eq></And></Where></Query><RowLimit>1</RowLimit></View>\";\r\n\r\n      camlQuery.set_viewXml(camlq);\r\n\r\n      const allFolders = oList.getItems(camlQuery);\r\n\r\n      async function onFindItemSucceeded() {\r\n        const foundObjects = [];\r\n        var listItemEnumerator = allFolders.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          // Should be only one item\r\n          const oListItem = listItemEnumerator.get_current();\r\n          foundObjects.push(oListItem);\r\n        }\r\n\r\n        if (!foundObjects) {\r\n          console.warn(\"folder not found\");\r\n          resolve(foundObjects);\r\n        }\r\n\r\n        if (foundObjects.length > 1) {\r\n          console.warn(\"Multiple folders found!\");\r\n          resolve(foundObjects);\r\n        }\r\n        const oListItem = foundObjects[0];\r\n        resolve(oListItem);\r\n      }\r\n\r\n      function onFindItemFailed(sender, args) {\r\n        console.warn(\"Unable load list folder contents:\");\r\n        console.error(sender);\r\n        console.error(args);\r\n        reject(args);\r\n      }\r\n      const data = {\r\n        allFolders,\r\n        resolve,\r\n        reject,\r\n      };\r\n      currCtx.load(allFolders);\r\n\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onFindItemSucceeded),\r\n        Function.createDelegate(data, onFindItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Document Libraries Folders\r\n    ******************************************************************/\r\n\r\n  /*****************************************************************\r\n                        Folder Creation          \r\n    ******************************************************************/\r\n\r\n  function upsertListFolderByPath(folderPath, callback) {\r\n    var folderArr = folderPath.split(\"/\");\r\n    var idx = 0;\r\n\r\n    var upsertListFolderInner = function (parentPath, folderArr, idx, success) {\r\n      var folderName = folderArr[idx];\r\n      idx++;\r\n      var curPath = folderArr.slice(0, idx).join(\"/\");\r\n      ensureListFolder(\r\n        curPath,\r\n        function (iFolder) {\r\n          if (idx >= folderArr.length) {\r\n            //We've reached the innermost folder and found it exists\r\n            success(iFolder.get_id());\r\n          } else {\r\n            upsertListFolderInner(curPath, folderArr, idx, success);\r\n          }\r\n        },\r\n        function () {\r\n          self.createListFolder(\r\n            folderName,\r\n            function (folderId) {\r\n              if (idx >= folderArr.length) {\r\n                //We've reached the innermost folder and found it exists\r\n                success(folderId);\r\n              } else {\r\n                upsertListFolderInner(curPath, folderArr, idx, success);\r\n              }\r\n            },\r\n            parentPath\r\n          );\r\n        }\r\n      );\r\n    };\r\n    upsertListFolderInner(\"\", folderArr, idx, callback);\r\n  }\r\n\r\n  /**\r\n   * CreateListFolder\r\n   * Creates a folder at the specified path\r\n   * @param {String} folderName\r\n   * @param {Function} callback\r\n   * @param {String} path\r\n   */\r\n  self.createListFolder = function (folderName, callback, path) {\r\n    path = path === undefined ? \"\" : path;\r\n\r\n    // Used for lists, duh\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n    let folderUrl = \"\";\r\n    const itemCreateInfo = new SP.ListItemCreationInformation();\r\n    itemCreateInfo.set_underlyingObjectType(SP.FileSystemObjectType.folder);\r\n    itemCreateInfo.set_leafName(folderName);\r\n    if (path) {\r\n      folderUrl =\r\n        sal.globalConfig.siteUrl +\r\n        \"/Lists/\" +\r\n        self.config.def.name +\r\n        \"/\" +\r\n        path;\r\n      itemCreateInfo.set_folderUrl(folderUrl);\r\n    }\r\n\r\n    const newItem = oList.addItem(itemCreateInfo);\r\n    newItem.set_item(\"Title\", folderName);\r\n\r\n    newItem.update();\r\n\r\n    function onCreateFolderSucceeded(sender, args) {\r\n      callback(this.newItem.get_id());\r\n    }\r\n\r\n    function onCreateFolderFailed(sender, args) {\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n\" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    const data = {\r\n      folderName: folderName,\r\n      callback: callback,\r\n      newItem: newItem,\r\n    };\r\n\r\n    currCtx.load(newItem);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateFolderSucceeded),\r\n      Function.createDelegate(data, onCreateFolderFailed)\r\n    );\r\n  };\r\n\r\n  function ensureListFolder(path, onExists, onNonExists) {\r\n    var folderUrl =\r\n      sal.globalConfig.siteUrl + \"/Lists/\" + self.config.def.name + \"/\" + path;\r\n\r\n    var ctx = SP.ClientContext.get_current();\r\n\r\n    // Could also call getFileByServerRelativeUrl() here. Doesn't matter.\r\n    // The way this works is identical for files and folders.\r\n    var folder = ctx.get_web().getFolderByServerRelativeUrl(folderUrl);\r\n    folder.get_listItemAllFields();\r\n    var data = {\r\n      folder: folder,\r\n      path: path,\r\n      onExists: onExists,\r\n      onNonExists: onNonExists,\r\n    };\r\n    ctx.load(folder, \"Exists\", \"Name\");\r\n\r\n    function onQueryFolderSucceeded() {\r\n      if (folder.get_exists()) {\r\n        // Folder exists and isn't hidden from us. Print its name.\r\n        console.log(\r\n          \"Folder \" + folder.get_name() + \" exists in \" + self.config.def.name\r\n        );\r\n        var currCtx = new SP.ClientContext.get_current();\r\n\r\n        var folderItem = folder.get_listItemAllFields();\r\n        function onQueryFolderItemSuccess() {\r\n          onExists(folderItem);\r\n        }\r\n        function onQueryFolderItemFailure(sender, args) {\r\n          console.error(\"Failed to find folder at \" + path, args);\r\n        }\r\n        data = { folderItem: folderItem, path: path, onExists: onExists };\r\n        currCtx.load(folderItem);\r\n        currCtx.executeQueryAsync(\r\n          Function.createDelegate(data, onQueryFolderItemSuccess),\r\n          Function.createDelegate(data, onQueryFolderItemFailure)\r\n        );\r\n      } else {\r\n        console.warn(\"Folder exists but is hidden (security-trimmed) for us.\");\r\n      }\r\n    }\r\n\r\n    function onQueryFolderFailed(sender, args) {\r\n      if (args.get_errorTypeName() === \"System.IO.FileNotFoundException\") {\r\n        // Folder doesn't exist at all.\r\n        console.log(\r\n          \"SAL.SPList.ensureListFolder: \\\r\n          Folder \" +\r\n            path +\r\n            \" does not exist in \" +\r\n            self.config.def.name\r\n        );\r\n        onNonExists();\r\n      } else {\r\n        // An unexpected error occurred.\r\n        console.error(\"Error: \" + args.get_message());\r\n      }\r\n    }\r\n    ctx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryFolderSucceeded),\r\n      Function.createDelegate(data, onQueryFolderFailed)\r\n    );\r\n  }\r\n\r\n  function setFolderPermissionsAsync(folderPath, valuePairs, reset) {\r\n    return new Promise((resolve, reject) => {\r\n      setFolderPermissions(folderPath, valuePairs, resolve, reset);\r\n    });\r\n  }\r\n\r\n  function setFolderPermissions(relFolderPath, valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n    // TODO: Validate that the users exist\r\n    var users = [];\r\n    var resolvedGroups = [];\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const folder = web.getFolderByServerRelativeUrl(serverRelFolderPath);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup?.oGroup) {\r\n        resolvedGroups.push([resolvedGroup.oGroup, vp[1]]);\r\n      } else {\r\n        //This doesn't appear to be a group, let's see if we can find a user\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindFolderSuccess() {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var folderItem = this.folder.get_listItemAllFields();\r\n      if (reset) {\r\n        folderItem.resetRoleInheritance();\r\n        folderItem.breakRoleInheritance(false, false);\r\n        folderItem\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        folderItem.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { folderItem: folderItem, callback: callback };\r\n\r\n      function onSetFolderPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        this.callback(folderItem);\r\n      }\r\n\r\n      function onSetFolderPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on item: \" +\r\n            this.folderItem.get_lookupValue() +\r\n            args.get_message() +\r\n            \"\\n\" +\r\n            args.get_stackTrace(),\r\n          false\r\n        );\r\n      }\r\n\r\n      currCtx.load(folderItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetFolderPermissionsSuccess),\r\n        Function.createDelegate(data, onSetFolderPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindFolderFailure(sender, args) {\r\n      console.error(\r\n        \"Something went wrong setting perms on library folder\",\r\n        args\r\n      );\r\n    }\r\n\r\n    var data = {\r\n      folder: folder,\r\n      users: users,\r\n      callback: callback,\r\n      resolvedGroups: resolvedGroups,\r\n      valuePairs: valuePairs,\r\n      reset: reset,\r\n    };\r\n\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.load(folder);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindFolderSuccess),\r\n      Function.createDelegate(data, onFindFolderFailure)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                                  \r\n  ******************************************************************/\r\n\r\n  function showModal(formName, title, args, callback) {\r\n    var id = \"\";\r\n    if (args.id) {\r\n      id = args.id;\r\n    }\r\n    const options = SP.UI.$create_DialogOptions();\r\n\r\n    var listPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    var rootFolder = \"\";\r\n\r\n    if (args.rootFolder) {\r\n      rootFolder = sal.globalConfig.siteUrl + listPath + args.rootFolder;\r\n    }\r\n\r\n    // WARNING: this looks similar to listPath but is different\r\n    var formsPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/forms/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    Object.assign(options, {\r\n      title: title,\r\n      dialogReturnValueCallback: callback,\r\n      args: JSON.stringify(args),\r\n      height: 800,\r\n      url:\r\n        sal.globalConfig.siteUrl +\r\n        formsPath +\r\n        formName +\r\n        \"?ID=\" +\r\n        id +\r\n        \"&Source=\" +\r\n        location.pathname +\r\n        \"&RootFolder=\" +\r\n        rootFolder,\r\n    });\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n\r\n    // SP.SOD.execute(\r\n    //   \"sp.ui.dialog.js\",\r\n    //   \"SP.UI.ModalDialog.showModalDialog\",\r\n    //   options\r\n    // );\r\n  }\r\n\r\n  function showCheckinModal(fileRef, callback) {\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"Check in Document\";\r\n    options.height = \"600\";\r\n    options.dialogReturnValueCallback = callback;\r\n\r\n    options.url =\r\n      sal.globalConfig.siteUrl +\r\n      \"/_layouts/checkin.aspx?List={\" +\r\n      self.config.guid +\r\n      \"}&FileName=\" +\r\n      fileRef;\r\n\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function checkinWithComment(fileRef, comment) {\r\n    const url = `/web/GetFileByServerRelativeUrl('${fileRef}')/CheckIn(comment='${comment}',checkintype=0)`;\r\n    return fetchSharePointData(url, \"POST\");\r\n  }\r\n\r\n  function showVersionHistoryModal(itemId) {\r\n    return new Promise((resolve) => {\r\n      var options = SP.UI.$create_DialogOptions();\r\n      options.title = \"Version History\";\r\n      options.height = \"600\";\r\n      options.dialogReturnValueCallback = resolve;\r\n\r\n      options.url = getVersionHistoryUrl(itemId);\r\n\r\n      SP.UI.ModalDialog.showModalDialog(options);\r\n    });\r\n  }\r\n\r\n  function getVersionHistoryUrl(itemId) {\r\n    return (\r\n      sal.globalConfig.siteUrl +\r\n      \"/_layouts/15/versions.aspx?List={\" +\r\n      self.config.guid +\r\n      \"}&ID=\" +\r\n      itemId\r\n    );\r\n  }\r\n\r\n  function uploadNewDocumentAsync(folderPath, title, args) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          //folder = folder != '/' ? folder : '';\r\n\r\n          var siteString =\r\n            sal.globalConfig.siteUrl == \"/\" ? \"\" : sal.globalConfig.siteUrl;\r\n\r\n          const options = SP.UI.$create_DialogOptions();\r\n          Object.assign(options, {\r\n            title: title,\r\n            dialogReturnValueCallback: resolve,\r\n            args: JSON.stringify(args),\r\n            url:\r\n              siteString +\r\n              \"/_layouts/Upload.aspx?List=\" +\r\n              oList.get_id().toString() +\r\n              \"&RootFolder=\" +\r\n              siteString +\r\n              \"/\" +\r\n              self.config.def.name +\r\n              \"/\" +\r\n              encodeURI(folderPath) +\r\n              \"&Source=\" +\r\n              location.pathname +\r\n              \"&args=\" +\r\n              encodeURI(JSON.stringify(args)),\r\n          });\r\n          //console.log(\"Options url: \" + options.url);\r\n          SP.UI.ModalDialog.showModalDialog(options);\r\n          // SP.SOD.execute(\r\n          //   \"sp.ui.dialog.js\",\r\n          //   \"SP.UI.ModalDialog.showModalDialog\",\r\n          //   options\r\n          // );\r\n        },\r\n        function (sender, args) {\r\n          console.error(\"Error showing file modal: \");\r\n          console.error(sender);\r\n          console.error(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  const UPLOADCHUNKSIZE = 10485760; // PnPJs\r\n  // const UPLOADCHUNKSIZE = 262144000; // SPO\r\n\r\n  const uploadchunkActionTypes = {\r\n    start: \"startupload\",\r\n    continue: \"continueupload\",\r\n    finish: \"finishupload\",\r\n  };\r\n\r\n  async function uploadFileRestChunking(\r\n    file,\r\n    relFolderPath,\r\n    fileName,\r\n    progress\r\n  ) {\r\n    /* https://sharepoint.stackexchange.com/questions/287334/upload-files-250mb-via-sharepoint-rest-api\r\nhttps://learn.microsoft.com/en-us/previous-versions/office/developer/sharepoint-rest-reference/dn450841(v=office.15)\r\n    */\r\n    const blob = file;\r\n    const chunkSize = UPLOADCHUNKSIZE;\r\n    const fileSize = file.size;\r\n\r\n    const totalBlocks =\r\n      parseInt((fileSize / chunkSize).toString(), 10) +\r\n      (fileSize % chunkSize === 0 ? 1 : 0);\r\n\r\n    const fileRef = relFolderPath + \"/\" + fileName;\r\n\r\n    const jobGuid = getGUID();\r\n    // const jobGuid = crypto.randomUUID\r\n    //   ? crypto.randomUUID()\r\n    //   : \"74493426-fb10-4e47-bc82-120954b81a60\";\r\n\r\n    let currentPointer;\r\n    progress({ currentBlock: 0, totalBlocks });\r\n    currentPointer = await startUpload(\r\n      jobGuid,\r\n      file.slice(0, chunkSize),\r\n      fileRef,\r\n      relFolderPath\r\n    );\r\n\r\n    for (let i = 2; i < totalBlocks; i++) {\r\n      progress({ currentBlock: i, totalBlocks });\r\n      currentPointer = await continueUpload(\r\n        jobGuid,\r\n        file.slice(currentPointer, currentPointer + chunkSize),\r\n        currentPointer,\r\n        fileRef\r\n      );\r\n    }\r\n\r\n    progress({ currentBlock: totalBlocks - 1, totalBlocks });\r\n    const result = await finishUpload(\r\n      jobGuid,\r\n      file.slice(currentPointer),\r\n      currentPointer,\r\n      fileRef\r\n    );\r\n\r\n    progress({ currentBlock: totalBlocks, totalBlocks });\r\n\r\n    return result;\r\n  }\r\n\r\n  async function startUpload(uploadId, chunk, fileRef, relFolderPath) {\r\n    const url =\r\n      `/web/getFolderByServerRelativeUrl(@folder)/files/getByUrlOrAddStub(@file)/StartUpload(guid'${uploadId}')?` +\r\n      `&@folder='${relFolderPath}'&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.StartUpload);\r\n  }\r\n\r\n  async function continueUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/ContinueUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.ContinueUpload);\r\n  }\r\n\r\n  async function finishUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/FinishUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  async function uploadFileRest(file, relFolderPath, fileName) {\r\n    return await fetch(\r\n      _spPageContextInfo.webServerRelativeUrl +\r\n        `/_api/web/GetFolderByServerRelativeUrl('${relFolderPath}')/Files/add(url='${fileName}',overwrite=true)`,\r\n      {\r\n        method: \"POST\",\r\n        credentials: \"same-origin\",\r\n        body: file,\r\n        headers: {\r\n          Accept: \"application/json; odata=verbose\",\r\n          \"Content-Type\": \"application/json;odata=nometadata\",\r\n          \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Uploading File\", response);\r\n        return;\r\n      }\r\n\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  async function uploadFileToFolderAndUpdateMetadata(\r\n    file,\r\n    fileName,\r\n    relFolderPath,\r\n    payload,\r\n    progress = null\r\n  ) {\r\n    if (!progress) {\r\n      progress = () => {};\r\n    }\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n    let result = null;\r\n    if (file.size > UPLOADCHUNKSIZE) {\r\n      const job = () =>\r\n        uploadFileRestChunking(file, serverRelFolderPath, fileName, progress);\r\n      result = await uploadQueue.addJob(job);\r\n    } else {\r\n      progress({ currentBlock: 0, totalBlocks: 1 });\r\n      result = await uploadFileRest(file, serverRelFolderPath, fileName);\r\n      progress({ currentBlock: 1, totalBlocks: 1 });\r\n    }\r\n\r\n    await updateUploadedFileMetadata(result.d, payload);\r\n\r\n    // check in\r\n    await checkinWithComment(serverRelFolderPath + \"/\" + fileName, \"\");\r\n\r\n    let itemUri = result.d.ListItemAllFields.__deferred.uri + \"?$select=ID\";\r\n\r\n    const listItem = await fetchSharePointData(itemUri);\r\n    return listItem.d.ID;\r\n  }\r\n\r\n  async function updateUploadedFileMetadata(fileResult, payload) {\r\n    var result = await fetch(fileResult.ListItemAllFields.__deferred.uri, {\r\n      method: \"POST\",\r\n      credentials: \"same-origin\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        Accept: \"application/json; odata=nometadata\",\r\n        \"Content-Type\": \"application/json;odata=nometadata\",\r\n        \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        \"X-HTTP-Method\": \"MERGE\",\r\n        \"If-Match\": \"*\",\r\n      },\r\n    }).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Updating File\", response);\r\n        return;\r\n      }\r\n\r\n      return response;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function copyFiles(sourceFolderPath, destFolderPath, callback, onError) {\r\n    const sourcePath = getServerRelativeFolderPath(sourceFolderPath);\r\n    const destPath = getServerRelativeFolderPath(destFolderPath);\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourcePath);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destPath + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \") + args.get_message();\r\n            onError;\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.error(\"Unable to copy files: \", args.get_message());\r\n        console.error(sender);\r\n        console.error(args);\r\n        reject(args);\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    // TODO: this should stay as a static utility instead of list specific\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n\r\n  // Ensure List/Library exists on the site\r\n  async function ensureList() {\r\n    // Query List Title\r\n    const listInfo = await fetchSharePointData(\r\n      `/web/lists/GetByTitle('${self.config.def.title}')`\r\n    );\r\n  }\r\n\r\n  const publicMembers = {\r\n    findByIdAsync,\r\n    getById,\r\n    findByColumnValueAsync,\r\n    loadNextPage,\r\n    getListItemsAsync,\r\n    createListItemAsync,\r\n    updateListItemAsync,\r\n    deleteListItemAsync,\r\n    setItemPermissionsAsync,\r\n    getItemPermissionsAsync,\r\n    getListPermissions,\r\n    setListPermissionsAsync,\r\n    getFolderContentsAsync,\r\n    upsertFolderPathAsync,\r\n    getServerRelativeFolderPath,\r\n    setFolderReadonlyAsync,\r\n    setFolderPermissionsAsync,\r\n    ensureFolderPermissionsAsync,\r\n    uploadFileToFolderAndUpdateMetadata,\r\n    uploadNewDocumentAsync,\r\n    copyFilesAsync,\r\n    showModal,\r\n    showCheckinModal,\r\n    showVersionHistoryModal,\r\n    getVersionHistoryUrl,\r\n  };\r\n\r\n  return publicMembers;\r\n}\r\n\r\nasync function fetchSharePointData(\r\n  uri,\r\n  method = \"GET\",\r\n  headers = {},\r\n  opts = {}\r\n) {\r\n  const siteEndpoint = uri.startsWith(\"http\")\r\n    ? uri\r\n    : sal.globalConfig.siteUrl + \"/_api\" + uri;\r\n  const response = await fetch(siteEndpoint, {\r\n    method,\r\n    headers: {\r\n      Accept: \"application/json; odata=verbose\",\r\n      \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n      ...headers,\r\n    },\r\n    ...opts,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    if (response.status == 404) {\r\n      return;\r\n    }\r\n    console.error(response);\r\n  }\r\n  try {\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (e) {\r\n    return;\r\n  }\r\n}\r\n\r\nasync function getRequestDigest() {\r\n  const response = await fetch(sal.globalConfig.siteUrl + \"/_api/contextinfo\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json; odata=verbose\",\r\n    },\r\n  });\r\n\r\n  if (!response.ok) {\r\n    console.error(\"Cannot refresh token\", response);\r\n    return;\r\n  }\r\n  const result = await response.json();\r\n  return result.d.GetContextWebInformation;\r\n}\r\n\r\nasync function refreshDigestValue() {\r\n  const result = await getRequestDigest();\r\n\r\n  if (!result) return;\r\n\r\n  document.getElementById(\"__REQUESTDIGEST\").value = result.FormDigestValue;\r\n\r\n  // Refresh before timeout\r\n  window.setTimeout(refreshDigestValue, result.FormDigestTimeoutSeconds * 900);\r\n}\r\nrefreshDigestValue();\r\n\r\nwindow.fetchSharePointData = fetchSharePointData;\r\n\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* eslint-disable no-bitwise */\r\nfunction getGUID() {\r\n  if (crypto.randomUUID) return crypto.randomUUID();\r\n\r\n  let d = Date.now();\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    const r = (d + Math.random() * 16) % 16 | 0;\r\n    d = Math.floor(d / 16);\r\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n  });\r\n}\r\n\r\nclass UploadQueue {\r\n  constructor() {}\r\n\r\n  jobs = [];\r\n  _queue = [];\r\n\r\n  enqueue(job) {\r\n    this._queue.push(job);\r\n  }\r\n\r\n  async dequeue() {\r\n    this._queue.shift();\r\n  }\r\n\r\n  async doWork() {\r\n    const job = await this.dequeue();\r\n  }\r\n\r\n  addJob(job) {\r\n    return new Promise((resolve) => {\r\n      this.enqueue(job);\r\n    });\r\n  }\r\n}\r\n\r\nclass JobProcessor {\r\n  constructor(maxConcurrency) {\r\n    this.maxConcurrency = maxConcurrency;\r\n    this.runningJobs = 0;\r\n    this.queue = [];\r\n  }\r\n\r\n  addJob(asyncFunction) {\r\n    return new Promise((resolve, reject) => {\r\n      const job = async () => {\r\n        try {\r\n          const result = await asyncFunction();\r\n          resolve(result);\r\n        } catch (error) {\r\n          reject(error);\r\n        } finally {\r\n          this.runningJobs--;\r\n          this.processQueue();\r\n        }\r\n      };\r\n\r\n      this.queue.push(job);\r\n      this.processQueue();\r\n    });\r\n  }\r\n\r\n  processQueue() {\r\n    while (this.runningJobs < this.maxConcurrency && this.queue.length > 0) {\r\n      const job = this.queue.shift();\r\n      this.runningJobs++;\r\n      job();\r\n    }\r\n  }\r\n}\r\n\r\nconst uploadQueue = new JobProcessor(5);\r\n", "export const assetsPath = `${_spPageContextInfo.siteServerRelativeUrl}/Style Library/apps/audit/src`;\r\n", "import { People } from \"../entities/index.js\";\r\nimport { ensureUserByKeyAsync } from \"./index.js\";\r\nimport { assetsPath } from \"../../env.js\";\r\n\r\nko.subscribable.fn.subscribeChanged = function (callback) {\r\n  var oldValue;\r\n  this.subscribe(\r\n    function (_oldValue) {\r\n      oldValue = _oldValue;\r\n    },\r\n    this,\r\n    \"beforeChange\"\r\n  );\r\n\r\n  this.subscribe(function (newValue) {\r\n    callback(newValue, oldValue);\r\n  });\r\n};\r\n\r\nko.observableArray.fn.subscribeAdded = function (callback) {\r\n  this.subscribe(\r\n    function (arrayChanges) {\r\n      const addedValues = arrayChanges\r\n        .filter((value) => value.status == \"added\")\r\n        .map((value) => value.value);\r\n      callback(addedValues);\r\n    },\r\n    this,\r\n    \"arrayChange\"\r\n  );\r\n};\r\n\r\nko.bindingHandlers.searchSelect = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {\r\n    const { options, selectedOptions, optionsText, onSearchInput } =\r\n      valueAccessor();\r\n\r\n    function populateOpts() {\r\n      const optionItems = ko.unwrap(options);\r\n\r\n      const selectedOpts = ko.unwrap(selectedOptions) ?? [];\r\n\r\n      const optionElements = optionItems.map((option) => {\r\n        const optionElement = document.createElement(\"option\");\r\n        ko.selectExtensions.writeValue(optionElement, ko.unwrap(option));\r\n        // optionElement.value = option;\r\n        optionElement.innerText = optionsText(option);\r\n\r\n        if (\r\n          selectedOpts?.find((selectedOption) => {\r\n            if (option.ID && selectedOption.ID == option.ID) return true;\r\n            if (option == selectedOption) return true;\r\n            return false;\r\n          })\r\n        ) {\r\n          optionElement.setAttribute(\"selected\", \"\");\r\n        }\r\n        return optionElement;\r\n      });\r\n\r\n      element.append(...optionElements);\r\n    }\r\n\r\n    populateOpts();\r\n\r\n    if (ko.isObservable(options)) {\r\n      options.subscribe(() => populateOpts(), this);\r\n    }\r\n\r\n    ko.utils.registerEventHandler(element, \"change\", (e) => {\r\n      selectedOptions(\r\n        element.selectedOptions.map((opt) => ko.selectExtensions.readValue(opt))\r\n      );\r\n    });\r\n\r\n    if (onSearchInput) {\r\n      ko.utils.registerEventHandler(element, \"input\", (e) => {\r\n        onSearchInput(e.originalEvent.target.searchInputElement.value);\r\n      });\r\n    }\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const { selectedOptions } = valueAccessor();\r\n    const selectedUnwrapped = ko.unwrap(selectedOptions);\r\n\r\n    for (var i = 0; i < element.options.length; i++) {\r\n      const o = element.options[i];\r\n      o.toggleAttribute(\r\n        \"selected\",\r\n        selectedUnwrapped.includes(ko.selectExtensions.readValue(o))\r\n      );\r\n    }\r\n\r\n    // element.selectedOptions = ko.unwrap(selectedOptions);\r\n  },\r\n};\r\n\r\nko.bindingHandlers.people = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {\r\n    var schema = {};\r\n    schema[\"PrincipalAccountType\"] = \"User\";\r\n    schema[\"SearchPrincipalSource\"] = 15;\r\n    schema[\"ShowUserPresence\"] = true;\r\n    schema[\"ResolvePrincipalSource\"] = 15;\r\n    schema[\"AllowEmailAddresses\"] = true;\r\n    schema[\"AllowMultipleValues\"] = false;\r\n    schema[\"MaximumEntitySuggestions\"] = 50;\r\n    //schema[\"Width\"] = \"280px\";\r\n    schema[\"OnUserResolvedClientScript\"] = async function (elemId, userKeys) {\r\n      //  get reference of People Picker Control\r\n      var pickerControl = SPClientPeoplePicker.SPClientPeoplePickerDict[elemId];\r\n      var observable = valueAccessor();\r\n      var userJSObject = pickerControl.GetControlValueAsJSObject()[0];\r\n      if (!userJSObject) {\r\n        observable(null);\r\n        return;\r\n      }\r\n\r\n      if (userJSObject.IsResolved) {\r\n        if (userJSObject.Key == observable()?.LoginName) return;\r\n        var user = await ensureUserByKeyAsync(userJSObject.Key);\r\n        var person = new People(user);\r\n        observable(person);\r\n      }\r\n    };\r\n\r\n    // TODO: Minor - accept schema settings as options\r\n    //var mergedOptions = Object.assign(schema, obs.schemaOpts);\r\n\r\n    //  Initialize the Control, MS enforces to pass the Element ID hence we need to provide\r\n    //  ID to our element, no other options\r\n    SPClientPeoplePicker_InitStandaloneControlWrapper(element.id, null, schema);\r\n    // const helpDiv = document.createElement(\"div\");\r\n    // helpDiv.innerHTML = \"Search surname first e.g. Smith, John\";\r\n    // helpDiv.classList.add(\"fst-italic\", \"fw-lighter\");\r\n    // element.appendChild(helpDiv);\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    var pickerControl =\r\n      SPClientPeoplePicker.SPClientPeoplePickerDict[element.id + \"_TopSpan\"];\r\n    var userValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n    if (!userValue) {\r\n      // Clear the form\r\n      pickerControl?.DeleteProcessedUser();\r\n      return;\r\n    }\r\n\r\n    if (\r\n      userValue &&\r\n      !pickerControl\r\n        .GetAllUserInfo()\r\n        .find((pickerUser) => pickerUser.DisplayText == userValue.LookupValue)\r\n    ) {\r\n      pickerControl.AddUserKeys(\r\n        userValue.LoginName ?? userValue.LookupValue ?? userValue.Title\r\n      );\r\n    }\r\n  },\r\n};\r\n\r\nko.bindingHandlers.dateField = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {},\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {},\r\n};\r\n\r\nko.bindingHandlers.downloadLink = {\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    var path = valueAccessor();\r\n    var replaced = path.replace(/:([A-Za-z_]+)/g, function (_, token) {\r\n      return ko.unwrap(viewModel[token]);\r\n    });\r\n    element.href = replaced;\r\n  },\r\n};\r\n\r\nko.bindingHandlers.files = {\r\n  init: function (element, valueAccessor) {\r\n    function addFiles(fileList) {\r\n      var value = valueAccessor();\r\n      if (!fileList.length) {\r\n        value.removeAll();\r\n        return;\r\n      }\r\n\r\n      const existingFiles = ko.unwrap(value);\r\n      const newFileList = [];\r\n      for (let file of fileList) {\r\n        if (!existingFiles.find((exFile) => exFile.name == file.name))\r\n          newFileList.push(file);\r\n      }\r\n      ko.utils.arrayPushAll(value, newFileList);\r\n      return;\r\n    }\r\n\r\n    ko.utils.registerEventHandler(element, \"change\", function () {\r\n      addFiles(element.files);\r\n    });\r\n\r\n    const label = element.closest(\"label\");\r\n    if (!label) return;\r\n\r\n    ko.utils.registerEventHandler(label, \"dragover\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragenter\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.add(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragleave\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.remove(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"drop\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let dt = event.originalEvent.dataTransfer;\r\n      let files = dt.files;\r\n      addFiles(files);\r\n    });\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const value = valueAccessor();\r\n    if (!value().length && element.files.length) {\r\n      // clear all files\r\n      element.value = null;\r\n      return;\r\n    }\r\n\r\n    return;\r\n  },\r\n};\r\n\r\nko.bindingHandlers.toggleClick = {\r\n  init: function (element, valueAccessor, allBindings) {\r\n    var value = valueAccessor();\r\n\r\n    ko.utils.registerEventHandler(element, \"click\", function () {\r\n      var classToToggle = allBindings.get(\"toggleClass\");\r\n      var classContainer = allBindings.get(\"classContainer\");\r\n      var containerType = allBindings.get(\"containerType\");\r\n\r\n      if (containerType && containerType == \"sibling\") {\r\n        $(element)\r\n          .nextUntil(classContainer)\r\n          .each(function () {\r\n            $(this).toggleClass(classToToggle);\r\n          });\r\n      } else if (containerType && containerType == \"doc\") {\r\n        var curIcon = $(element).attr(\"src\");\r\n        if (curIcon == \"/_layouts/images/minus.gif\")\r\n          $(element).attr(\"src\", \"/_layouts/images/plus.gif\");\r\n        else $(element).attr(\"src\", \"/_layouts/images/minus.gif\");\r\n\r\n        if ($(element).parent() && $(element).parent().parent()) {\r\n          $(element)\r\n            .parent()\r\n            .parent()\r\n            .nextUntil(classContainer)\r\n            .each(function () {\r\n              $(this).toggleClass(classToToggle);\r\n            });\r\n        }\r\n      } else if (containerType && containerType == \"any\") {\r\n        if ($(\".\" + classToToggle).is(\":visible\"))\r\n          $(\".\" + classToToggle).hide();\r\n        else $(\".\" + classToToggle).show();\r\n      } else $(element).find(classContainer).toggleClass(classToToggle);\r\n    });\r\n  },\r\n};\r\n\r\nko.bindingHandlers.toggles = {\r\n  init: function (element, valueAccessor) {\r\n    var value = valueAccessor();\r\n\r\n    ko.utils.registerEventHandler(element, \"click\", function () {\r\n      value(!value());\r\n    });\r\n  },\r\n};\r\n\r\nconst fromPathTemplateLoader = {\r\n  loadTemplate: function (name, templateConfig, callback) {\r\n    if (templateConfig.fromPath) {\r\n      // TODO: Minor - fix error catching and fallback flow\r\n      fetch(assetsPath + templateConfig.fromPath)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\r\n              `Error Fetching HTML Template - ${response.statusText}`\r\n            );\r\n          }\r\n          return response.text();\r\n        })\r\n        .catch((error) => {\r\n          if (!templateConfig.fallback) return;\r\n          console.warn(\r\n            \"Primary template not found, attempting fallback\",\r\n            templateConfig\r\n          );\r\n          fetch(assetsPath + templateConfig.fallback)\r\n            .then((response) => {\r\n              if (!response.ok) {\r\n                throw new Error(\r\n                  `Error Fetching fallback HTML Template - ${response.statusText}`\r\n                );\r\n              }\r\n              return response.text();\r\n            })\r\n            .then((text) =>\r\n              ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            );\r\n        })\r\n        .then((text) =>\r\n          text\r\n            ? ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            : null\r\n        );\r\n    } else {\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathTemplateLoader);\r\n\r\nconst fromPathViewModelLoader = {\r\n  loadViewModel: function (name, viewModelConfig, callback) {\r\n    if (viewModelConfig.viaLoader) {\r\n      // console.log(\"loading module\", name);\r\n      const module = import(assetsPath + viewModelConfig.viaLoader).then(\r\n        (module) => {\r\n          // console.log(\"imported module\", name);\r\n          const viewModelConstructor = module.default;\r\n          // We need a createViewModel function, not a plain constructor.\r\n          // We can use the default loader to convert to the\r\n          // required format.\r\n          ko.components.defaultLoader.loadViewModel(\r\n            name,\r\n            viewModelConstructor,\r\n            callback\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      // Unrecognized config format. Let another loader handle it.\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathViewModelLoader);\r\n", "export const html = String.raw;\r\n\r\nexport function registerComponent({\r\n  name,\r\n  folder,\r\n  module = null,\r\n  moduleFilename = null,\r\n  template: templateFilename,\r\n}) {\r\n  if (ko.components.isRegistered(name)) {\r\n    return;\r\n  }\r\n  if (moduleFilename || module) {\r\n    ko.components.register(name, {\r\n      template: {\r\n        fromPath: `/components/${folder}/${templateFilename}.html`,\r\n      },\r\n      viewModel: module ?? {\r\n        viaLoader: `/components/${folder}/${moduleFilename}.js`,\r\n      },\r\n    });\r\n  } else {\r\n    ko.components.register(name, {\r\n      template: {\r\n        fromPath: `/components/${folder}/${templateFilename}.html`,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport function directRegisterComponent(name, { template, viewModel = null }) {\r\n  ko.components.register(name, {\r\n    template,\r\n    viewModel,\r\n  });\r\n}\r\n\r\nexport function registerFieldComponent({\r\n  name,\r\n  components,\r\n  viewModel = null,\r\n  folder = null,\r\n}) {\r\n  // register both our view and edit\r\n  folder = folder ?? name;\r\n\r\n  Object.keys(components).map((view) => {\r\n    const componentName = components[view];\r\n    if (ko.components.isRegistered(componentName)) {\r\n      return;\r\n    }\r\n\r\n    // See if we already have this element in the dom\r\n    const elementName = `field-` + componentName;\r\n    const fieldViewElement = document.getElementById(elementName);\r\n\r\n    if (!viewModel) {\r\n      debugger;\r\n    }\r\n    ko.components.register(componentName, {\r\n      template: fieldViewElement\r\n        ? {\r\n            element: fieldViewElement,\r\n          }\r\n        : {\r\n            fromPath: `/sal/components/fields/${folder}/${name}${view}.html`,\r\n          },\r\n      viewModel: viewModel ?? {\r\n        viaLoader: `/sal/components/fields/${folder}/${name}Module.js`,\r\n      },\r\n    });\r\n  });\r\n}\r\n", "import { executeQuery } from \"../sal/infrastructure/index.js\";\r\n\r\nexport async function getAllItems(listTitle, fields = null) {\r\n  let listItemsResults = [];\r\n  let listItems;\r\n\r\n  const currCtx = new SP.ClientContext.get_current();\r\n  const web = currCtx.get_web();\r\n\r\n  const list = web.get_lists().getByTitle(listTitle);\r\n\r\n  const viewFields = viewFieldsStringBuilder(fields);\r\n\r\n  const camlQuery = new SP.CamlQuery();\r\n  camlQuery.set_viewXml(\r\n    `<View Scope=\"RecursiveAll\"><Query></Query><RowLimit>5000</RowLimit>${viewFields}</View>`\r\n  );\r\n\r\n  let position = new SP.ListItemCollectionPosition();\r\n  position.set_pagingInfo(\"Paged=TRUE\");\r\n\r\n  while (position != null) {\r\n    console.log(\"Legacy Helper - getAllItems\", listTitle, position);\r\n    camlQuery.set_listItemCollectionPosition(position);\r\n\r\n    listItems = list.getItems(camlQuery);\r\n\r\n    currCtx.load(listItems);\r\n\r\n    await executeQuery(currCtx).catch((sender, args) => {\r\n      console.warn(sender);\r\n    });\r\n\r\n    const listEnumerator = listItems.getEnumerator();\r\n    while (listEnumerator.moveNext()) {\r\n      listItemsResults.push(listEnumerator.get_current());\r\n    }\r\n\r\n    position = listItems.get_listItemCollectionPosition();\r\n  }\r\n\r\n  return listItemsResults;\r\n}\r\n\r\nfunction viewFieldsStringBuilder(fields) {\r\n  if (!fields) return \"\";\r\n  return `\r\n  <ViewFields>${fields.map(\r\n    (field) => `<FieldRef Name=\"${field}\"></FieldRef>`\r\n  )}</ViewFields>\r\n  `;\r\n}\r\n", "\uFEFFwindow.Audit = window.Audit || {};\r\nAudit.Common = Audit.Common || {};\r\n\r\nvar loadStart;\r\nfunction InitReport() {\r\n  loadStart = new Date();\r\n  Audit.Common.Utilities = new Audit.Common.NewUtilities();\r\n  Audit.Common.Init();\r\n}\r\n\r\nAudit.Common.Init = function () {};\r\n\r\nAudit.Common.NewUtilities = function () {\r\n  var m_siteUrl = _spPageContextInfo.webServerRelativeUrl; //IE11 in sp 2013 does not recognize L_Menu_BaseUrl\r\n\r\n  var m_listTitleRequests = \"AuditRequests\";\r\n  var m_listNameRequests = \"AuditRequests\";\r\n\r\n  var m_listTitleRequestsInternal = \"AuditRequestsInternal\";\r\n  var m_listNameRequestsInternal = \"AuditRequestsInternal\";\r\n\r\n  var m_listTitleResponses = \"AuditResponses\";\r\n  var m_listNameResponses = \"AuditResponses\";\r\n\r\n  var m_libTitleRequestDocs = \"AuditRequestDocs\";\r\n  var m_libNameRequestDocs = \"AuditRequestDocs\";\r\n\r\n  var m_libTitleCoverSheet = \"AuditCoverSheets\";\r\n  var m_libNameCoverSheet = \"AuditCoverSheets\";\r\n\r\n  var m_libTitleResponseDocs = \"AuditResponseDocs\";\r\n  var m_libNameResponseDocs = \"AuditResponseDocs\";\r\n\r\n  var m_libTitleResponseDocsEA = \"AuditResponseDocsRO\";\r\n  var m_libNameResponseDocsEA = \"AuditResponseDocsRO\";\r\n\r\n  var m_listTitleActionOffices = \"AuditOrganizations\";\r\n  var m_listNameActionOffices = \"AuditOrganizations\";\r\n\r\n  var m_listTitleEmailHistory = \"AuditEmails\";\r\n  var m_listNameEmailHistory = \"AuditEmails\";\r\n\r\n  var m_listTitleBulkResponses = \"AuditBulkResponses\";\r\n  var m_listNameBulkResponses = \"AuditBulkResponses\";\r\n\r\n  var m_listTitleBulkPermissions = \"AuditBulkPermissions\";\r\n  var m_listNameBulkPermissions = \"AuditBulkPermissions\";\r\n\r\n  var m_groupNameSpecialPermName1 = \"CGFS Special Access1\";\r\n  var m_groupNameSpecialPermName2 = \"CGFS Special Access2\";\r\n  var m_groupNameQA = \"Quality Assurance\";\r\n  var m_groupNameEA = \"External Auditors\";\r\n\r\n  var m_libResponseDocsLibraryGUID = null;\r\n\r\n  var m_arrSiteGroups = null;\r\n  var m_arrAOs = null;\r\n  /**\r\n   * Reloads the page, trys to preserve current path\r\n   * @param {bool} hard flag to remove all url params\r\n   * @returns\r\n   */\r\n  function m_fnRefresh(hard = false) {\r\n    if (hard) {\r\n      location.href = location.pathname;\r\n      return;\r\n    }\r\n    var curPath = location.pathname;\r\n\r\n    if ($(\"#tabs\").html() != null && $(\"#tabs\").html() != \"\") {\r\n      var tabIndex = 0;\r\n      try {\r\n        tabIndex = $(\"#tabs\").tabs(\"option\", \"active\");\r\n      } catch (ex) {}\r\n\r\n      curPath += \"?Tab=\" + tabIndex;\r\n\r\n      if (tabIndex == 0 && $(\"#ddlResponseName\").val() != \"\") {\r\n        curPath += \"&ResNum=\" + $(\"#ddlResponseName\").val();\r\n      } else if (tabIndex == 1) {\r\n        var responseNumOpen = $(\"#ddlResponsesOpen\").val();\r\n        var responseNumProcessed = $(\"#ddlResponsesProcessed\").val();\r\n\r\n        if (responseNumOpen != null && responseNumOpen != \"\")\r\n          curPath += \"&ResNum=\" + responseNumOpen;\r\n        else if (responseNumProcessed != null && responseNumProcessed != \"\")\r\n          curPath += \"&ResNum=\" + responseNumProcessed;\r\n      }\r\n\r\n      location.href = curPath;\r\n    } else {\r\n      location.reload();\r\n    }\r\n  }\r\n\r\n  function m_fnOnLoadDisplayTimeStamp() {\r\n    var curDate = new Date();\r\n    const loadTime = (curDate - loadStart) / 1000;\r\n    document.getElementById(\r\n      \"divLoading\"\r\n    ).innerHTML = `Loaded at ${curDate.format(\"MM/dd/yyyy hh:mm tt\")}<br/>\r\n    Load time: ${loadTime + \"s\"}\r\n    `;\r\n  }\r\n\r\n  function m_fnOnLoadDisplayTabAndResponse() {\r\n    var paramTabIndex = GetUrlKeyValue(\"Tab\");\r\n    if (paramTabIndex != null && paramTabIndex != \"\") {\r\n      $(\"#tabs\").tabs(\"option\", \"active\", paramTabIndex);\r\n    }\r\n\r\n    var bFiltered = false;\r\n\r\n    var paramResponseNum = GetUrlKeyValue(\"ResNum\");\r\n    if (paramResponseNum != null && paramResponseNum != \"\") {\r\n      if (paramTabIndex == 0) {\r\n        if (\r\n          $(\"#ddlResponseName option[value='\" + paramResponseNum + \"']\")\r\n            .length > 0\r\n        ) {\r\n          $(\"#ddlResponseName\").val(paramResponseNum).change();\r\n          bFiltered = true;\r\n        }\r\n      } else {\r\n        if (\r\n          $(\"#ddlResponsesOpen option[value='\" + paramResponseNum + \"']\")\r\n            .length > 0\r\n        ) {\r\n          $(\"#ddlResponsesOpen\").val(paramResponseNum).change();\r\n        } else if (\r\n          $(\"#ddlResponsesProcessed option[value='\" + paramResponseNum + \"']\")\r\n            .length > 0\r\n        ) {\r\n          $(\"#ddlResponsesProcessed\").val(paramResponseNum).change();\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!bFiltered) {\r\n      $(\".sr-response-item\").show(); //hiding rows by default\r\n    }\r\n  }\r\n\r\n  function m_fnOnLoadFilterResponses(responseStatus1, responseStatus2) {\r\n    var count = 0;\r\n    var cntOpen = 0;\r\n    var cntReOpened = 0;\r\n    var resStatus1 = 0;\r\n    var resStatus2 = 0;\r\n\r\n    var eacher = $(\".sr-response-item\");\r\n\r\n    eacher.each(function () {\r\n      var reqStatus = $.trim($(this).find(\".sr-response-requestStatus\").text());\r\n      var resStatus = $.trim($(this).find(\".sr-response-status\").text());\r\n\r\n      if (\r\n        (resStatus == responseStatus1 || resStatus == responseStatus2) &&\r\n        (reqStatus == \"Open\" || reqStatus == \"ReOpened\")\r\n      ) {\r\n        $(this).addClass(\"highlighted\");\r\n        count++;\r\n\r\n        if (resStatus == responseStatus1) resStatus1++;\r\n        else if (resStatus == responseStatus2) resStatus2++;\r\n\r\n        if (reqStatus == \"Open\") cntOpen++;\r\n        else if (reqStatus == \"ReOpened\") cntReOpened++;\r\n      }\r\n    });\r\n\r\n    if (count > 0) {\r\n      $(\"#lblStatusReportResponsesMsg\").html(\r\n        \"<span class='ui-icon ui-icon-alert'></span>There are \" +\r\n          count +\r\n          \" Responses pending your review\"\r\n      );\r\n\r\n      if (resStatus1 > 0 && resStatus2 == 0)\r\n        $(\"#ddlResponseStatus\").val(responseStatus1).change();\r\n      else if (resStatus2 > 0 && resStatus1 == 0)\r\n        $(\"#ddlResponseStatus\").val(responseStatus2).change();\r\n    } else\r\n      $(\"#lblStatusReportResponsesMsg\").html(\r\n        \"<span class='ui-icon ui-icon-circle-check'></span>There are 0 Responses pending your review\"\r\n      );\r\n  }\r\n\r\n  function m_fnLoadSiteGroups(itemColl) {\r\n    m_arrSiteGroups = new Array();\r\n\r\n    var listItemEnumerator = itemColl.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var oListItem = listItemEnumerator.get_current();\r\n\r\n      var id = oListItem.get_id();\r\n      var loginName = oListItem.get_loginName();\r\n      var title = oListItem.get_title();\r\n\r\n      var groupObject = new Object();\r\n      groupObject[\"ID\"] = id;\r\n      groupObject[\"loginName\"] = loginName;\r\n      groupObject[\"title\"] = title;\r\n      groupObject[\"group\"] = oListItem;\r\n\r\n      m_arrSiteGroups.push(groupObject);\r\n    }\r\n  }\r\n\r\n  function m_fnGetSPSiteGroup(groupName) {\r\n    var userGroup = null;\r\n    if (m_arrSiteGroups != null) {\r\n      for (var x = 0; x < m_arrSiteGroups.length; x++) {\r\n        if (m_arrSiteGroups[x].title == groupName) {\r\n          userGroup = m_arrSiteGroups[x].group;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return userGroup;\r\n  }\r\n\r\n  function m_fnLoadActionOffices(itemColl) {\r\n    m_arrAOs = new Array();\r\n\r\n    var listItemEnumerator = itemColl.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var oListItem = listItemEnumerator.get_current();\r\n\r\n      var id = oListItem.get_item(\"ID\");\r\n      var title = oListItem.get_item(\"Title\");\r\n      var userGroup = oListItem.get_item(\"UserGroup\");\r\n      if (userGroup != null) {\r\n        userGroup = userGroup.get_lookupValue();\r\n      } else userGroup = \"\";\r\n\r\n      var aoObject = new Object();\r\n      aoObject[\"ID\"] = id;\r\n      aoObject[\"title\"] = title;\r\n      aoObject[\"userGroup\"] = userGroup;\r\n\r\n      m_arrAOs.push(aoObject);\r\n    }\r\n  }\r\n\r\n  function m_fnGetAOSPGroupName(groupName) {\r\n    //finds the group name corresponding to the lookup field selected\r\n    var userGroup = null;\r\n    if (m_arrAOs != null) {\r\n      for (var x = 0; x < m_arrAOs.length; x++) {\r\n        var oGroup = m_arrAOs[x];\r\n        if (oGroup.title == groupName) {\r\n          userGroup = oGroup.userGroup;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return userGroup;\r\n  }\r\n\r\n  function m_fnCheckSPItemHasGroupPermission(item, groupName, permissionLevel) {\r\n    if (\r\n      item == null ||\r\n      groupName == \"\" ||\r\n      groupName == null ||\r\n      permissionLevel == null\r\n    )\r\n      return false;\r\n\r\n    var match = false;\r\n    var roleAssignments = item.get_roleAssignments();\r\n    if (roleAssignments == null) {\r\n      alert(\"Error retrieving role assignments\");\r\n      return false;\r\n    }\r\n\r\n    var rolesEnumerator = roleAssignments.getEnumerator();\r\n    while (rolesEnumerator.moveNext()) {\r\n      var role = rolesEnumerator.get_current();\r\n      if (role != null) {\r\n        var roleMember = role.get_member();\r\n        if (roleMember.isPropertyAvailable(\"Title\")) {\r\n          var memberTitleName = roleMember.get_title();\r\n\r\n          var roleDefs = role.get_roleDefinitionBindings();\r\n          if (roleDefs != null) {\r\n            var roleDefsEnumerator = roleDefs.getEnumerator();\r\n            while (roleDefsEnumerator.moveNext()) {\r\n              var rd = roleDefsEnumerator.get_current();\r\n              var rdName = rd.get_name();\r\n\r\n              if (\r\n                memberTitleName == groupName &&\r\n                rd.get_basePermissions().has(permissionLevel)\r\n              ) {\r\n                match = true;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return match;\r\n  }\r\n\r\n  function m_fnGoToResponse(responseTitle, isIA) {\r\n    if (!isIA) {\r\n      var bFound = false;\r\n      $(\"#ddlResponsesOpen > option\").each(function () {\r\n        if ($(this).text() == responseTitle) {\r\n          bFound = true;\r\n          notifyId = SP.UI.Notify.addNotification(\r\n            \"Displaying Response (\" + responseTitle + \")\",\r\n            false\r\n          );\r\n          $(\"#ddlResponsesOpen\").val(responseTitle).change();\r\n\r\n          return false;\r\n        }\r\n      });\r\n      if (!bFound) {\r\n        $(\"#ddlResponsesProcessed > option\").each(function () {\r\n          if ($(this).text() == responseTitle) {\r\n            bFound = true;\r\n            notifyId = SP.UI.Notify.addNotification(\r\n              \"Displaying Response (\" + responseTitle + \")\",\r\n              false\r\n            );\r\n            $(\"#ddlResponsesProcessed\").val(responseTitle).change();\r\n\r\n            return false;\r\n          }\r\n        });\r\n      }\r\n\r\n      $(\"#tabs\").tabs({ active: 1 });\r\n    }\r\n  }\r\n\r\n  function m_fnGetResponseDocStyleTag2(documentStatus) {\r\n    var styleTag = {};\r\n    if (documentStatus == \"Archived\")\r\n      styleTag = { \"background-color\": \"Gainsboro\" };\r\n    else if (documentStatus == \"Approved\")\r\n      styleTag = { \"background-color\": \"PaleGreen\" };\r\n    else if (documentStatus == \"Rejected\")\r\n      styleTag = { \"background-color\": \"LightSalmon\" };\r\n    else if (documentStatus == \"Sent to QA\")\r\n      styleTag = { \"background-color\": \"LightCyan\" };\r\n    else if (documentStatus == \"Submitted\")\r\n      styleTag = { \"background-color\": \"LemonChiffon\" };\r\n    else if (documentStatus == \"Marked for Deletion\")\r\n      styleTag = {\r\n        \"background-color\": \"Gainsboro\",\r\n        \"font-style\": \"italic\",\r\n      };\r\n    return styleTag;\r\n    //\t\t\tstyleTag = \" style='background-color:Gainsboro; font-style:italic' title='Marked for Deletion by the Action Office' \";\r\n  }\r\n\r\n  function m_fnGetResponseDocStyleTag(documentStatus) {\r\n    var styleTag = \"\";\r\n\r\n    if (documentStatus == \"Archived\")\r\n      styleTag = \" style='background-color:Gainsboro;' \";\r\n    else if (documentStatus == \"Approved\")\r\n      styleTag = \" style='background-color:PaleGreen;' \";\r\n    else if (documentStatus == \"Rejected\")\r\n      styleTag = \" style='background-color:LightSalmon;' \";\r\n    else if (documentStatus == \"Sent to QA\")\r\n      styleTag = \" style='background-color:LightCyan;' \";\r\n    else if (documentStatus == \"Submitted\")\r\n      styleTag = \" style='background-color:LemonChiffon;' \";\r\n    else if (documentStatus == \"Marked for Deletion\")\r\n      styleTag =\r\n        \" style='background-color:Gainsboro; font-style:italic' title='Marked for Deletion by the Action Office' \";\r\n\r\n    return styleTag;\r\n  }\r\n\r\n  function m_fnCheckIfEmailFolderExists(items, requestNumber) {\r\n    //Check if folder exists in email library\r\n    var bFolderExists = false;\r\n    var listItemEnumerator = items.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var folderItem = listItemEnumerator.get_current();\r\n      var itemName = folderItem.get_displayName();\r\n      if (itemName == requestNumber) {\r\n        var bFolderExists = true;\r\n        break;\r\n      }\r\n    }\r\n    return bFolderExists;\r\n  }\r\n\r\n  var m_cntAddToEmailFolder = 0;\r\n  var m_cntAddedToEmailFolder = 0;\r\n\r\n  function m_fnCreateEmailFolder(list, requestNumber, requestItem, OnComplete) {\r\n    m_cntAddToEmailFolder = 0;\r\n    m_cntAddedToEmailFolder = 0;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var itemCreateInfo = new SP.ListItemCreationInformation();\r\n    itemCreateInfo.set_underlyingObjectType(SP.FileSystemObjectType.folder);\r\n    itemCreateInfo.set_leafName(requestNumber);\r\n    const oNewEmailFolder = list.addItem(itemCreateInfo);\r\n    oNewEmailFolder.set_item(\"Title\", requestNumber);\r\n    oNewEmailFolder.update();\r\n\r\n    const currentUser = web.get_currentUser();\r\n    const ownerGroup = web.get_associatedOwnerGroup();\r\n    const memberGroup = web.get_associatedMemberGroup();\r\n    const visitorGroup = web.get_associatedVisitorGroup();\r\n\r\n    oNewEmailFolder.resetRoleInheritance();\r\n    oNewEmailFolder.breakRoleInheritance(false, false);\r\n\r\n    var roleDefBindingCollAdmin =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollAdmin.add(\r\n      web.get_roleDefinitions().getByType(SP.RoleType.administrator)\r\n    );\r\n\r\n    var roleDefBindingCollContribute =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollContribute.add(\r\n      web.get_roleDefinitions().getByType(SP.RoleType.contributor)\r\n    );\r\n\r\n    var roleDefBindingCollRestrictedRead =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollRestrictedRead.add(\r\n      web.get_roleDefinitions().getByName(\"Restricted Read\")\r\n    );\r\n\r\n    var roleDefBindingCollRestrictedContribute =\r\n      SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n    roleDefBindingCollRestrictedContribute.add(\r\n      web.get_roleDefinitions().getByName(\"Restricted Contribute\")\r\n    );\r\n\r\n    //add associated site groups\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .add(ownerGroup, roleDefBindingCollAdmin);\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .add(memberGroup, roleDefBindingCollContribute);\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .add(visitorGroup, roleDefBindingCollRestrictedRead);\r\n\r\n    var spGroupQA = Audit.Common.Utilities.GetSPSiteGroup(\r\n      Audit.Common.Utilities.GetGroupNameQA()\r\n    );\r\n    if (spGroupQA != null)\r\n      oNewEmailFolder\r\n        .get_roleAssignments()\r\n        .add(spGroupQA, roleDefBindingCollRestrictedContribute);\r\n\r\n    oNewEmailFolder\r\n      .get_roleAssignments()\r\n      .getByPrincipal(currentUser)\r\n      .deleteObject();\r\n\r\n    //Need to break up adding AOs because it exceeds the resource limit (request uses too many resources)\r\n    function onUpdatePermsSucceeded() {\r\n      if (this.requestItem) {\r\n        //this will be null when sending from permissions page\r\n        //add action offices\r\n        var arrActionOffice = this.requestItem.get_item(\"ActionOffice\");\r\n        if (arrActionOffice == null || arrActionOffice.length == 0) {\r\n          if (this.OnComplete) this.OnComplete(true);\r\n          return;\r\n        }\r\n\r\n        for (var x = 0; x < arrActionOffice.length; x++) {\r\n          var actionOfficeName = arrActionOffice[x].get_lookupValue();\r\n\r\n          var actionOfficeGroupName =\r\n            Audit.Common.Utilities.GetAOSPGroupName(actionOfficeName);\r\n          var actionOfficeGroup = Audit.Common.Utilities.GetSPSiteGroup(\r\n            actionOfficeGroupName\r\n          );\r\n\r\n          if (actionOfficeGroup != null) {\r\n            m_cntAddToEmailFolder++;\r\n\r\n            var currCtx2 = new SP.ClientContext.get_current();\r\n            var web2 = currCtx2.get_web();\r\n\r\n            var roleDefBindingCollRestrictedContribute =\r\n              SP.RoleDefinitionBindingCollection.newObject(currCtx2);\r\n            roleDefBindingCollRestrictedContribute.add(\r\n              web2.get_roleDefinitions().getByName(\"Restricted Contribute\")\r\n            );\r\n\r\n            this.oNewEmailFolder\r\n              .get_roleAssignments()\r\n              .add(actionOfficeGroup, roleDefBindingCollRestrictedContribute);\r\n\r\n            function onUpdateAOPermsSucceeded() {\r\n              m_cntAddedToEmailFolder++;\r\n              if (m_cntAddedToEmailFolder == m_cntAddToEmailFolder) {\r\n                if (this.OnComplete) this.OnComplete(true);\r\n              }\r\n            }\r\n            function onUpdateAOPermsFailed(sender, args) {\r\n              m_cntAddedToEmailFolder++;\r\n              if (m_cntAddedToEmailFolder == m_cntAddToEmailFolder) {\r\n                if (this.OnComplete) this.OnComplete(true);\r\n              }\r\n            }\r\n            var data = { OnComplete: this.OnComplete };\r\n            currCtx2.executeQueryAsync(\r\n              Function.createDelegate(data, onUpdateAOPermsSucceeded),\r\n              Function.createDelegate(data, onUpdateAOPermsFailed)\r\n            );\r\n          }\r\n        }\r\n      } else {\r\n        if (this.OnComplete) this.OnComplete(true);\r\n      }\r\n    }\r\n\r\n    function onUpdatePermsFailed(sender, args) {\r\n      statusId = SP.UI.Status.addStatus(\r\n        \"Request failed: \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    var data = {\r\n      /*item: oListItem, */ requestItem: requestItem,\r\n      oNewEmailFolder: oNewEmailFolder,\r\n      OnComplete: OnComplete,\r\n    };\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onUpdatePermsSucceeded),\r\n      Function.createDelegate(data, onUpdatePermsFailed)\r\n    );\r\n  }\r\n\r\n  function m_fnSortResponseTitleNoCase(a, b) {\r\n    var aTitle = a;\r\n    var bTitle = b;\r\n    let newA, newB;\r\n\r\n    if (aTitle == null) aTitle = \"\";\r\n    if (bTitle == null) bTitle = \"\";\r\n\r\n    var aIndex = aTitle.lastIndexOf(\"-\");\r\n    if (aIndex >= 0) {\r\n      var subA = aTitle.substring(0, aIndex + 1);\r\n      var lastA = aTitle.replace(subA, \"\");\r\n      var intA = parseInt(lastA, 10);\r\n      var newIntA = Audit.Common.Utilities.PadDigits(intA, 5);\r\n      newA = subA + newIntA;\r\n    } else newA = aTitle;\r\n\r\n    var bIndex = bTitle.lastIndexOf(\"-\");\r\n    if (bIndex >= 0) {\r\n      var subB = bTitle.substring(0, bIndex + 1);\r\n      var lastB = bTitle.replace(subB, \"\");\r\n      var intB = parseInt(lastB, 10);\r\n      var newIntB = Audit.Common.Utilities.PadDigits(intB, 5);\r\n      newB = subB + newIntB;\r\n    } else newB = bTitle;\r\n\r\n    return newA.toLowerCase().localeCompare(newB.toLowerCase());\r\n  }\r\n\r\n  function m_fnSortResponseObjectNoCase(a, b) {\r\n    var aTitle = a.title;\r\n    var bTitle = b.title;\r\n    var newA;\r\n    var newB;\r\n    if (aTitle == null) aTitle = \"\";\r\n    if (bTitle == null) bTitle = \"\";\r\n\r\n    var aIndex = aTitle.lastIndexOf(\"-\");\r\n    if (aIndex >= 0) {\r\n      var subA = aTitle.substring(0, aIndex + 1);\r\n      var lastA = aTitle.replace(subA, \"\");\r\n      var intA = parseInt(lastA, 10);\r\n      var newIntA = Audit.Common.Utilities.PadDigits(intA, 5);\r\n      newA = subA + newIntA;\r\n    } else newA = aTitle;\r\n\r\n    var bIndex = bTitle.lastIndexOf(\"-\");\r\n    if (bIndex >= 0) {\r\n      var subB = bTitle.substring(0, bIndex + 1);\r\n      var lastB = bTitle.replace(subB, \"\");\r\n      var intB = parseInt(lastB, 10);\r\n      var newIntB = Audit.Common.Utilities.PadDigits(intB, 5);\r\n      newB = subB + newIntB;\r\n    } else newB = bTitle;\r\n\r\n    return newA.toLowerCase().localeCompare(newB.toLowerCase());\r\n  }\r\n\r\n  function m_fnSortNoCase(a, b) {\r\n    return a.toLowerCase().localeCompare(b.toLowerCase());\r\n  }\r\n\r\n  function m_fnSortDate(a, b) {\r\n    if (a == \"\") return -1;\r\n    if (b == \"\") return 1;\r\n    return new Date(a).getTime() - new Date(b).getTime();\r\n  }\r\n\r\n  //Adds the values in the arr array to the drop down with the specified id\r\n  function m_fnAddOptions(arr, ddlID, dateSort, responseSort) {\r\n    if (arr == null) return;\r\n    if (responseSort) arr.sort(m_fnSortResponseTitleNoCase);\r\n    else if (!dateSort) arr.sort(m_fnSortNoCase);\r\n    else arr.sort(m_fnSortDate);\r\n\r\n    var rOptions = new Array(),\r\n      j = -1;\r\n    rOptions[++j] = \"<option value=''>-Select-</option>\";\r\n\r\n    var arrLength = arr.length;\r\n\r\n    /*\tvar fragment = document.createDocumentFragment();\r\n\t\t\tvar choice = document.createElement('option');\r\n\t\t\tchoice.value = \"\";\r\n\t\t\tchoice.innerHTML = \"-Select-\";\r\n\t\t\tfragment.appendChild(choice);\r\n\t\t*/\r\n    for (var x = 0; x < arrLength; x++) {\r\n      var option = $.trim(arr[x]);\r\n\r\n      rOptions[++j] = \"<option value='\" + option + \"'>\" + option + \"</option>\";\r\n\r\n      /*\t\r\n\t\t\tvar choice = document.createElement('option');\r\n\t        choice.value = option;\r\n\t        choice.innerHTML = option;\r\n\t        fragment.appendChild(choice);*/\r\n    }\r\n\r\n    //ddlID = ddlID.replace(\"#\", \"\");\r\n    //document.getElementById(ddlID).innerHTML = rOptions.join('');\r\n\r\n    var thisDDL = $(ddlID);\r\n    thisDDL.empty().append(rOptions.join(\"\"));\r\n    /*var thisDDL = $(ddlID);\r\n\t\tthisDDL.empty().html( fragment );*/\r\n  }\r\n\r\n  function m_fnExistsInArr(arr, val) {\r\n    if (arr == null) return false;\r\n\r\n    var arrLength = arr.length;\r\n    for (var x = 0; x < arrLength; x++) {\r\n      if (arr[x] == val) return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function m_fnGetTrueFalseIcon(val) {\r\n    if (val == true)\r\n      return \"<span class='ui-icon ui-icon-check'>\" + val + \"</span>\";\r\n    else return \"<span class='ui-icon ui-icon-close'>\" + val + \"</span>\";\r\n  }\r\n\r\n  function m_fnGetFriendlyDisplayName(oListItem, fieldName) {\r\n    var user = oListItem.get_item(fieldName);\r\n    if (user == null) return \"\";\r\n    else return user.get_lookupValue();\r\n  }\r\n\r\n  function m_fnPadDigits(n, totalDigits) {\r\n    n = n.toString();\r\n    var pd = \"\";\r\n    if (totalDigits > n.length) {\r\n      for (let i = 0; i < totalDigits - n.length; i++) {\r\n        pd += \"0\";\r\n      }\r\n    }\r\n    return pd + n.toString();\r\n  }\r\n\r\n  function m_fnPreciseRound(num, decimals) {\r\n    var sign = num >= 0 ? 1 : -1;\r\n    return (\r\n      Math.round(num * Math.pow(10, decimals) + sign * 0.001) /\r\n      Math.pow(10, decimals)\r\n    ).toFixed(decimals);\r\n  }\r\n\r\n  function m_fnGetFriendlyFileSize(fileSize) {\r\n    if (fileSize == null || fileSize == \"\") return \"\";\r\n\r\n    if (fileSize > 1048576) {\r\n      fileSize =\r\n        Audit.Common.Utilities.PreciseRound(fileSize / 1048576, 2) + \" MB\";\r\n    } else if (fileSize > 1024) {\r\n      fileSize =\r\n        Audit.Common.Utilities.PreciseRound(fileSize / 1024, 2) + \" KB\";\r\n    } else {\r\n      fileSize += \" B\";\r\n    }\r\n    return fileSize;\r\n  }\r\n\r\n  function m_fnISODateString(d) {\r\n    function pad(n) {\r\n      return n < 10 ? \"0\" + n : n;\r\n    }\r\n\r\n    return (\r\n      d.getUTCFullYear() +\r\n      \"-\" +\r\n      pad(d.getUTCMonth() + 1) +\r\n      \"-\" +\r\n      pad(d.getUTCDate()) +\r\n      \"T\" +\r\n      pad(d.getUTCHours()) +\r\n      \":\" +\r\n      pad(d.getUTCMinutes()) +\r\n      \":\" +\r\n      pad(d.getUTCSeconds()) +\r\n      \"Z\"\r\n    );\r\n  }\r\n\r\n  function m_fnBindHandlerResponseDoc() {\r\n    $(\".requestInfo-response-doc img\").click(function (event) {\r\n      event.preventDefault();\r\n      var curIcon = $(this).attr(\"src\");\r\n      if (curIcon == \"/_layouts/images/minus.gif\")\r\n        $(this).attr(\"src\", \"/_layouts/images/plus.gif\");\r\n      else $(this).attr(\"src\", \"/_layouts/images/minus.gif\");\r\n\r\n      //$(this).nextUntil('tr.Grouping').slideToggle(200);\r\n      $(this)\r\n        .parent()\r\n        .parent()\r\n        .nextUntil(\"tr.requestInfo-response-doc\")\r\n        .each(function () {\r\n          $(this).toggleClass(\"collapsed\");\r\n        });\r\n    });\r\n  }\r\n\r\n  /************\r\n\tNotice - for some reason, when the list item opens in a dialog or not in the dialog, it renders differently causing the values to get back data differently\r\n\t********/\r\n  /*\r\n\tfunction m_fnGetLookupFieldText( fieldName )\r\n\t{\r\n\t\tvar field = $( \"select[title='\" + fieldName  + \"']\" );\r\n\t\t\r\n\t\tif( field == null || field.html() == null ) //more than 20 items in the lookup\r\n\t\t{\r\n\t\t\tfield = $( \"input[title='\" + fieldName  + \"']\" );\r\n\t\t\treturn field.val();\r\n\t\t}\r\n\t\telse return $(\"select[title='\" + fieldName  + \"'] option:selected\").text();\r\n\t}\r\n\r\n\t*/\r\n\r\n  function m_fnGetLookupFormField(fieldTitle) {\r\n    if ($(\"select[title='\" + fieldTitle + \"']\").html() !== null) {\r\n      return $(\"select[title='\" + fieldTitle + \"']\");\r\n    } else {\r\n      return $(\"input[title='\" + fieldTitle + \"']\");\r\n    }\r\n  }\r\n\r\n  function m_fnGetLookupDisplayText(fieldTitle) {\r\n    //Set default value for lookups with less that 20 items\r\n    if ($(\"select[title='\" + fieldTitle + \"']\").html() !== null) {\r\n      return $(\"select[title='\" + fieldTitle + \"'] option:selected\").text();\r\n    } else {\r\n      return $(\"input[title='\" + fieldTitle + \"']\").val();\r\n    }\r\n  }\r\n\r\n  function m_fnSetLookupFromFieldNameByText(fieldName, text) {\r\n    try {\r\n      if (text == undefined) return;\r\n      var theSelect = m_fnGetTagFromIdentifierAndTitle(\"select\", \"\", fieldName);\r\n\r\n      if (theSelect == null) {\r\n        var theInput = m_fnGetTagFromIdentifierAndTitle(\"input\", \"\", fieldName);\r\n        //builtin\r\n        ShowDropdown(theInput.id);\r\n        var opt = document.getElementById(theInput.opt);\r\n        m_fnSetSelectedOptionByText(opt, text);\r\n        //builtin\r\n        OptLoseFocus(opt);\r\n      } else {\r\n        m_fnSetSelectedOptionByText(theSelect, text);\r\n      }\r\n    } catch (ex) {}\r\n  }\r\n\r\n  function m_fnSetSelectedOptionByText(select, text) {\r\n    var opts = select.options;\r\n    var optLength = opts.length;\r\n    if (select == null) return;\r\n\r\n    for (var i = 0; i < optLength; i++) {\r\n      if (opts[i].text == text) {\r\n        select.selectedIndex = i;\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function m_fnGetTagFromIdentifierAndTitle(tagName, identifier, title) {\r\n    var idLength = identifier.length;\r\n    var tags = document.getElementsByTagName(tagName);\r\n    for (var i = 0; i < tags.length; i++) {\r\n      var tagID = tags[i].id;\r\n      if (\r\n        tags[i].title == title &&\r\n        (identifier == \"\" ||\r\n          tagID.indexOf(identifier) == tagID.length - idLength)\r\n      ) {\r\n        return tags[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function m_fnViewUserManuals(docType) {\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"User Manual\";\r\n    options.height = 250;\r\n    //options.dialogReturnValueCallback = OnCallbackForm;\r\n    if (docType != null)\r\n      options.url =\r\n        Audit.Common.Utilities.GetSiteUrl() +\r\n        \"/SitePages/AuditUserManuals.aspx?FilterField1=DocType&FilterValue1=\" +\r\n        docType;\r\n    else\r\n      options.url =\r\n        Audit.Common.Utilities.GetSiteUrl() +\r\n        \"/SitePages/AuditUserManuals.aspx\";\r\n\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function m_fnPrintPage(pageTitle, divTbl) {\r\n    var curDate = new Date();\r\n    var siteUrl = Audit.Common.Utilities.GetSiteUrl();\r\n    var cssLink1 =\r\n      siteUrl +\r\n      \"/siteassets/css/tablesorter/style.css?v=\" +\r\n      curDate.format(\"MM_dd_yyyy\");\r\n    var cssLink2 =\r\n      siteUrl +\r\n      \"/siteAssets/css/audit_styles.css?v=\" +\r\n      curDate.format(\"MM_dd_yyyy\");\r\n\r\n    var divOutput = $(divTbl).html();\r\n\r\n    //remove hyperlinks pointing to the job codes\r\n    var updatedDivOutput = $(\"<div>\").append(divOutput);\r\n    updatedDivOutput.find(\".sr-response-title a\").each(function () {\r\n      $(this).removeAttr(\"onclick\");\r\n      $(this).removeAttr(\"href\");\r\n    });\r\n\r\n    divOutput = updatedDivOutput.html();\r\n\r\n    var printDateString = curDate.format(\"MM/dd/yyyy hh:mm tt\");\r\n    printDateString =\r\n      \"<div style='padding-bottom:10px;'>\" + printDateString + \"</div>\";\r\n    divOutput = printDateString + divOutput;\r\n\r\n    var cssFile1 = $(\"<div></div>\");\r\n    var cssFile2 = $(\"<div></div>\");\r\n\r\n    var def1 = $.Deferred();\r\n    var def2 = $.Deferred();\r\n\r\n    var cssFileText = \"\";\r\n    cssFile1.load(cssLink1, function () {\r\n      cssFileText += \"<style>\" + cssFile1.html() + \"</style>\";\r\n      def1.resolve();\r\n    });\r\n    cssFile2.load(cssLink2, function () {\r\n      cssFileText += \"<style>\" + cssFile2.html() + \"</style>\";\r\n      def2.resolve();\r\n    });\r\n\r\n    //gets called asynchronously after the css files have been loaded\r\n    $.when(def1, def2).done(function () {\r\n      var html =\r\n        \"<HTML>\\n\" +\r\n        \"<HEAD>\\n\\n\" +\r\n        \"<Title>\" +\r\n        pageTitle +\r\n        \"</Title>\\n\" +\r\n        cssFileText +\r\n        \"\\n\" +\r\n        \"<style>\" +\r\n        \".hideOnPrint, .rowFilters {display:none}\" +\r\n        \"</style>\\n\" +\r\n        \"</HEAD>\\n\" +\r\n        \"<BODY>\\n\" +\r\n        divOutput +\r\n        \"\\n\" +\r\n        \"</BODY>\\n\" +\r\n        \"</HTML>\";\r\n\r\n      var printWP = window.open(\"\", \"printWebPart\");\r\n      printWP.document.open();\r\n      //insert content\r\n      printWP.document.write(html);\r\n\r\n      printWP.document.close();\r\n      //open print dialog\r\n      printWP.print();\r\n    });\r\n  }\r\n\r\n  //make sure iframe with id csvexprframe is added to page up top\r\n  //http://stackoverflow.com/questions/18185660/javascript-jquery-exporting-data-in-csv-not-working-in-ie\r\n  function m_fnExportToCsv(fileName, tableName, removeHeader) {\r\n    var data = m_fnGetCellValues(tableName);\r\n\r\n    if (removeHeader == true) data = data.slice(1);\r\n\r\n    var csv = m_fnConvertToCsv(data);\r\n    //\tconsole.log( csv );\r\n    if (navigator.userAgent.search(\"Trident\") >= 0) {\r\n      window.CsvExpFrame.document.open(\"text/html\", \"replace\");\r\n      //\t\twindow.CsvExpFrame.document.open(\"application/csv\", \"replace\");\r\n      //\t\twindow.CsvExpFrame.document.charset = \"utf-8\";\r\n      //\t\twindow.CsvExpFrame.document.open(\"application/ms-excel\", \"replace\");\r\n      window.CsvExpFrame.document.write(csv);\r\n      window.CsvExpFrame.document.close();\r\n      window.CsvExpFrame.focus();\r\n      window.CsvExpFrame.document.execCommand(\r\n        \"SaveAs\",\r\n        true,\r\n        fileName + \".csv\"\r\n      );\r\n    } else {\r\n      var uri = \"data:text/csv;charset=utf-8,\" + escape(csv);\r\n      var downloadLink = document.createElement(\"a\");\r\n      downloadLink.href = uri;\r\n      downloadLink.download = fileName + \".csv\";\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    }\r\n  }\r\n\r\n  function m_fnGetCellValues(tableName) {\r\n    var table = document.getElementById(tableName);\r\n\r\n    //remove headers and footers\r\n    if (table.innerHTML.indexOf(\"rowFilters\") >= 0) {\r\n      var deets = $(\"<div>\").append(table.outerHTML);\r\n      deets.find(\".rowFilters\").each(function () {\r\n        $(this).remove();\r\n      });\r\n      table = deets.find(\"table\")[0];\r\n    }\r\n    if (table.innerHTML.indexOf(\"footer\") >= 0) {\r\n      var deets = $(\"<div>\").append(table.outerHTML);\r\n      deets.find(\".footer\").each(function () {\r\n        $(this).remove();\r\n      });\r\n      table = deets.find(\"table\")[0];\r\n    }\r\n\r\n    var tableArray = [];\r\n    for (var r = 0, n = table.rows.length; r < n; r++) {\r\n      tableArray[r] = [];\r\n      for (var c = 0, m = table.rows[r].cells.length; c < m; c++) {\r\n        var text =\r\n          table.rows[r].cells[c].textContent ||\r\n          table.rows[r].cells[c].innerText;\r\n        tableArray[r][c] = text.trim();\r\n      }\r\n    }\r\n    return tableArray;\r\n  }\r\n\r\n  function m_fnConvertToCsv(objArray) {\r\n    var array = typeof objArray != \"object\" ? JSON.parse(objArray) : objArray;\r\n    var str = \"sep=,\\r\\n\";\r\n    var line = \"\";\r\n    var index;\r\n    var value;\r\n    for (var i = 0; i < array.length; i++) {\r\n      line = \"\";\r\n      var array1 = array[i];\r\n      for (index in array1) {\r\n        if (array1.hasOwnProperty(index)) {\r\n          value = array1[index] + \"\";\r\n          line += '\"' + value.replace(/\"/g, '\"\"') + '\",';\r\n        }\r\n      }\r\n      line = line.slice(0, -1);\r\n      str += line + \"\\r\\n\";\r\n    }\r\n    return str;\r\n  }\r\n\r\n  var publicMembers = {\r\n    GetSiteUrl: function () {\r\n      if (m_siteUrl == \"/\") return \"\";\r\n      else return m_siteUrl;\r\n    },\r\n    GetListTitleRequests: function () {\r\n      return m_listTitleRequests;\r\n    },\r\n    GetListNameRequests: function () {\r\n      return m_listNameRequests;\r\n    },\r\n    GetListTitleRequestsInternal: function () {\r\n      return m_listTitleRequestsInternal;\r\n    },\r\n    GetListNameRequestsInternal: function () {\r\n      return m_listNameRequestsInternal;\r\n    },\r\n    GetListTitleResponses: function () {\r\n      return m_listTitleResponses;\r\n    },\r\n    GetListNameResponses: function () {\r\n      return m_listNameResponses;\r\n    },\r\n    GetLibTitleRequestDocs: function () {\r\n      return m_libTitleRequestDocs;\r\n    },\r\n    GetLibNameRequestDocs: function () {\r\n      return m_libNameRequestDocs;\r\n    },\r\n    GetLibTitleCoverSheets: function () {\r\n      return m_libTitleCoverSheet;\r\n    },\r\n    GetLibNameCoverSheets: function () {\r\n      return m_libNameCoverSheet;\r\n    },\r\n    GetLibTitleResponseDocs: function () {\r\n      return m_libTitleResponseDocs;\r\n    },\r\n    GetLibNameResponseDocs: function () {\r\n      return m_libNameResponseDocs;\r\n    },\r\n    GetLibTitleResponseDocsEA: function () {\r\n      return m_libTitleResponseDocsEA;\r\n    },\r\n    GetLibNameResponseDocsEA: function () {\r\n      return m_libNameResponseDocsEA;\r\n    },\r\n    GetListTitleActionOffices: function () {\r\n      return m_listTitleActionOffices;\r\n    },\r\n    GetListNameActionOffices: function () {\r\n      return m_listNameActionOffices;\r\n    },\r\n    GetListTitleEmailHistory: function () {\r\n      return m_listTitleEmailHistory;\r\n    },\r\n    GetListNameEmailHistory: function () {\r\n      return m_listNameEmailHistory;\r\n    },\r\n    GetListTitleBulkResponses: function () {\r\n      return m_listTitleBulkResponses;\r\n    },\r\n    GetListNameBulkResponses: function () {\r\n      return m_listNameBulkResponses;\r\n    },\r\n    GetListTitleBulkPermissions: function () {\r\n      return m_listTitleBulkPermissions;\r\n    },\r\n    GetListNameBulkPermissions: function () {\r\n      return m_listNameBulkPermissions;\r\n    },\r\n    GetGroupNameSpecialPerm1: function () {\r\n      return m_groupNameSpecialPermName1;\r\n    },\r\n    GetGroupNameSpecialPerm2: function () {\r\n      return m_groupNameSpecialPermName2;\r\n    },\r\n    GetGroupNameQA: function () {\r\n      return m_groupNameQA;\r\n    },\r\n    GetGroupNameEA: function () {\r\n      return m_groupNameEA;\r\n    },\r\n    Refresh: m_fnRefresh,\r\n    OnLoadDisplayTimeStamp: m_fnOnLoadDisplayTimeStamp,\r\n    OnLoadDisplayTabAndResponse: m_fnOnLoadDisplayTabAndResponse,\r\n    OnLoadFilterResponses: function (responseStatus1, responseStatus2) {\r\n      m_fnOnLoadFilterResponses(responseStatus1, responseStatus2);\r\n    },\r\n    SetResponseDocLibGUID: function (libGUID) {\r\n      m_libResponseDocsLibraryGUID = libGUID;\r\n    },\r\n    GetResponseDocLibGUID: function () {\r\n      return m_libResponseDocsLibraryGUID;\r\n    },\r\n    LoadSiteGroups: function (itemColl) {\r\n      m_fnLoadSiteGroups(itemColl);\r\n    },\r\n    GetSPSiteGroup: function (groupName) {\r\n      return m_fnGetSPSiteGroup(groupName);\r\n    },\r\n    LoadActionOffices: function (itemColl) {\r\n      m_fnLoadActionOffices(itemColl);\r\n    },\r\n    GetActionOffices: function () {\r\n      return m_arrAOs;\r\n    },\r\n    GetAOSPGroupName: function (groupName) {\r\n      return m_fnGetAOSPGroupName(groupName);\r\n    },\r\n    CheckSPItemHasGroupPermission: function (item, groupName, permissionLevel) {\r\n      return m_fnCheckSPItemHasGroupPermission(\r\n        item,\r\n        groupName,\r\n        permissionLevel\r\n      );\r\n    },\r\n    GoToResponse: function (responseTitle, isIA) {\r\n      m_fnGoToResponse(responseTitle, isIA);\r\n    },\r\n    GetResponseDocStyleTag: function (documentStatus) {\r\n      return m_fnGetResponseDocStyleTag(documentStatus);\r\n    },\r\n    GetResponseDocStyleTag2: function (documentStatus) {\r\n      return m_fnGetResponseDocStyleTag2(documentStatus);\r\n    },\r\n    CheckIfEmailFolderExists: function (items, requestNumber) {\r\n      return m_fnCheckIfEmailFolderExists(items, requestNumber);\r\n    },\r\n    CreateEmailFolder: function (list, requestNumber, requestItem, OnComplete) {\r\n      return m_fnCreateEmailFolder(\r\n        list,\r\n        requestNumber,\r\n        requestItem,\r\n        OnComplete\r\n      );\r\n    },\r\n    AddOptions: function (arr, ddlID, dateSort, responseSort) {\r\n      m_fnAddOptions(arr, ddlID, dateSort, responseSort);\r\n    },\r\n    ExistsInArr: function (arr, val) {\r\n      return m_fnExistsInArr(arr, val);\r\n    },\r\n    GetTrueFalseIcon: function (val) {\r\n      return m_fnGetTrueFalseIcon(val);\r\n    },\r\n    PadDigits: function (n, totalDigits) {\r\n      return m_fnPadDigits(n, totalDigits);\r\n    },\r\n    PreciseRound: function (num, decimals) {\r\n      return m_fnPreciseRound(num, decimals);\r\n    },\r\n    GetFriendlyFileSize: function (fileSize) {\r\n      return m_fnGetFriendlyFileSize(fileSize);\r\n    },\r\n    GetISODateString: function (d) {\r\n      return m_fnISODateString(d);\r\n    },\r\n    GetFriendlyDisplayName: function (oListItem, fieldName) {\r\n      return m_fnGetFriendlyDisplayName(oListItem, fieldName);\r\n    },\r\n    BindHandlerResponseDoc: m_fnBindHandlerResponseDoc,\r\n    PrintStatusReport: function (pageTitle, divTbl) {\r\n      m_fnPrintPage(pageTitle, divTbl);\r\n    },\r\n    ExportToCsv: function (fileName, tableName, removeHeader) {\r\n      m_fnExportToCsv(fileName, tableName, removeHeader);\r\n    },\r\n    ViewUserManuals: function (docType) {\r\n      m_fnViewUserManuals(docType);\r\n    },\r\n    //GetLookupFieldText: function( fieldName ){ return m_fnGetLookupFieldText( fieldName); },\r\n    GetLookupDisplayText: function (fieldName) {\r\n      return m_fnGetLookupDisplayText(fieldName);\r\n    },\r\n    GetLookupFormField: function (fieldName) {\r\n      return m_fnGetLookupFormField(fieldName);\r\n    },\r\n    SetLookupFromFieldNameByText: function (fieldName, text) {\r\n      return m_fnSetLookupFromFieldNameByText(fieldName, text);\r\n    },\r\n    SortResponseObjects: function (a, b) {\r\n      return m_fnSortResponseObjectNoCase(a, b);\r\n    },\r\n    SortResponseTitles: m_fnSortResponseTitleNoCase,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\n// ExecuteOrDelayUntilScriptLoaded(InitReport, \"sp.js\");\r\nInitReport();\r\n", "\uFEFFimport { spDbTemplate } from \"./SP_DB_Template.js\";\r\nimport { getAllItems } from \"../../services/legacy_helpers.js\";\r\nimport \"../../common/utilities.js\";\r\n\r\ndocument.getElementById(\"app\").innerHTML = spDbTemplate;\r\n\r\nwindow.Audit = window.Audit || {};\r\nAudit.SPReport = Audit.SPReport || {};\r\n\r\nvar paramShowSiteActionsToAnyone = GetUrlKeyValue(\"ShowSiteActions\");\r\nif (paramShowSiteActionsToAnyone != true) {\r\n  //hide it even for owners unless this param is passed into the URL; pass in param if you want to change the page web parts/settings\r\n  $(\"#RibbonContainer-TabRowLeft\").hide();\r\n  $(\".ms-siteactionsmenu\").hide();\r\n}\r\n\r\nif (document.readyState === \"ready\" || document.readyState === \"complete\") {\r\n  InitReport();\r\n} else {\r\n  document.onreadystatechange = () => {\r\n    if (document.readyState === \"complete\" || document.readyState === \"ready\") {\r\n      ExecuteOrDelayUntilScriptLoaded(function () {\r\n        SP.SOD.executeFunc(\"sp.js\", \"SP.ClientContext\", InitReport);\r\n      }, \"sp.js\");\r\n    }\r\n  };\r\n}\r\n\r\nfunction InitReport() {\r\n  Audit.SPReport.Report = new Audit.SPReport.NewReportPage();\r\n  Audit.SPReport.Init();\r\n}\r\n\r\nAudit.SPReport.Init = function () {\r\n  var paramShowSiteActionsToAnyone = GetUrlKeyValue(\"ShowSiteActions\");\r\n  if (paramShowSiteActionsToAnyone != true) {\r\n    //hide it even for owners unless this param is passed into the URL; pass in param if you want to change the page web parts/settings\r\n    $(\"#RibbonContainer-TabRowLeft\").hide();\r\n    $(\".ms-siteactionsmenu\").hide();\r\n  }\r\n\r\n  setInterval(function () {\r\n    var divVal = $(\"#divCounter\").text();\r\n    var count = divVal * 1 - 1;\r\n    $(\"#divCounter\").text(count);\r\n    if (count <= 0) {\r\n      Audit.Common.Utilities.Refresh();\r\n    }\r\n  }, 1000);\r\n};\r\n\r\nAudit.SPReport.NewReportPage = function () {\r\n  var m_bigMap = new Object();\r\n  var m_arrRequests = new Array();\r\n  var m_arrResponses = new Array();\r\n\r\n  var m_requestItems;\r\n  var m_responseItems;\r\n  var m_ResponseDocsItems;\r\n\r\n  var statusId;\r\n\r\n  var m_bHasAccessToViewPerms = false;\r\n\r\n  ko.extenders.logChangeInArr = function (target, option) {\r\n    target.subscribe(function (newValue) {\r\n      console.log(option + \": \" + JSON.stringify(newValue));\r\n\r\n      console.log(newValue.length);\r\n    });\r\n    return target;\r\n  };\r\n\r\n  function ViewModel() {\r\n    var self = this;\r\n\r\n    self.siteUrl = Audit.Common.Utilities.GetSiteUrl();\r\n\r\n    self.arrResponses = ko.observableArray(null);\r\n\r\n    self.arrFilteredResponsesCount = ko.observable(0);\r\n\r\n    self.filterRequestID = ko.observable();\r\n    self.filterRequestStatus = ko.observable();\r\n    self.filterRequestIntDueDate = ko.observable();\r\n    self.filterSampleNum = ko.observable();\r\n    self.filterResponseName = ko.observable();\r\n    self.filterResponseStatus = ko.observable();\r\n\r\n    self.filterResponseName2 = ko.observable();\r\n    self.currentResponse = ko.observable();\r\n    self.arrCoverSheets = ko.observableArray(null);\r\n    self.arrResponseDocs = ko.observableArray(null);\r\n    self.cntResponseDocs = ko.observable(0);\r\n\r\n    self.doSort = ko.observable(false);\r\n\r\n    self.currentResponseStatus = ko\r\n      .computed(function () {\r\n        if (self.currentResponse()) {\r\n          if (self.currentResponse().resStatus == \"7-Closed\")\r\n            return (\r\n              self.currentResponse().resStatus +\r\n              \" on \" +\r\n              self.currentResponse().closedDate +\r\n              \" by \" +\r\n              self.currentResponse().closedBy\r\n            );\r\n\r\n          return self.currentResponse().resStatus;\r\n        }\r\n        return \"\";\r\n      }, self)\r\n      .extend({ notify: \"always\" });\r\n\r\n    self.currentResponseRequestStatus = ko.computed(function () {\r\n      if (self.currentResponse()) {\r\n        if (self.currentResponse().request.status == \"Closed\")\r\n          return (\r\n            self.currentResponse().request.status +\r\n            \" on \" +\r\n            self.currentResponse().request.closedDate\r\n          );\r\n\r\n        return self.currentResponse().request.status;\r\n      }\r\n      return \"\";\r\n    }, self);\r\n\r\n    self.currentResponseRequestStatusStyle = ko.computed(function () {\r\n      if (self.currentResponseStatus() != \"\") {\r\n        if (\r\n          self.currentResponse().request.status == \"Closed\" ||\r\n          self.currentResponse().request.status == \"Canceled\"\r\n        )\r\n          return \"red\";\r\n        else return \"green\";\r\n      }\r\n      return \"\";\r\n    }, self);\r\n\r\n    /** Behaviors **/\r\n\r\n    self.ClearFilters = function () {\r\n      self.filterRequestID(\"\");\r\n      self.filterRequestStatus(\"\");\r\n      self.filterRequestIntDueDate(\"\");\r\n      self.filterSampleNum(\"\");\r\n      self.filterResponseName(\"\");\r\n      self.filterResponseStatus(\"\");\r\n    };\r\n\r\n    self.GetDistinctResponsesDDVals = function (fieldName) {\r\n      return ko.computed(\r\n        {\r\n          read: function () {\r\n            var types = ko.utils.arrayMap(self.arrResponses(), function (item) {\r\n              return item[fieldName];\r\n            });\r\n\r\n            var ddArr = ko.utils.arrayGetDistinctValues(types).sort();\r\n            return ddArr;\r\n          },\r\n        },\r\n        self\r\n      );\r\n    };\r\n\r\n    self.GoToResponse = function (response) {\r\n      $(\"#tabs\").tabs({ active: 1 });\r\n      self.filterResponseName2(response.title);\r\n    };\r\n\r\n    /** Subscriptions **/\r\n\r\n    self.arrResponses.subscribe(function (newValue) {\r\n      if (self.arrResponses().length > 0 && self.doSort()) {\r\n        //should trigger only once\r\n        self.arrFilteredResponsesCount(self.arrResponses().length);\r\n\r\n        setTimeout(function () {\r\n          $(\"#tblStatusReportResponses\").tablesorter({\r\n            sortList: [[7, 1]],\r\n            selectorHeaders: \".sorter-true\",\r\n          });\r\n        }, 200);\r\n      }\r\n    });\r\n\r\n    /* second tab */\r\n    self.filterResponseName2.subscribe(function (newValue) {\r\n      var oResponse = m_bigMap[\"response-\" + self.filterResponseName2()];\r\n      if (oResponse) {\r\n        self.currentResponse(oResponse);\r\n\r\n        LoadTabResponseInfoCoverSheets(oResponse);\r\n        LoadTabResponseInfoResponseDocs(oResponse);\r\n      } else {\r\n        self.currentResponse(null);\r\n        self.arrCoverSheets([]);\r\n        self.arrResponseDocs([]);\r\n        self.cntResponseDocs(0);\r\n      }\r\n    });\r\n\r\n    /*var Item = function(reqNumber, requestStatus, internalDueDate, sample, title, status, docCount, modified, visibleRow) {\r\n\t\t    this.reqNumber= ko.observable(reqNumber);\r\n\t\t    this.requestStatus= ko.observable(requestStatus);    \r\n\t\t    this.internalDueDate= ko.observable(internalDueDate);    \r\n\t\t    this.sample= ko.observable(sample);    \r\n\t\t    this.title= ko.observable(title);    \r\n\t\t    this.status= ko.observable(status);    \r\n\t\t    this.docCount= ko.observable(docCount);    \r\n\t\t    this.modified= ko.observable(modified);    \r\n\t\t    this.visibleRow = ko.observable(visibleRow);    \r\n\t\t};*/\r\n\r\n    /*\tself.addNewData = function(newData) {\r\n  \t\t  var newItems = ko.utils.arrayMap(newData, function(item) {\r\n       \t\treturn {\r\n       \t\t\treqNumber: item.reqNumber,\r\n       \t\t\trequestStatus: item.requestStatus,\r\n       \t\t\tinternalDueDate: item.internalDueDate,\r\n       \t\t\tsample: item.sample,\r\n       \t\t\ttitle: item.title,\r\n       \t\t\tstatus: item.status,\r\n       \t\t\tdocCount: item.docCount,\r\n       \t\t\tmodified: item.modified,\r\n       \t\t\tvisibleRow: item.visibleRow,\r\n\t\t };\r\n   \t\t });\r\n\t    //take advantage of push accepting variable arguments\r\n\t    self.arrResponses.push.apply(self.arrResponses, newItems);\r\n\t};*/\r\n\r\n    /*\r\n\r\n\tself.addNewData = function(newData) {\r\n  \t\t  var newItems = ko.utils.arrayMap(newData, function(item) {\r\n       \t\treturn {\r\n       \t\t\treqNumber: item.reqNumber,\r\n       \t\t\trequestStatus: item.requestStatus,\r\n       \t\t\tinternalDueDate: item.internalDueDate,\r\n       \t\t\tsample: item.sample,\r\n       \t\t\ttitle: item.title,\r\n       \t\t\tstatus: item.status,\r\n       \t\t\tdocCount: item.docCount,\r\n       \t\t\tmodified: item.modified,\r\n       \t\t\tvisibleRow: item.visibleRow,\r\n\t\t };\r\n   \t\t });\r\n\t    //take advantage of push accepting variable arguments\r\n\t    self.arrResponses.push.apply(self.arrResponses, newItems);\r\n\t};*/\r\n\r\n    self.FilterChanged = function () {\r\n      setTimeout(function () {\r\n        var requestID = self.filterRequestID();\r\n        var requestStatus = self.filterRequestStatus();\r\n        var requestIntDueDate = self.filterRequestIntDueDate();\r\n        var sampleNum = self.filterSampleNum();\r\n        var responseName = self.filterResponseName();\r\n        var responseStatus = self.filterResponseStatus();\r\n\r\n        if (\r\n          !requestID &&\r\n          !requestStatus &&\r\n          !requestIntDueDate &&\r\n          !sampleNum &&\r\n          !responseName &&\r\n          !responseStatus\r\n        ) {\r\n          ko.utils.arrayForEach(self.arrResponses(), function (item) {\r\n            item.visibleRow(true);\r\n          });\r\n\r\n          self.arrFilteredResponsesCount(self.arrResponses().length);\r\n        }\r\n\r\n        var result = [];\r\n\r\n        requestID = !requestID ? \"\" : requestID;\r\n        requestStatus = !requestStatus ? \"\" : requestStatus;\r\n        requestIntDueDate = !requestIntDueDate ? \"\" : requestIntDueDate;\r\n        sampleNum = !sampleNum ? \"\" : sampleNum;\r\n        responseName = !responseName ? \"\" : responseName;\r\n        responseStatus = !responseStatus ? \"\" : responseStatus;\r\n\r\n        var count = 0;\r\n        ko.utils.arrayForEach(self.arrResponses(), function (item) {\r\n          var hide = false;\r\n          if (!hide && requestID != \"\" && item.reqNumber != requestID)\r\n            hide = true;\r\n          if (\r\n            !hide &&\r\n            requestStatus != \"\" &&\r\n            item.requestStatus != requestStatus\r\n          )\r\n            hide = true;\r\n          if (\r\n            !hide &&\r\n            requestIntDueDate != \"\" &&\r\n            item.internalDueDate != requestIntDueDate\r\n          )\r\n            hide = true;\r\n          if (!hide && sampleNum != \"\" && item.sample != sampleNum) hide = true;\r\n          if (!hide && responseName != \"\" && item.title != responseName)\r\n            hide = true;\r\n          if (!hide && responseStatus != \"\" && item.status != responseStatus)\r\n            hide = true;\r\n\r\n          item.visibleRow(!hide);\r\n\r\n          if (!hide) count++;\r\n        });\r\n\r\n        self.arrFilteredResponsesCount(count);\r\n      }, 100);\r\n    };\r\n  }\r\n\r\n  var _myViewModel = new ViewModel();\r\n  ko.applyBindings(_myViewModel);\r\n\r\n  LoadInfo();\r\n\r\n  async function LoadInfo() {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    const m_currentUser = web.get_currentUser();\r\n    currCtx.load(m_currentUser);\r\n\r\n    var requestList = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetListTitleRequests());\r\n    var requestQuery = new SP.CamlQuery();\r\n    requestQuery.set_viewXml(\r\n      '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy></Query></View>'\r\n    );\r\n    m_requestItems = requestList.getItems(requestQuery);\r\n    currCtx.load(\r\n      m_requestItems,\r\n      \"Include(ID, Title, ReqSubject, ReqStatus, IsSample, InternalDueDate, ActionOffice, Comments, RelatedAudit, ActionItems, EmailSent, ClosedDate, Modified)\"\r\n    );\r\n    /*\r\n    var responseList = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetListTitleResponses());\r\n    var responseQuery = new SP.CamlQuery();\r\n    responseQuery.set_viewXml(\r\n      '<View Scope=\"RecursiveAll\"><Query><OrderBy><FieldRef Name=\"ReqNum\"/></OrderBy></Query></View>'\r\n    );\r\n    m_responseItems = responseList.getItems(responseQuery);\r\n    currCtx.load(\r\n      m_responseItems,\r\n      \"Include(ID, Title, ReqNum, ActionOffice, SampleNumber, ResStatus, Comments, Modified, ClosedDate, ClosedBy)\"\r\n    );\r\n\r\n    //make sure to only pull documents (fsobjtype = 0)\r\n    var responseDocsLib = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetLibTitleResponseDocs());\r\n    var responseDocsQuery = new SP.CamlQuery();\r\n    responseDocsQuery.set_viewXml(\r\n      '<View Scope=\"RecursiveAll\"><Query><OrderBy><FieldRef Name=\"ReqNum\"/><FieldRef Name=\"ResID\"/></OrderBy><Where><Eq><FieldRef Name=\"FSObjType\"/><Value Type=\"Text\">0</Value></Eq></Where></Query></View>'\r\n    );\r\n    m_ResponseDocsItems = responseDocsLib.getItems(responseDocsQuery);\r\n    currCtx.load(\r\n      m_ResponseDocsItems,\r\n      \"Include(ID, FSObjType, Title, ReqNum, ResID, DocumentStatus, RejectReason, ReceiptDate, FileLeafRef, FileDirRef, File_x0020_Size, CheckoutUser, Modified, Editor)\"\r\n    );\r\n    */\r\n    await Promise.all([\r\n      getAllItems(Audit.Common.Utilities.GetListTitleResponses(), [\r\n        \"ID\",\r\n        \"Title\",\r\n        \"ReqNum\",\r\n        \"ActionOffice\",\r\n        \"ReturnReason\",\r\n        \"SampleNumber\",\r\n        \"ResStatus\",\r\n        \"Comments\",\r\n        \"Modified\",\r\n        \"ClosedDate\",\r\n        \"ClosedBy\",\r\n        \"POC\",\r\n      ]).then((result) => (m_responseItems = result)),\r\n      getAllItems(Audit.Common.Utilities.GetLibTitleResponseDocs(), [\r\n        \"ID\",\r\n        \"Title\",\r\n        \"ReqNum\",\r\n        \"ResID\",\r\n        \"DocumentStatus\",\r\n        \"ReceiptDate\",\r\n        \"FileLeafRef\",\r\n        \"FileDirRef\",\r\n        \"File_x0020_Size\",\r\n        \"Modified\",\r\n        \"Editor\",\r\n      ]).then((result) => (m_ResponseDocsItems = result)),\r\n    ]);\r\n\r\n    currCtx.executeQueryAsync(OnSuccess, OnFailure);\r\n    function OnSuccess(sender, args) {\r\n      var requestList = web\r\n        .get_lists()\r\n        .getByTitle(Audit.Common.Utilities.GetListTitleRequests());\r\n      var requestQuery = new SP.CamlQuery();\r\n      requestQuery.set_viewXml(\r\n        '<View><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy></Query></View>'\r\n      );\r\n      var m_requestItemsWithPerms = requestList.getItems(requestQuery);\r\n      currCtx.load(\r\n        m_requestItemsWithPerms,\r\n        \"Include(ID, Title, ReqSubject, ReqStatus, IsSample, InternalDueDate, ActionOffice, Comments, RelatedAudit, ActionItems, EmailSent, ClosedDate, Modified, HasUniqueRoleAssignments, RoleAssignments, RoleAssignments.Include(Member, RoleDefinitionBindings))\"\r\n      );\r\n\r\n      function OnSuccess2(sender, args) {\r\n        m_bHasAccessToViewPerms = true;\r\n        m_requestItems = m_requestItemsWithPerms;\r\n        $(\"#divRefresh\").show();\r\n        m_fnLoadData();\r\n      }\r\n      function OnFailure2(sender, args) {\r\n        $(\"#divRefresh\").show();\r\n        m_fnLoadData();\r\n      }\r\n\r\n      currCtx.executeQueryAsync(OnSuccess2, OnFailure2);\r\n    }\r\n    function OnFailure(sender, args) {\r\n      $(\"#divRefresh\").hide();\r\n      $(\"#divLoading\").hide();\r\n\r\n      statusId = SP.UI.Status.addStatus(\r\n        \"Request failed: \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n      );\r\n      SP.UI.Status.setStatusPriColor(statusId, \"red\");\r\n    }\r\n  }\r\n\r\n  function m_fnLoadData() {\r\n    LoadRequests();\r\n    LoadResponses();\r\n    LoadResponseDocs();\r\n\r\n    $(\"#tabs\").tabs().show();\r\n\r\n    LoadTabStatusReport(m_arrResponses);\r\n  }\r\n\r\n  function OnLoadDisplayTabAndRequest() {\r\n    var paramResponseNum = GetUrlKeyValue(\"ResNum\");\r\n    if (paramResponseNum != null && paramResponseNum != \"\") {\r\n      _myViewModel.filterResponseName2(paramResponseNum);\r\n    }\r\n\r\n    var paramTabIndex = GetUrlKeyValue(\"Tab\");\r\n    if (paramTabIndex != null && paramTabIndex != \"\") {\r\n      $(\"#tabs\").tabs(\"option\", \"active\", paramTabIndex);\r\n    }\r\n  }\r\n\r\n  function LoadRequests() {\r\n    m_bigMap = new Object();\r\n    m_arrRequests = new Array();\r\n\r\n    var cnt = 0;\r\n    var listItemEnumerator = m_requestItems.getEnumerator();\r\n    while (listItemEnumerator.moveNext()) {\r\n      var oListItem = listItemEnumerator.get_current();\r\n\r\n      var id = oListItem.get_item(\"ID\");\r\n      var number = oListItem.get_item(\"Title\");\r\n      var status = oListItem.get_item(\"ReqStatus\");\r\n      var sample = oListItem.get_item(\"IsSample\");\r\n      var emailSent = oListItem.get_item(\"EmailSent\");\r\n      var subject = oListItem.get_item(\"ReqSubject\");\r\n      if (subject == null) subject = \"\";\r\n\r\n      var internalDueDate = oListItem.get_item(\"InternalDueDate\");\r\n      var closedDate = oListItem.get_item(\"ClosedDate\");\r\n\r\n      internalDueDate != null\r\n        ? (internalDueDate = internalDueDate.format(\"MM/dd/yyyy\"))\r\n        : (internalDueDate = \"\");\r\n      closedDate != null\r\n        ? (closedDate = closedDate.format(\"MM/dd/yyyy\"))\r\n        : (closedDate = \"\");\r\n\r\n      var arrActionOffice = oListItem.get_item(\"ActionOffice\");\r\n      var actionOffice = \"\";\r\n      for (var x = 0; x < arrActionOffice.length; x++) {\r\n        actionOffice +=\r\n          \"<div>\" + arrActionOffice[x].get_lookupValue() + \"</div>\";\r\n      }\r\n\r\n      var comments = oListItem.get_item(\"Comments\");\r\n      var relatedAudit = oListItem.get_item(\"RelatedAudit\");\r\n      var actionItems = oListItem.get_item(\"ActionItems\");\r\n\r\n      if (comments == null) comments = \"\";\r\n      if (relatedAudit == null) relatedAudit = \"\";\r\n      if (actionItems == null) actionItems = \"\";\r\n\r\n      var requestObject = new Object();\r\n      requestObject[\"ID\"] = id;\r\n      requestObject[\"number\"] = number;\r\n      requestObject[\"subject\"] = subject;\r\n      requestObject[\"status\"] = status;\r\n      requestObject[\"internalDueDate\"] = internalDueDate;\r\n      requestObject[\"sample\"] = sample;\r\n      requestObject[\"responses\"] = new Array();\r\n      requestObject[\"actionOffice\"] = actionOffice;\r\n      requestObject[\"comments\"] = comments;\r\n      requestObject[\"emailSent\"] = emailSent;\r\n      requestObject[\"closedDate\"] = closedDate;\r\n      requestObject[\"relatedAudit\"] = relatedAudit;\r\n      requestObject[\"actionItems\"] = actionItems;\r\n\r\n      //if logged in user is a site owner, we want to see if the request has special perms so that the site owner only sees a filtered set of requests that have been specifically given special perms.\r\n      //otherwise, if it's a user in the special perms group, this check is skipped and they'll see whatever they have access to\r\n      if (m_bHasAccessToViewPerms) {\r\n        try {\r\n          var permissionsToCheck = SP.PermissionKind.viewListItems;\r\n          var match1 = Audit.Common.Utilities.CheckSPItemHasGroupPermission(\r\n            oListItem,\r\n            Audit.Common.Utilities.GetGroupNameSpecialPerm1(),\r\n            permissionsToCheck\r\n          );\r\n          var match2 = Audit.Common.Utilities.CheckSPItemHasGroupPermission(\r\n            oListItem,\r\n            Audit.Common.Utilities.GetGroupNameSpecialPerm2(),\r\n            permissionsToCheck\r\n          );\r\n\r\n          if (!match1 && !match2) continue;\r\n        } catch (err) {}\r\n      }\r\n\r\n      requestObject[\"arrIndex\"] = cnt;\r\n      m_arrRequests.push(requestObject);\r\n\r\n      m_bigMap[\"request-\" + number] = requestObject;\r\n      cnt++;\r\n    }\r\n  }\r\n\r\n  function LoadResponses() {\r\n    m_arrResponses = new Array();\r\n\r\n    var cnt = 0;\r\n    // var listItemEnumerator = m_responseItems.getEnumerator();\r\n    // while (listItemEnumerator.moveNext()) {\r\n    //   var oListItem = listItemEnumerator.get_current();\r\n\r\n    for (const oListItem of m_responseItems) {\r\n      var number = oListItem.get_item(\"ReqNum\");\r\n      if (number != null) {\r\n        number = number.get_lookupValue();\r\n\r\n        var responseObject = new Object();\r\n        responseObject[\"request\"] = m_bigMap[\"request-\" + number]; //GetRequest( number );\r\n        if (!responseObject.request || !responseObject.request.emailSent)\r\n          //they should see it if they have access; then there's probably a permissions issue\r\n          continue;\r\n\r\n        //Special permissions users should only see responses that have been approved for QA or closed. The permissions should take care of this, but this is an extra safety measure\r\n        responseObject[\"resStatus\"] = oListItem.get_item(\"ResStatus\");\r\n        if (\r\n          responseObject[\"resStatus\"] != \"4-Approved for QA\" &&\r\n          responseObject[\"resStatus\"] != \"7-Closed\" &&\r\n          responseObject[\"resStatus\"] != \"6-Reposted After Rejection\"\r\n        )\r\n          continue;\r\n\r\n        responseObject[\"actionOffice\"] = oListItem.get_item(\"ActionOffice\");\r\n        if (responseObject[\"actionOffice\"] == null)\r\n          responseObject[\"actionOffice\"] = \"\";\r\n        else\r\n          responseObject[\"actionOffice\"] =\r\n            responseObject[\"actionOffice\"].get_lookupValue();\r\n        if (responseObject[\"actionOffice\"] == \"\") continue;\r\n\r\n        responseObject[\"ID\"] = oListItem.get_item(\"ID\");\r\n        responseObject[\"number\"] = number;\r\n\r\n        var title = oListItem.get_item(\"Title\");\r\n        responseObject[\"title\"] = title;\r\n\r\n        var modified = oListItem.get_item(\"Modified\");\r\n        modified != null\r\n          ? (modified = modified.format(\"MM/dd/yyyy hh:mm tt\"))\r\n          : (modified = \"\");\r\n        responseObject[\"modified\"] = modified;\r\n\r\n        var closedDate = oListItem.get_item(\"ClosedDate\");\r\n        closedDate != null\r\n          ? (closedDate = closedDate.format(\"MM/dd/yyyy\"))\r\n          : (closedDate = \"\");\r\n        responseObject[\"closedDate\"] = closedDate;\r\n\r\n        var comments = oListItem.get_item(\"Comments\");\r\n        if (comments == null) comments = \"\";\r\n        responseObject[\"comments\"] = comments;\r\n\r\n        responseObject[\"closedBy\"] =\r\n          Audit.Common.Utilities.GetFriendlyDisplayName(oListItem, \"ClosedBy\");\r\n\r\n        responseObject[\"sample\"] = oListItem.get_item(\"SampleNumber\");\r\n        if (responseObject[\"sample\"] == null) responseObject[\"sample\"] = \"\";\r\n\r\n        responseObject[\"coversheets\"] = new Array();\r\n        responseObject[\"responseDocs\"] = new Array();\r\n\r\n        responseObject[\"arrIndex\"] = cnt;\r\n        m_arrResponses.push(responseObject);\r\n\r\n        m_bigMap[\"response-\" + title] = responseObject;\r\n        cnt++;\r\n      }\r\n    }\r\n  }\r\n\r\n  function LoadResponseDocs() {\r\n    // var listItemEnumerator = m_ResponseDocsItems.getEnumerator();\r\n    // while (listItemEnumerator.moveNext()) {\r\n    //   var oListItem = listItemEnumerator.get_current();\r\n    for (var oListItem of m_ResponseDocsItems) {\r\n      if (\r\n        oListItem.get_item(\"DocumentStatus\") == \"Open\" ||\r\n        oListItem.get_item(\"DocumentStatus\") == \"Marked for Deletion\" ||\r\n        oListItem.get_item(\"DocumentStatus\") == \"Submitted\"\r\n      )\r\n        //shouldn't see any documents that have been uploaded by AO but not sent to them by IA\r\n        continue;\r\n\r\n      var responseDocID = oListItem.get_item(\"ID\");\r\n\r\n      var requestNumber = oListItem.get_item(\"ReqNum\");\r\n      if (requestNumber != null)\r\n        requestNumber = requestNumber.get_lookupValue();\r\n\r\n      var responseID = oListItem.get_item(\"ResID\");\r\n      if (responseID != null) responseID = responseID.get_lookupValue();\r\n\r\n      if (requestNumber == null || responseID == null) continue;\r\n\r\n      try {\r\n        var bigMapItem = m_bigMap[\"response-\" + responseID];\r\n        var indexOfArrResponses = bigMapItem.arrIndex;\r\n        var oResponse = m_arrResponses[indexOfArrResponses];\r\n        if (oResponse) {\r\n          var responseDocObject = new Object();\r\n          responseDocObject[\"ID\"] = oListItem.get_item(\"ID\");\r\n          responseDocObject[\"title\"] = oListItem.get_item(\"FileLeafRef\");\r\n          responseDocObject[\"folder\"] = oListItem.get_item(\"FileDirRef\");\r\n          responseDocObject[\"documentStatus\"] =\r\n            oListItem.get_item(\"DocumentStatus\");\r\n\r\n          responseDocObject[\"rejectReason\"] =\r\n            oListItem.get_item(\"RejectReason\");\r\n          if (responseDocObject[\"rejectReason\"] == null)\r\n            responseDocObject[\"rejectReason\"] = \"\";\r\n\r\n          var fileSize = oListItem.get_item(\"File_x0020_Size\");\r\n          fileSize = Audit.Common.Utilities.GetFriendlyFileSize(fileSize);\r\n          responseDocObject[\"fileSize\"] = fileSize;\r\n\r\n          var receiptDate = \"\";\r\n          if (\r\n            oListItem.get_item(\"ReceiptDate\") != null &&\r\n            oListItem.get_item(\"ReceiptDate\") != \"\"\r\n          )\r\n            receiptDate = oListItem\r\n              .get_item(\"ReceiptDate\")\r\n              .format(\"MM/dd/yyyy\");\r\n          responseDocObject[\"receiptDate\"] = receiptDate;\r\n\r\n          var modifiedDate = \"\";\r\n          if (\r\n            oListItem.get_item(\"Modified\") != null &&\r\n            oListItem.get_item(\"Modified\") != \"\"\r\n          )\r\n            modifiedDate = oListItem\r\n              .get_item(\"Modified\")\r\n              .format(\"MM/dd/yyyy hh:mm tt\");\r\n          responseDocObject[\"modifiedDate\"] = modifiedDate;\r\n\r\n          responseDocObject[\"modifiedBy\"] =\r\n            Audit.Common.Utilities.GetFriendlyDisplayName(oListItem, \"Editor\");\r\n          responseDocObject[\"checkedOutBy\"] =\r\n            Audit.Common.Utilities.GetFriendlyDisplayName(\r\n              oListItem,\r\n              \"CheckoutUser\"\r\n            );\r\n\r\n          oResponse[\"responseDocs\"].push(responseDocObject);\r\n          //bigMapItem[\"responseDocs\"].push( responseDocObject );\r\n        }\r\n      } catch (err) {}\r\n    }\r\n  }\r\n\r\n  function LoadTabStatusReport(arr) {\r\n    if (arr == null) return;\r\n\r\n    var bLoadTest = GetUrlKeyValue(\"LoadTest\");\r\n\r\n    var responseArr = new Array();\r\n\r\n    var arrLength = arr.length;\r\n    while (arrLength--) {\r\n      var oResponse = arr[arrLength];\r\n\r\n      var responseTitle = oResponse.title;\r\n      var requestStatus = oResponse.request.status;\r\n      var responseStatus = oResponse.resStatus;\r\n\r\n      var aResponse = {\r\n        reqNumber: oResponse.request.number,\r\n        requestStatus: requestStatus,\r\n        internalDueDate: oResponse.request.internalDueDate,\r\n        sample: oResponse.sample,\r\n        title: responseTitle,\r\n        status: responseStatus,\r\n        docCount: oResponse.responseDocs.length,\r\n        modified: oResponse.modified,\r\n        visibleRow: ko.observable(true),\r\n      };\r\n\r\n      responseArr.push(aResponse);\r\n\r\n      if (bLoadTest) {\r\n        for (var x = 0; x < 299; x++) {\r\n          responseArr.push(aResponse);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (responseArr.length > 0) {\r\n      DoUpdateModel(responseArr);\r\n    } else {\r\n      Audit.Common.Utilities.OnLoadDisplayTimeStamp();\r\n    }\r\n\r\n    //_myViewModel.addNewData( responseArr );\r\n    //ko.utils.arrayPushAll( _myViewModel.arrResponses(), responseArr );\r\n    //_myViewModel.arrResponses.valueHasMutated();\r\n  }\r\n\r\n  function DoUpdateModel(arrResponsesToAdd) {\r\n    var subArr = [];\r\n\r\n    var bContinue = true;\r\n    var batchSize = 250;\r\n\r\n    if (arrResponsesToAdd.length == 0) {\r\n      //_myViewModel.doSort ( true );\r\n      //_myViewModel.arrResponses.valueHasMutated();\r\n      bContinue = false;\r\n\r\n      //setTimeout( function()\r\n      //{\r\n      Audit.Common.Utilities.OnLoadDisplayTimeStamp();\r\n      BindHandlersOnLoad();\r\n      OnLoadDisplayTabAndRequest();\r\n\r\n      //}, 100 );\r\n    } else if (arrResponsesToAdd.length >= batchSize) {\r\n      subArr = arrResponsesToAdd.slice(0, batchSize);\r\n      arrResponsesToAdd.splice(0, batchSize);\r\n    } else if (arrResponsesToAdd.length > 0) {\r\n      subArr = arrResponsesToAdd.slice(0, arrResponsesToAdd.length);\r\n      arrResponsesToAdd.splice(0, arrResponsesToAdd.length);\r\n    }\r\n\r\n    if (bContinue) {\r\n      ko.utils.arrayPushAll(_myViewModel.arrResponses(), subArr);\r\n      if (arrResponsesToAdd.length == 0) _myViewModel.doSort(true);\r\n\r\n      _myViewModel.arrResponses.valueHasMutated();\r\n\r\n      setTimeout(function () {\r\n        DoUpdateModel(arrResponsesToAdd);\r\n      }, 100);\r\n    }\r\n  }\r\n\r\n  function LoadTabResponseInfoCoverSheets(oResponse) {\r\n    _myViewModel.arrCoverSheets([]);\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var coverSheetLib = web\r\n      .get_lists()\r\n      .getByTitle(Audit.Common.Utilities.GetLibTitleCoverSheets());\r\n    var coverSheetQuery = new SP.CamlQuery();\r\n    coverSheetQuery.set_viewXml(\r\n      '<View Scope=\"RecursiveAll\"><Query><OrderBy><FieldRef Name=\"Title\"/></OrderBy><Where><Eq><FieldRef Name=\"ReqNum\"/><Value Type=\"Text\">' +\r\n        oResponse.request.number +\r\n        \"</Value></Eq></Where></Query></View>\"\r\n    );\r\n    var m_subsetCoverSheetItems = coverSheetLib.getItems(coverSheetQuery);\r\n    currCtx.load(\r\n      m_subsetCoverSheetItems,\r\n      \"Include(ID, Title, ReqNum, ActionOffice, FileLeafRef, FileDirRef)\"\r\n    );\r\n\r\n    var data = { oResponse: oResponse };\r\n    function OnSuccess(sender, args) {\r\n      var arrCS = new Array();\r\n\r\n      var listItemEnumerator = m_subsetCoverSheetItems.getEnumerator();\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n\r\n        if (oListItem.get_item(\"ActionOffice\") != null) {\r\n          var arrActionOffice = oListItem.get_item(\"ActionOffice\");\r\n          if (arrActionOffice.length > 0) {\r\n            for (var y = 0; y < arrActionOffice.length; y++) {\r\n              var curActionOffice = arrActionOffice[y].get_lookupValue();\r\n\r\n              if (curActionOffice == this.oResponse.actionOffice) {\r\n                var csFolder = oListItem.get_item(\"FileDirRef\");\r\n                var csTitle = oListItem.get_item(\"FileLeafRef\");\r\n\r\n                var encodedTitle = csTitle.replace(/'/g, \"&#39\");\r\n                arrCS.push({\r\n                  folder: csFolder,\r\n                  title: csTitle,\r\n                  link:\r\n                    \"STSNavigate('../_layouts/download.aspx?SourceUrl=\" +\r\n                    csFolder +\r\n                    \"/\" +\r\n                    encodedTitle +\r\n                    \"')\",\r\n                });\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      ko.utils.arrayPushAll(_myViewModel.arrCoverSheets(), arrCS);\r\n      _myViewModel.arrCoverSheets.valueHasMutated();\r\n    }\r\n    function OnFailure(sender, args) {}\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, OnSuccess),\r\n      Function.createDelegate(data, OnFailure)\r\n    );\r\n  }\r\n\r\n  function LoadTabResponseInfoResponseDocs(oResponse) {\r\n    _myViewModel.arrResponseDocs([]);\r\n    _myViewModel.cntResponseDocs(0);\r\n\r\n    if (oResponse == null || oResponse.responseDocs.length == 0) {\r\n      //an open response is selected and there are no documents\r\n      return;\r\n    }\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    for (var z = 0; z < oResponse.responseDocs.length; z++) {\r\n      var oResponseDoc = oResponse.responseDocs[z];\r\n\r\n      //this loads on execute\r\n      oResponseDoc[\"docIcon\"] = web.mapToIcon(\r\n        oResponseDoc.title,\r\n        \"\",\r\n        SP.Utilities.IconSize.Size16\r\n      );\r\n    }\r\n\r\n    function OnSuccess(sender, args) {\r\n      RenderResponses(oResponse);\r\n    }\r\n    function OnFailure(sender, args) {\r\n      statusId = SP.UI.Status.addStatus(\r\n        \"Request failed: \" + args.get_message() + \"\\n\" + args.get_stackTrace()\r\n      );\r\n      SP.UI.Status.setStatusPriColor(statusId, \"red\");\r\n    }\r\n    currCtx.executeQueryAsync(OnSuccess, OnFailure);\r\n\r\n    function RenderResponses(oResponse) {\r\n      if (oResponse == null || oResponse.responseDocs == null) return;\r\n\r\n      var arrResponseSummary = new Array();\r\n      for (var z = 0; z < oResponse.responseDocs.length; z++) {\r\n        var oResponseDoc = oResponse.responseDocs[z];\r\n\r\n        oResponseDoc.docIcon = oResponseDoc.docIcon.get_value();\r\n        oResponseDoc.styleTag = Audit.Common.Utilities.GetResponseDocStyleTag2(\r\n          oResponseDoc.documentStatus\r\n        );\r\n        oResponseDoc.link =\r\n          \"STSNavigate('../_layouts/download.aspx?SourceUrl=\" +\r\n          oResponseDoc.folder +\r\n          \"/\" +\r\n          oResponseDoc.title +\r\n          \"')\";\r\n\r\n        var bFound = false;\r\n        for (var b = 0; b < arrResponseSummary.length; b++) {\r\n          if (arrResponseSummary[b].responseTitle == oResponse.title) {\r\n            bFound = true;\r\n            arrResponseSummary[b].responseDocs.push(oResponseDoc);\r\n            break;\r\n          }\r\n        }\r\n        if (!bFound) {\r\n          var oObject = new Object();\r\n\r\n          var arrResponseDocs = new Array();\r\n          arrResponseDocs.push(oResponseDoc);\r\n\r\n          oObject[\"responseTitle\"] = oResponse.title;\r\n          oObject[\"responseDocs\"] = arrResponseDocs;\r\n          oObject[\"response\"] = oResponse;\r\n\r\n          arrResponseSummary.push(oObject);\r\n        }\r\n      }\r\n\r\n      ko.utils.arrayPushAll(_myViewModel.arrResponseDocs(), arrResponseSummary);\r\n      _myViewModel.arrResponseDocs.valueHasMutated();\r\n      _myViewModel.cntResponseDocs(oResponse.responseDocs.length);\r\n\r\n      Audit.Common.Utilities.BindHandlerResponseDoc();\r\n    }\r\n  }\r\n\r\n  function m_fnRefresh() {\r\n    var curPath = location.pathname;\r\n\r\n    var tabIndex = $(\"#tabs\").tabs(\"option\", \"active\");\r\n    curPath += \"?Tab=\" + tabIndex;\r\n\r\n    if (tabIndex == 1) {\r\n      var responseNum = $(\"#ddlResponses\").val();\r\n      if (responseNum != \"\") curPath += \"&ResNum=\" + responseNum;\r\n    }\r\n\r\n    location.href = curPath;\r\n  }\r\n\r\n  function BindHandlersOnLoad() {\r\n    BindPrintButton(\r\n      \"#btnPrint1\",\r\n      \"#divStatusReportRespones\",\r\n      \"Special Permissions Response Status Report\"\r\n    );\r\n    //////////Note: for the export to work, make sure this is added to the html: <iframe id=\"CsvExpFrame\" style=\"display: none\"></iframe>\r\n    BindExportButton(\r\n      \".export1\",\r\n      \"SPResponseStatusReport_\",\r\n      \"tblStatusReportResponses\"\r\n    );\r\n  }\r\n\r\n  function BindPrintButton(btnPrint, divTbl, pageTitle) {\r\n    $(btnPrint).on(\"click\", function () {\r\n      Audit.Common.Utilities.PrintStatusReport(pageTitle, divTbl);\r\n    });\r\n  }\r\n\r\n  function BindExportButton(btnExport, fileNamePrefix, tbl) {\r\n    $(btnExport).on(\"click\", function (event) {\r\n      var curDate = new Date().format(\"yyyyMMdd_hhmmtt\");\r\n      Audit.Common.Utilities.ExportToCsv(fileNamePrefix + curDate, tbl);\r\n    });\r\n  }\r\n\r\n  var publicMembers = {\r\n    Load: m_fnLoadData,\r\n    Refresh: m_fnRefresh,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n"],
  "mappings": "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",
  "names": ["People", "html", "html", "editTemplate", "html", "viewTemplate", "editTemplate", "html", "editTemplate", "html", "editTemplate", "html", "viewTemplate", "editTemplate", "html", "data", "editTemplate", "html", "editTemplate", "html", "viewTemplate", "editTemplate", "html", "reject", "oRoleDefinition", "data", "oGroup", "reject", "reject", "group", "data", "reject", "People", "module", "html", "id", "oGroup", "onUpdateAOPermsSucceeded", "onUpdateAOPermsFailed", "roleDefBindingCollRestrictedContribute", "data", "html", "InitReport", "paramShowSiteActionsToAnyone", "statusId", "requestList", "requestQuery", "sender", "args", "id", "data", "oResponse", "z", "oResponseDoc"]
}
